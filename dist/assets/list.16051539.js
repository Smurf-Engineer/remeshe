const S=(m,e)=>{const c=m.state({name:`${e.name}.KeyListState`,default:[]}),d=m.state({name:`${e.name}.ItemState`}),u=m.query({name:`${e.name}.ItemListQuery`,impl:({get:n})=>n(c()).map(t=>n(d(t)))}),y=m.event({name:`${e.name}.ListChangedEvent`}),I=m.event({name:`${e.name}.ItemAddedEvent`}),L=m.event({name:`${e.name}.FailedToAddItemEvent`}),i=m.event({name:`${e.name}.ItemUpdatedEvent`}),$=m.event({name:`${e.name}.FailedToUpdateItemEvent`}),E=m.event({name:`${e.name}.ItemDeletedEvent`}),v=m.command({name:`${e.name}.setList`,impl:({get:n},t)=>{const a=t.map(e.key),s=n(u());return[t.map((r,l)=>d(a[l]).new(r)),c().new(a),y({previous:s,current:t})]}}),Q=m.command({name:`${e.name}.addItem`,impl:({get:n},t)=>{const a=n(c()),s=n(u()),r=e.key(t);return a.includes(r)?L({reason:"item already exists"}):[v(s.concat(t)),I({item:t})]}}),f=m.command({name:`${e.name}.deleteItem`,impl:({get:n},t)=>{const s=n(u()).filter(l=>e.key(l)!==t),r=n(d(t));return[v(s),E({item:r})]}}),A=m.command({name:`${e.name}.updateItem`,impl:({get:n},t)=>{const a=e.key(t);if(!n(c()).includes(a))return $({item:t,reason:"item does not exist"});const l=n(u()).map(k=>e.key(k)===a?t:k),F=n(d(a));return[v(l),i({previous:F,current:t})]}});return{command:{setList:v,addItem:Q,deleteItem:f,updateItem:A},query:{KeyListQuery:c.Query,ItemQuery:d.Query,ItemListQuery:u},event:{ListChangedEvent:y,ItemAddedEvent:I,FailedToAddItemEvent:L,ItemUpdatedEvent:i,FailedToUpdateItemEvent:$,ItemDeletedEvent:E}}};export{S as L};
//# sourceMappingURL=list.16051539.js.map
