import{C as E,R as t,r as w}from"./vendor.526a8a9f.js";import{u as l,g as h,a as q,R as D,h as b}from"./remesh-logger.0aa7cbad.js";const f=(...e)=>(r,c)=>c.pipe(E(...e)),o=e=>new Promise(r=>setTimeout(r,e)),s=D.domain({name:"counter",impl:e=>{const r=e.state({name:"CountState",default:0}),c=e.query({name:"CountIncreQuery",impl:async({get:n})=>{const u=n(r());return await o(200),u+1}}),m=e.query({name:"CountDecreQuery",impl:async({get:n})=>{const u=n(r());return await o(200),u-1}}),y=e.query({name:"CountDoubleQuery",impl:async({get:n})=>{const u=await n(r());return await o(200),u*2}}),a=e.query({name:"CountQuery",scheduler:f(0),impl:async({get:n})=>{const[u,C,Q]=await Promise.all([n(c()),n(m()),n(y())]);return{incre:u,decre:C,double:Q}}}),i=e.query({name:"UnwrappedCountQuery",impl:({unwrap:n})=>n(a())}),p=e.command({name:"incre",impl:({get:n})=>{const u=n(r());return r().new(u+1)}}),d=e.command({name:"decre",impl:({get:n})=>{const u=n(r());return r().new(u-1)}});return{query:{CountQuery:a,UnwrappedCountQuery:i},command:{incre:p,decre:d}}}});var U=()=>{const e=l(s()),r=h(e.query.CountQuery()),c=q(e.query.UnwrappedCountQuery());return t.createElement("div",null,t.createElement("h2",null,"Counter"),t.createElement("button",{onClick:()=>e.command.incre()},"Increment")," ",t.createElement("button",{onClick:()=>e.command.decre()},"Decrement"),t.createElement("div",null,t.createElement("h3",null,"Async Query"),t.createElement("pre",null,JSON.stringify(r,null,2))),t.createElement("div",null,t.createElement("h3",null,"Unwrapped Query"),t.createElement("pre",null,JSON.stringify(c,null,2))),t.createElement("div",null,t.createElement("h3",null,"Suspense Query"),t.createElement(w.exports.Suspense,{fallback:"loading..."},t.createElement(R,null))))};const R=()=>{const e=l(s()),r=b(e.query.CountQuery());return t.createElement("pre",null,JSON.stringify(r,null,2))};export{U as default};
//# sourceMappingURL=counter.2c90e657.js.map
