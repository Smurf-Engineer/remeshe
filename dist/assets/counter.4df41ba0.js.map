{"version":3,"file":"counter.4df41ba0.js","sources":["../../projects/remesh-example/src/others/counter.tsx"],"sourcesContent":["import React, { } from 'react'\n\nimport { Remesh } from 'remesh'\nimport { useRemeshDomain, useRemeshQuery } from 'remesh-react'\n\nconst delay = (ms: number) => new Promise<void>((resolve) => setTimeout(resolve, ms))\n\nconst CounterDomain = Remesh.domain({\n  name: 'counter',\n  impl: (domain) => {\n    const CountState = domain.state({\n      name: 'CountState',\n      default: 0,\n    })\n\n    const CountIncreQuery = domain.query({\n      name: 'CountIncreQuery',\n      impl: ({ get }) => {\n        const count = get(CountState())\n        return count + 1\n      },\n    })\n\n    const CountDecreQuery = domain.query({\n      name: 'CountDecreQuery',\n      impl: ({ get }) => {\n        const count = get(CountState())\n        return count - 1\n      },\n    })\n\n    const CountDoubleQuery = domain.query({\n      name: 'CountDoubleQuery',\n      impl: ({ get }) => {\n        const incredCount = get(CountIncreQuery())\n        const decredCount = get(CountDecreQuery())\n        return 2 * (incredCount + decredCount)\n      },\n    })\n\n    const countQuery = domain.query({\n      name: 'CountQuery',\n      impl: ({ get }) => {\n        const [incre, decre, double] = [get(CountIncreQuery()), get(CountDecreQuery()), get(CountDoubleQuery())]\n        return { incre, decre, double }\n      },\n    })\n\n    const incre = domain.command({\n      name: 'incre',\n      impl: ({ get }) => {\n        const count = get(CountState())\n        return CountState().new(count + 1)\n      },\n    })\n\n    const decre = domain.command({\n      name: 'decre',\n      impl: ({ get }) => {\n        const count = get(CountState())\n        return CountState().new(count - 1)\n      },\n    })\n\n    return {\n      query: {\n        count: countQuery,\n      },\n      command: {\n        incre,\n        decre,\n      },\n    }\n  },\n})\n\nexport default () => {\n  const counterDomain = useRemeshDomain(CounterDomain())\n\n  const count = useRemeshQuery(counterDomain.query.count())\n\n  return (\n    <div>\n      <h2>Counter</h2>\n      <button onClick={() => counterDomain.command.incre()}>Increment</button>{' '}\n      <button onClick={() => counterDomain.command.decre()}>Decrement</button>\n      <div>\n        <h3>Count Query</h3>\n        <pre>{JSON.stringify(count, null, 2)}</pre>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"uGAOA,KAAM,GAAgB,EAAO,OAAO,CAClC,KAAM,UACN,KAAM,AAAC,GAAW,CACV,KAAA,GAAa,EAAO,MAAM,CAC9B,KAAM,aACN,QAAS,CAAA,CACV,EAEK,EAAkB,EAAO,MAAM,CACnC,KAAM,kBACN,KAAM,CAAC,CAAE,SAEA,AADO,EAAI,EAAA,CAAY,EACf,CACjB,CACD,EAEK,EAAkB,EAAO,MAAM,CACnC,KAAM,kBACN,KAAM,CAAC,CAAE,SAEA,AADO,EAAI,EAAA,CAAY,EACf,CACjB,CACD,EAEK,EAAmB,EAAO,MAAM,CACpC,KAAM,mBACN,KAAM,CAAC,CAAE,SAAU,CACX,KAAA,GAAc,EAAI,EAAA,CAAiB,EACnC,EAAc,EAAI,EAAA,CAAiB,EACzC,MAAO,GAAmB,GAAA,EAC5B,CAAA,CACD,EAEK,EAAa,EAAO,MAAM,CAC9B,KAAM,aACN,KAAM,CAAC,CAAE,SAAU,CACjB,KAAM,CAAC,EAAO,EAAO,GAAU,CAAC,EAAI,EAAgB,CAAC,EAAG,EAAI,GAAiB,EAAG,EAAI,EAAA,CAAkB,CAAC,EAChG,MAAA,CAAE,MAAO,EAAA,MAAA,EAAO,QAAO,CAChC,CAAA,CACD,EAEK,EAAQ,EAAO,QAAQ,CAC3B,KAAM,QACN,KAAM,CAAC,CAAE,SAAU,CACX,KAAA,GAAQ,EAAI,EAAA,CAAY,EAC9B,MAAO,GAAW,EAAE,IAAI,EAAQ,CAAC,CACnC,CAAA,CACD,EAEK,EAAQ,EAAO,QAAQ,CAC3B,KAAM,QACN,KAAM,CAAC,CAAE,SAAU,CACX,KAAA,GAAQ,EAAI,EAAA,CAAY,EAC9B,MAAO,GAAW,EAAE,IAAI,EAAQ,CAAC,CACnC,CAAA,CACD,EAEM,MAAA,CACL,MAAO,CACL,MAAO,CACT,EACA,QAAS,CACP,QACA,OACF,CAAA,CAEJ,CACF,CAAC,EAED,GAAA,GAAe,IAAM,CACb,KAAA,GAAgB,EAAgB,EAAA,CAAe,EAE/C,EAAQ,EAAe,EAAc,MAAM,MAAO,CAAA,EAExD,uBACG,MACC,KAAA,EAAA,cAAC,KAAG,KAAA,SAAO,EACV,EAAA,cAAA,SAAA,CAAO,QAAS,IAAM,EAAc,QAAQ,MAAM,CAAG,EAAA,WAAS,EAAU,IACxE,EAAA,cAAA,SAAA,CAAO,QAAS,IAAM,EAAc,QAAQ,MAAM,CAAA,EAAG,WAAS,EAC/D,EAAA,cAAC,MACC,KAAA,EAAA,cAAC,UAAG,aAAW,EACd,EAAA,cAAA,MAAA,KAAK,KAAK,UAAU,EAAO,KAAM,CAAC,CAAE,CACvC,CACF,CAEJ"}