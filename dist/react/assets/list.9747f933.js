const x=(c,t)=>{const d=c.state({name:`${t.name}.KeyListState`,default:[]}),k=c.query({name:`${t.name}.KeyListQuery`,impl:({get:e})=>e(d())}),f=c.state({name:`${t.name}.ItemState`}),I=c.query({name:`${t.name}.ItemQuery`,impl:({get:e},n)=>e(f(n))}),y=c.query({name:`${t.name}.ItemListQuery`,impl:({get:e})=>e(k()).map(m=>e(f(m)))}),u=c.command({name:`${t.name}.SetListCommand`,impl:(e,n)=>{const m=n.map(t.key);return[n.map((r,s)=>f(m[s]).new(r)),d().new(m)]}}),C=c.command({name:`${t.name}.AddItemCommand`,impl:({get:e},n)=>{const m=e(d()),r=e(y()),s=t.key(n);return m.includes(s)?null:u(r.concat(n))}}),$=c.command({name:`${t.name}.AddItemListCommand`,impl:({get:e},n)=>{const m=e(d()),r=e(y()),s=[];for(const a of n){const l=t.key(a);m.includes(l)||s.push(a)}return s.length===0?null:u(r.concat(s))}}),K=c.command({name:`${t.name}.DeleteItemCommand`,impl:({get:e},n)=>{const r=e(y()).filter(s=>t.key(s)!==n);return u(r)}}),w=c.command({name:`${t.name}.DeleteItemListCommand`,impl:({get:e},n)=>{const r=e(y()).filter(s=>!n.includes(t.key(s)));return u(r)}}),A=c.command({name:`${t.name}.DeleteAllCommand`,impl:e=>u([])}),h=c.command({name:`${t.name}.UpdateItemCommand`,impl:({get:e},n)=>{const m=t.key(n);if(!e(d()).includes(m))return null;const a=e(y()).map(l=>t.key(l)===m?n:l);return u(a)}}),D=c.command({name:`${t.name}.UpdateItemListCommand`,impl:({get:e},n)=>{const m=e(d()),r=e(y()),s=n.map(l=>t.key(l)),a=[];for(const[l,i]of m.entries()){const L=s.indexOf(i);if(L!==-1){const o=n[L];a.push(o)}else a.push(r[l])}return u(a)}}),Q=c.command({name:`${t.name}.InsertAtCommand`,impl:({get:e},{index:n,item:m})=>{if(e(d()).includes(t.key(m)))return null;const s=e(y()),a=s.slice(0,n).concat(m).concat(s.slice(n));return u(a)}}),S=c.command({name:`${t.name}.InsertBeforeCommand`,impl:({get:e},{before:n,item:m})=>{const r=e(d()),s=t.key(m),a=t.key(n);if(r.includes(s))return null;const l=e(y()),i=[];for(const L of l)t.key(L)===a&&i.push(m),i.push(L);return u(i)}}),q=c.command({name:`${t.name}.InsertAfterCommand`,impl:({get:e},{after:n,item:m})=>{const r=e(d()),s=t.key(m),a=t.key(n);if(r.includes(s))return null;const l=e(y()),i=[];for(const L of l){const o=t.key(L);i.push(L),o===a&&i.push(m)}return u(i)}}),U=c.command({name:`${t.name}.ResetCommand`,impl:()=>{var e;return u((e=t.default)!=null?e:[])}});return c.ignite(()=>{var e;return u((e=t.default)!=null?e:[])}),{command:{SetListCommand:u,AddItemCommand:C,AddItemListCommand:$,DeleteItemCommand:K,DeleteItemListCommand:w,DeleteAllCommand:A,UpdateItemCommand:h,UpdateItemListCommand:D,InsertAtCommand:Q,InsertBeforeCommand:S,InsertAfterCommand:q,ResetCommand:U},query:{KeyListQuery:k,ItemQuery:I,ItemListQuery:y}}};export{x as L};
//# sourceMappingURL=list.9747f933.js.map
