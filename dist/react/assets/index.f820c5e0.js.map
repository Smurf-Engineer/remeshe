{"version":3,"file":"index.f820c5e0.js","sources":["../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduler/performanceTimestampProvider.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduler/animationFrameProvider.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/observable/dom/animationFrames.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/observable/never.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/pairwise.js","../../../projects/domains/src/7guis/Counter.ts","../../../projects/react-demos/src/7guis/Counter.tsx","../../../projects/domains/src/7guis/TemperatureConverter.ts","../../../projects/react-demos/src/7guis/TemperatureConverter.tsx","../../../projects/domains/src/7guis/FlightBooker.ts","../../../projects/react-demos/src/7guis/FlightBooker.tsx","../../../projects/domains/src/7guis/Timer.ts","../../../projects/react-demos/src/7guis/Timer.tsx","../../../projects/domains/src/7guis/CRUD.ts","../../../projects/react-demos/src/7guis/OuterClickWrapper.tsx","../../../projects/react-demos/src/7guis/CRUD.tsx","../../../projects/domains/src/7guis/CircleDrawer.ts","../../../projects/react-demos/src/7guis/CircleDrawer.tsx","../../../projects/domains/src/7guis/Cells.ts","../../../projects/react-demos/src/7guis/Cells.tsx","../../../projects/react-demos/src/7guis/index.tsx"],"sourcesContent":["export var performanceTimestampProvider = {\n    now: function () {\n        return (performanceTimestampProvider.delegate || performance).now();\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=performanceTimestampProvider.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { Subscription } from '../Subscription';\nexport var animationFrameProvider = {\n    schedule: function (callback) {\n        var request = requestAnimationFrame;\n        var cancel = cancelAnimationFrame;\n        var delegate = animationFrameProvider.delegate;\n        if (delegate) {\n            request = delegate.requestAnimationFrame;\n            cancel = delegate.cancelAnimationFrame;\n        }\n        var handle = request(function (timestamp) {\n            cancel = undefined;\n            callback(timestamp);\n        });\n        return new Subscription(function () { return cancel === null || cancel === void 0 ? void 0 : cancel(handle); });\n    },\n    requestAnimationFrame: function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var delegate = animationFrameProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.requestAnimationFrame) || requestAnimationFrame).apply(void 0, __spreadArray([], __read(args)));\n    },\n    cancelAnimationFrame: function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var delegate = animationFrameProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.cancelAnimationFrame) || cancelAnimationFrame).apply(void 0, __spreadArray([], __read(args)));\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=animationFrameProvider.js.map","import { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\nexport function animationFrames(timestampProvider) {\n    return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\nfunction animationFramesFactory(timestampProvider) {\n    var schedule = animationFrameProvider.schedule;\n    return new Observable(function (subscriber) {\n        var subscription = new Subscription();\n        var provider = timestampProvider || performanceTimestampProvider;\n        var start = provider.now();\n        var run = function (timestamp) {\n            var now = provider.now();\n            subscriber.next({\n                timestamp: timestampProvider ? now : timestamp,\n                elapsed: now - start,\n            });\n            if (!subscriber.closed) {\n                subscription.add(schedule(run));\n            }\n        };\n        subscription.add(schedule(run));\n        return subscription;\n    });\n}\nvar DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n//# sourceMappingURL=animationFrames.js.map","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\nexport var NEVER = new Observable(noop);\nexport function never() {\n    return NEVER;\n}\n//# sourceMappingURL=never.js.map","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector) {\n    if (keySelector === void 0) { keySelector = identity; }\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate(function (source, subscriber) {\n        var previousKey;\n        var first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n//# sourceMappingURL=distinctUntilChanged.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function pairwise() {\n    return operate(function (source, subscriber) {\n        var prev;\n        var hasPrev = false;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var p = prev;\n            prev = value;\n            hasPrev && subscriber.next([p, value]);\n            hasPrev = true;\n        }));\n    });\n}\n//# sourceMappingURL=pairwise.js.map","import { Remesh } from 'remesh'\n\nexport const CounterDomain = Remesh.domain({\n  name: 'CounterDomain',\n  impl: (domain) => {\n    const CountState = domain.state({\n      name: 'CounterState',\n      default: 0,\n    })\n\n    const CountQuery = domain.query({\n      name: 'CounterQuery',\n      impl: ({ get }) => {\n        return get(CountState())\n      },\n    })\n\n    const IncreCommand = domain.command({\n      name: 'IncreCommand',\n      impl: ({ get }) => {\n        const count = get(CountState())\n        return CountState().new(count + 1)\n      },\n    })\n\n    return {\n      query: {\n        CountQuery,\n      },\n      command: {\n        IncreCommand,\n      },\n    }\n  },\n})\n","import { useRemeshDomain, useRemeshQuery, useRemeshSend } from 'remesh-react'\n\nimport { CounterDomain } from 'remesh-domains-for-demos/dist/7guis/Counter'\n\nexport const CounterApp = () => {\n  const send = useRemeshSend()\n  const counterDomain = useRemeshDomain(CounterDomain())\n  const count = useRemeshQuery(counterDomain.query.CountQuery())\n\n  const handleIncre = () => {\n    send(counterDomain.command.IncreCommand())\n  }\n\n  return (\n    <div\n      style={{\n        width: 400,\n        border: '1px solid #eaeaea',\n        boxSizing: 'border-box',\n        padding: 10,\n      }}\n    >\n      <h2>Counter</h2>\n      <input type=\"number\" readOnly value={count} />\n      <label>\n        <button onClick={handleIncre}>Count </button>{' '}\n      </label>\n    </div>\n  )\n}\n","import { Remesh } from 'remesh'\n\nexport const TemperatureConverterDomain = Remesh.domain({\n  name: 'TemperatureConverterDomain',\n  impl: (domain) => {\n    const CelsiusState = domain.state({\n      name: 'CelsiusState',\n      default: '',\n    })\n\n    const CelsiusQuery = domain.query({\n      name: 'CelsiusQuery',\n      impl: ({ get }) => {\n        return get(CelsiusState())\n      },\n    })\n\n    const FahrenheitState = domain.state({\n      name: 'FahrenheitState',\n      default: '',\n    })\n\n    const FahrenheitQuery = domain.query({\n      name: 'FahrenheitQuery',\n      impl: ({ get }) => {\n        return get(FahrenheitState())\n      },\n    })\n\n    const ResetBothCommand = domain.command({\n      name: 'ResetBothCommand',\n      impl: ({}) => {\n        return [CelsiusState().new(''), FahrenheitState().new('')]\n      },\n    })\n\n    const UpdateCelsiusCommand = domain.command({\n      name: 'UpdateCelsiusCommand',\n      impl: ({}, input: string) => {\n        if (input === '') {\n          return ResetBothCommand()\n        }\n\n        const celsius = parseFloat(input)\n\n        if (Number.isNaN(celsius)) {\n          return CelsiusState().new(input)\n        }\n\n        const fahrenheit = celsius * (9 / 5) + 32\n\n        return [CelsiusState().new(input), FahrenheitState().new(fahrenheit.toString())]\n      },\n    })\n\n    const UpdateFahrenheitCommand = domain.command({\n      name: 'UpdateFahrenheitCommand',\n      impl: ({}, input: string) => {\n        if (input === '') {\n          return ResetBothCommand()\n        }\n\n        const fahrenheit = parseFloat(input)\n\n        if (Number.isNaN(fahrenheit)) {\n          return FahrenheitState().new(input)\n        }\n\n        const celsius = (fahrenheit - 32) * (5 / 9)\n\n        return [CelsiusState().new(celsius.toString()), FahrenheitState().new(input)]\n      },\n    })\n\n    return {\n      query: {\n        CelsiusQuery,\n        FahrenheitQuery,\n      },\n      command: {\n        UpdateCelsiusCommand,\n        UpdateFahrenheitCommand,\n      },\n    }\n  },\n})\n","import React from 'react'\nimport { useRemeshDomain, useRemeshQuery, useRemeshSend } from 'remesh-react'\n\nimport { TemperatureConverterDomain } from 'remesh-domains-for-demos/dist/7guis/TemperatureConverter'\n\nexport const TemperatureConverterApp = () => {\n  const send = useRemeshSend()\n  const domain = useRemeshDomain(TemperatureConverterDomain())\n  const celsius = useRemeshQuery(domain.query.CelsiusQuery())\n  const fahrenheit = useRemeshQuery(domain.query.FahrenheitQuery())\n\n  const handleCelsius = (event: React.ChangeEvent<HTMLInputElement>) => {\n    send(domain.command.UpdateCelsiusCommand(event.target.value))\n  }\n\n  const handleFahrenheit = (event: React.ChangeEvent<HTMLInputElement>) => {\n    send(domain.command.UpdateFahrenheitCommand(event.target.value))\n  }\n\n  return (\n    <div\n      style={{\n        border: '1px solid #eaeaea',\n        boxSizing: 'border-box',\n        padding: 10,\n      }}\n    >\n      <h2>Temperature Converter</h2>\n      <div>\n        <input type=\"text\" value={celsius} onChange={handleCelsius} />\n        <label htmlFor=\"\">Celsius</label>=\n        <input type=\"text\" value={fahrenheit} onChange={handleFahrenheit} />\n        <label htmlFor=\"\">Fahrenheit</label>\n      </div>\n    </div>\n  )\n}\n","import { Remesh } from 'remesh'\n\nexport type FlightBookerOption = 'one-way' | 'return'\n\nexport type FlightBookerStatus = {\n  startDate: 'valid' | 'invalid'\n  endDate: 'valid' | 'invalid' | 'disabled' | 'enabled'\n  bookButton: 'disabled' | 'enabled'\n}\n\nexport const getDate = (dateInput: string) => {\n  const list = dateInput.split('.')\n\n  if (list.length !== 3) {\n    return null\n  }\n\n  const date = new Date(`${list[2]}.${list[1]}.${list[0]}`)\n\n  if (date.toString() === 'Invalid Date') {\n    return null\n  }\n\n  return date\n}\n\nexport const toDateInput = (date: Date) => {\n  const list = date.toLocaleDateString().split('/')\n\n  return `${list[2]}.${list[1]}.${list[0]}`\n}\n\nexport const compareDate = (date1: Date, date2: Date) => {\n  if (date1.getFullYear() !== date2.getFullYear()) {\n    return date1.getFullYear() - date2.getFullYear()\n  }\n\n  if (date1.getMonth() !== date2.getMonth()) {\n    return date1.getMonth() - date2.getMonth()\n  }\n\n  return date1.getDate() - date2.getDate()\n}\n\nexport const FlightBookerDomain = Remesh.domain({\n  name: 'FlightBookerDomain',\n  impl: (domain) => {\n    const OptionState = domain.state<FlightBookerOption>({\n      name: 'OptionState',\n      default: 'one-way',\n    })\n\n    const OptionQuery = domain.query({\n      name: 'OptionQuery',\n      impl: ({ get }) => {\n        return get(OptionState())\n      },\n    })\n\n    const StartDateInputState = domain.state({\n      name: 'StartDateInputState',\n      default: toDateInput(new Date()),\n    })\n\n    const StartDateInputQuery = domain.query({\n      name: 'StartDateInputQuery',\n      impl: ({ get }) => {\n        return get(StartDateInputState())\n      },\n    })\n\n    const EndDateInputState = domain.state({\n      name: 'EndDateInputState',\n      default: toDateInput(new Date()),\n    })\n\n    const EndDateInputQuery = domain.query({\n      name: 'EndDateInputQuery',\n      impl: ({ get }) => {\n        return get(EndDateInputState())\n      },\n    })\n\n    const StartDateQuery = domain.query({\n      name: 'StartDateQuery',\n      impl: ({ get }) => {\n        const startDateInput = get(StartDateInputState())\n        return getDate(startDateInput)\n      },\n    })\n\n    const EndDateQuery = domain.query({\n      name: 'EndDateQuery',\n      impl: ({ get }) => {\n        const endDateInput = get(EndDateInputState())\n        return getDate(endDateInput)\n      },\n    })\n\n    const UpdateOptionCommand = domain.command({\n      name: 'UpdateOptionCommand',\n      impl: ({}, option: FlightBookerOption) => {\n        return OptionState().new(option)\n      },\n    })\n\n    const UpdateStartDateCommand = domain.command({\n      name: 'UpdateStartDateCommand',\n      impl: ({}, dateInput: string) => {\n        return StartDateInputState().new(dateInput)\n      },\n    })\n\n    const UpdateEndDateCommand = domain.command({\n      name: 'UpdateEndDateCommand',\n      impl: ({}, dateInput: string) => {\n        return EndDateInputState().new(dateInput)\n      },\n    })\n\n    const StatusQuery = domain.query({\n      name: 'StatusQuery',\n      impl: ({ get }): FlightBookerStatus => {\n        const option = get(OptionState())\n        const startDate = get(StartDateQuery())\n        const endDate = get(EndDateQuery())\n\n        const startDateStatus = !!startDate ? 'valid' : 'invalid'\n        const endDateStatus = option === 'return' ? (!!endDate ? 'valid' : 'invalid') : 'disabled'\n\n        const bookButtonStatus =\n          option === 'one-way'\n            ? !!startDate\n              ? 'enabled'\n              : 'disabled'\n            : !!startDate && !!endDate && compareDate(startDate, endDate) <= 0\n            ? 'enabled'\n            : 'disabled'\n\n        return {\n          startDate: startDateStatus,\n          endDate: endDateStatus,\n          bookButton: bookButtonStatus,\n        }\n      },\n    })\n\n    return {\n      query: {\n        StatusQuery,\n        OptionQuery,\n        StartDateQuery,\n        EndDateQuery,\n        StartDateInputQuery,\n        EndDateInputQuery,\n      },\n      command: {\n        UpdateOptionCommand,\n        UpdateStartDateCommand,\n        UpdateEndDateCommand,\n      },\n    }\n  },\n})\n","import React from 'react'\nimport { useRemeshDomain, useRemeshQuery, useRemeshSend } from 'remesh-react'\n\nimport { FlightBookerDomain, FlightBookerOption } from 'remesh-domains-for-demos/dist/7guis/FlightBooker'\n\nexport const FlightBookerApp = () => {\n  const send = useRemeshSend()\n  const flightBooker = useRemeshDomain(FlightBookerDomain())\n  const option = useRemeshQuery(flightBooker.query.OptionQuery())\n  const status = useRemeshQuery(flightBooker.query.StatusQuery())\n\n  const startDateInput = useRemeshQuery(flightBooker.query.StartDateInputQuery())\n  const endDateInput = useRemeshQuery(flightBooker.query.EndDateInputQuery())\n\n  const handleOptionChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    send(flightBooker.command.UpdateOptionCommand(event.target.value as FlightBookerOption))\n  }\n\n  const handleStartDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    send(flightBooker.command.UpdateStartDateCommand(event.target.value))\n  }\n\n  const handleEndDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    send(flightBooker.command.UpdateEndDateCommand(event.target.value))\n  }\n\n  const handleBookButtonClick = () => {\n    if (status.bookButton === 'enabled') {\n      if (option === 'one-way') {\n        alert(`You have booked a one-way flight on ${startDateInput}`)\n      } else {\n        alert(`You have booked return flight from ${startDateInput} to ${endDateInput}`)\n      }\n    }\n  }\n\n  return (\n    <div\n      style={{\n        width: 400,\n        border: '1px solid #eaeaea',\n        boxSizing: 'border-box',\n        padding: 10,\n      }}\n    >\n      <h2>Flight Booker</h2>\n      <div>\n        <select value={option} onChange={handleOptionChange}>\n          <option value=\"one-way\">One-way flight</option>\n          <option value=\"return\">Return flight</option>\n        </select>\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          style={{\n            backgroundColor: status.startDate === 'invalid' ? 'red' : '',\n          }}\n          value={startDateInput}\n          onChange={handleStartDateChange}\n        />\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          style={{\n            backgroundColor: status.endDate === 'invalid' ? 'red' : '',\n          }}\n          disabled={status.endDate === 'disabled'}\n          value={endDateInput}\n          onChange={handleEndDateChange}\n        />\n      </div>\n      <div>\n        <button disabled={status.bookButton === 'disabled'} onClick={handleBookButtonClick}>\n          Book\n        </button>\n      </div>\n    </div>\n  )\n}\n","import { merge, animationFrames, of, NEVER } from 'rxjs'\n\nimport { distinctUntilChanged, map, tap, pairwise, switchMap, takeUntil, startWith } from 'rxjs/operators'\n\nimport { Remesh } from 'remesh'\n\nexport const TimerDomain = Remesh.domain({\n  name: 'TimerDomain',\n  inspectable: false,\n  impl: (domain) => {\n    const DurationState = domain.state({\n      name: 'DurationState',\n      default: 15000,\n    })\n\n    const DurationQuery = domain.query({\n      name: 'DurationQuery',\n      impl: ({ get }) => {\n        return get(DurationState())\n      },\n    })\n\n    const ElapsedState = domain.state({\n      name: 'ElapsedState',\n      default: 0,\n    })\n\n    const ElapsedQuery = domain.query({\n      name: 'ElapsedQuery',\n      impl: ({ get }) => {\n        return get(ElapsedState())\n      },\n    })\n\n    const StartEvent = domain.event({\n      name: 'StartEvent',\n    })\n\n    const StopEvent = domain.event({\n      name: 'StopEvent',\n    })\n\n    const UpdateElapsedCommand = domain.command({\n      name: 'UpdateElapsedCommand',\n      impl: ({ get }, increment: number) => {\n        const duration = get(DurationState())\n        const elapsed = get(ElapsedState())\n\n        if (elapsed > duration) {\n          return StopEvent()\n        }\n\n        return ElapsedState().new(elapsed + increment)\n      },\n    })\n\n    const UpdateDurationCommand = domain.command({\n      name: 'UpdateDurationCommand',\n      impl: ({ get }, newDuration: number) => {\n        const elapsed = get(ElapsedState())\n\n        if (newDuration > elapsed) {\n          return [DurationState().new(newDuration), StartEvent()]\n        }\n\n        return DurationState().new(newDuration)\n      },\n    })\n\n    const ResetElapsedCommand = domain.command({\n      name: 'ResetElapsedCommand',\n      impl: ({}) => {\n        return [ElapsedState().new(0), StartEvent()]\n      },\n    })\n\n    domain.effect({\n      name: 'UpdateElapsedByAnimationEffect',\n      impl: ({ fromEvent }) => {\n        const startEvent$ = fromEvent(StartEvent).pipe(\n          startWith(StartEvent()),\n          map(() => 1),\n        )\n        const stopEvent$ = fromEvent(StopEvent).pipe(map(() => 0))\n\n        return merge(startEvent$, stopEvent$).pipe(\n          distinctUntilChanged(),\n          switchMap((signal) => {\n            if (signal === 0) {\n              return NEVER\n            }\n            return animationFrames().pipe(\n              pairwise(),\n              map(([a, b]) => UpdateElapsedCommand(b.elapsed - a.elapsed)),\n              takeUntil(fromEvent(StopEvent)),\n            )\n          }),\n        )\n      },\n    })\n\n    return {\n      query: {\n        DurationQuery,\n        ElapsedQuery,\n      },\n      command: {\n        ResetElapsedCommand,\n        UpdateDurationCommand,\n      },\n    }\n  },\n})\n","import React from 'react'\nimport { useRemeshDomain, useRemeshQuery, useRemeshSend } from 'remesh-react'\n\nimport { TimerDomain } from 'remesh-domains-for-demos/dist/7guis/Timer'\n\nexport const TimerApp = () => {\n  const send = useRemeshSend()\n  const timerDomain = useRemeshDomain(TimerDomain())\n  const elapsed = useRemeshQuery(timerDomain.query.ElapsedQuery())\n  const duration = useRemeshQuery(timerDomain.query.DurationQuery())\n\n  const handleDurationChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const duration = parseInt(event.target.value, 10)\n    if (!isNaN(duration)) {\n      send(timerDomain.command.UpdateDurationCommand(duration))\n    }\n  }\n\n  const handleResetElapsed = () => {\n    send(timerDomain.command.ResetElapsedCommand())\n  }\n\n  return (\n    <div\n      style={{\n        width: 400,\n        border: '1px solid #eaeaea',\n        boxSizing: 'border-box',\n        padding: 10,\n      }}\n    >\n      <h2>Timer</h2>\n      <div style={{ display: 'flex' }}>\n        <label style={{ marginRight: 10, whiteSpace: 'nowrap' }}>Elapsed Timer:</label>\n        <div style={{ width: '100%' }}>\n          <span\n            style={{\n              display: 'inline-block',\n              height: 10,\n              background: 'green',\n              width: `${Math.min(elapsed / duration, 1) * 100}%`,\n              verticalAlign: 'middle',\n              borderRadius: 5,\n            }}\n          ></span>\n        </div>\n      </div>\n      <div>{elapsed > duration ? (duration / 1000).toFixed(1) : (elapsed / 1000).toFixed(1)}s</div>\n      <div style={{ display: 'flex' }}>\n        <label style={{ width: 100, marginRight: 10 }}>Duration:</label>\n        <input\n          style={{ width: '100%' }}\n          type=\"range\"\n          min={0}\n          max={30000}\n          value={duration}\n          onChange={handleDurationChange}\n        />\n      </div>\n      <div>\n        <button style={{ width: '100% ' }} onClick={handleResetElapsed}>\n          Reset Timer\n        </button>\n      </div>\n    </div>\n  )\n}\n","import { Remesh } from 'remesh'\nimport { ListModule } from 'remesh/modules/list'\n\nexport type Name = {\n  name: string\n  surname: string\n}\n\nexport type NameItem = {\n  id: string\n} & Name\n\nexport const CRUDDomain = Remesh.domain({\n  name: 'CRUDDomain',\n  impl: (domain) => {\n    let nameUid = 0\n\n    const nameListModule = ListModule<NameItem>(domain, {\n      name: 'NameListModule',\n      key: (item) => item.id,\n    })\n\n    const FilterPrefixState = domain.state({\n      name: 'FilterPrefixState',\n      default: '',\n    })\n\n    const FilterPrefixQuery = domain.query({\n      name: 'FilterPrefixQuery',\n      impl: ({ get }) => {\n        return get(FilterPrefixState())\n      },\n    })\n\n    const UpdateFilterPrefixCommand = domain.command({\n      name: 'UpdateFilterPrefixCommand',\n      impl: ({}, prefix: string) => {\n        return FilterPrefixState().new(prefix)\n      },\n    })\n\n    const CreatedState = domain.state<Name>({\n      name: 'CreatedState',\n      default: {\n        name: '',\n        surname: '',\n      },\n    })\n\n    const CreatedQuery = domain.query({\n      name: 'CreatedQuery',\n      impl: ({ get }) => {\n        return get(CreatedState())\n      },\n    })\n\n    const UpdateCreatedCommand = domain.command({\n      name: 'UpdateCreatedCommand',\n      impl: ({ get }, name: Partial<Name>) => {\n        const currentName = get(CreatedState())\n\n        return CreatedState().new({\n          ...currentName,\n          ...name,\n        })\n      },\n    })\n\n    const SelectedState = domain.state<NameItem | null>({\n      name: 'SelectedState',\n      default: null,\n    })\n\n    const SelectedQuery = domain.query({\n      name: 'SelectedQuery',\n      impl: ({ get }) => {\n        return get(SelectedState())\n      },\n    })\n\n    const SelectItemCommand = domain.command({\n      name: 'SelectItemCommand',\n      impl: ({ get }, targetItemId: string | null) => {\n        const currentSelected = get(SelectedState())\n\n        if (targetItemId === null) {\n          if (currentSelected === null) {\n            return null\n          } else {\n            return SelectedState().new(null)\n          }\n        }\n\n        if (currentSelected && currentSelected.id === targetItemId) {\n          return SelectedState().new(null)\n        }\n\n        const targetItem = get(nameListModule.query.ItemQuery(targetItemId))\n\n        return SelectedState().new(targetItem)\n      },\n    })\n\n    const UpdateSelectedNameCommand = domain.command({\n      name: 'UpdateSelectedNameCommand',\n      impl: ({ get }, name: Partial<Name>) => {\n        const selected = get(SelectedState())\n\n        if (selected === null) {\n          return null\n        }\n\n        return SelectedState().new({\n          ...selected,\n          ...name,\n        })\n      },\n    })\n\n    const FilteredListQuery = domain.query({\n      name: 'FilteredListQuery',\n      impl: ({ get }) => {\n        const filterPrefix = get(FilterPrefixState())\n        const nameList = get(nameListModule.query.ItemListQuery())\n\n        if (filterPrefix === '') {\n          return nameList\n        }\n\n        return nameList.filter((item) => item.surname.startsWith(filterPrefix))\n      },\n    })\n\n    const SyncSelectedCommand = domain.command({\n      name: 'SyncSelectedCommand',\n      impl: ({ get }) => {\n        const selected = get(SelectedState())\n\n        if (selected === null) {\n          return null\n        }\n\n        return nameListModule.command.UpdateItemCommand(selected)\n      },\n    })\n\n    const CreateNameItemCommand = domain.command({\n      name: 'CreateNameItemCommand',\n      impl: ({ get }) => {\n        const created = get(CreatedState())\n        const newItem = {\n          id: `${nameUid++}`,\n          ...created,\n        }\n\n        return [nameListModule.command.AddItemCommand(newItem), UpdateCreatedCommand({ name: '', surname: '' })]\n      },\n    })\n\n    return {\n      query: {\n        ...nameListModule.query,\n        FilteredListQuery,\n        SelectedQuery,\n        FilterPrefixQuery,\n        CreatedQuery,\n      },\n      command: {\n        ...nameListModule.command,\n        UpdateFilterPrefixCommand,\n        SelectItemCommand,\n        UpdateCreatedCommand,\n        UpdateSelectedNameCommand,\n        CreateNameItemCommand,\n        SyncSelectedCommand,\n      },\n    }\n  },\n})\n","import { ComponentPropsWithoutRef, useEffect, useRef } from 'react'\n\nexport const OuterClickWrapper = (props: OuterClickWrapperProps) => {\n  const { onOuterClick, ...restProps } = props\n  const containerRef = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      if (!(event.target as Node)?.parentElement) {\n        return\n      }\n\n      const isOuterClick = !!(containerRef.current && !containerRef.current.contains(event.target as Node))\n\n      if (isOuterClick) {\n        onOuterClick?.(event)\n      }\n    }\n\n    document.addEventListener('click', handleClick, false)\n    return () => {\n      document.removeEventListener('click', handleClick, false)\n    }\n  }, [])\n\n  return <div ref={containerRef} {...restProps}></div>\n}\ntype OuterClickWrapperProps = ComponentPropsWithoutRef<'div'> & {\n  onOuterClick?: (event: MouseEvent) => void\n}\n","import React from 'react'\n\nimport { useRemeshDomain, useRemeshQuery, useRemeshSend } from 'remesh-react'\n\nimport { CRUDDomain } from 'remesh-domains-for-demos/dist/7guis/CRUD'\n\nimport { OuterClickWrapper } from './OuterClickWrapper'\n\nexport const CRUDApp = () => {\n  const send = useRemeshSend()\n  const domain = useRemeshDomain(CRUDDomain())\n  const filteredList = useRemeshQuery(domain.query.FilteredListQuery())\n  const filter = useRemeshQuery(domain.query.FilterPrefixQuery())\n  const created = useRemeshQuery(domain.query.CreatedQuery())\n  const selected = useRemeshQuery(domain.query.SelectedQuery())\n\n  const handleFilterChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    send(domain.command.UpdateFilterPrefixCommand(e.target.value))\n  }\n\n  const handleSelect = (itemId: string | null) => {\n    send(domain.command.SelectItemCommand(itemId))\n  }\n\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (selected) {\n      send(\n        domain.command.UpdateSelectedNameCommand({\n          name: e.target.value,\n        }),\n      )\n    } else {\n      send(domain.command.UpdateCreatedCommand({ name: e.target.value }))\n    }\n  }\n\n  const handleSurnameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (selected) {\n      send(\n        domain.command.UpdateSelectedNameCommand({\n          surname: e.target.value,\n        }),\n      )\n    } else {\n      send(domain.command.UpdateCreatedCommand({ surname: e.target.value }))\n    }\n  }\n\n  const handleCreate = () => {\n    if (selected === null) {\n      send(domain.command.CreateNameItemCommand())\n    }\n  }\n\n  const handleSync = () => {\n    if (selected) {\n      send(domain.command.SyncSelectedCommand())\n    }\n  }\n\n  const handleDelete = () => {\n    if (selected) {\n      send([domain.command.DeleteItemCommand(selected.id), domain.command.SelectItemCommand(null)])\n    }\n  }\n\n  return (\n    <OuterClickWrapper\n      style={{\n        width: 400,\n        border: '1px solid #eaeaea',\n        boxSizing: 'border-box',\n        padding: 10,\n      }}\n      onOuterClick={() => {\n        handleSelect(null)\n      }}\n    >\n      <h2>CRUD</h2>\n      <div>\n        <label htmlFor=\"\">Filter prefix</label>\n        <input type=\"text\" value={filter} onChange={handleFilterChange} />\n      </div>\n      <div\n        style={{\n          display: 'flex',\n        }}\n      >\n        <div\n          style={{\n            width: '50%',\n            height: 100,\n            border: '1px solid #eaeaea',\n            overflow: 'scroll',\n          }}\n        >\n          {filteredList.map((item) => {\n            const fullName = item.name + ', ' + item.surname\n\n            return (\n              <div\n                key={item.id}\n                style={{\n                  background: selected?.id === item.id ? 'blue' : '',\n                  color: selected?.id === item.id ? 'white' : '',\n                }}\n                onClick={() => {\n                  handleSelect(item.id)\n                }}\n              >\n                {fullName}\n              </div>\n            )\n          })}\n        </div>\n        <div style={{ width: '50%', padding: 10 }}>\n          <div>\n            <label>Name:</label>\n            <input type=\"text\" value={selected ? selected.name : created.name} onChange={handleNameChange} />\n          </div>\n          <div>\n            <label>Surname:</label>\n            <input type=\"text\" value={selected ? selected.surname : created.surname} onChange={handleSurnameChange} />\n          </div>\n        </div>\n\n        <div>\n          <button disabled={selected !== null} style={{ marginRight: 10 }} onClick={handleCreate}>\n            Create\n          </button>\n          <button disabled={selected === null} style={{ marginRight: 10 }} onClick={handleSync}>\n            Update\n          </button>\n          <button disabled={selected === null} style={{ marginRight: 10 }} onClick={handleDelete}>\n            Delete\n          </button>\n        </div>\n      </div>\n    </OuterClickWrapper>\n  )\n}\n","import { Remesh } from 'remesh'\n\nexport type Position = { x: number; y: number }\n\nexport type DrawAction = {\n  position: Position\n  diameter: number\n}\n\nexport type AdjustAction = {\n  index: number\n  diameter: number\n}\n\nexport type Circle = {\n  position: Position\n  diameter: number\n}\n\nexport type DrawState = {\n  circles: Circle[]\n}\n\nexport type TooltipsState =\n  | {\n      type: 'default'\n    }\n  | {\n      type: 'show-tips'\n      index: number\n      circle: Circle\n      pageX: number\n      pageY: number\n    }\n  | {\n      type: 'open-slider'\n      index: number\n      circle: Circle\n      pageX: number\n      pageY: number\n    }\n\nexport type HistoryStateItem =\n  | {\n      action: 'add-circle'\n      state: DrawState\n    }\n  | {\n      action: 'adjust-circle'\n      index: number\n      state: DrawState\n    }\n\nexport type HistoryState = {\n  items: HistoryStateItem[]\n  currentIndex: number\n}\n\nexport const CircleDrawerDomain = Remesh.domain({\n  name: 'CircleDrawerDomain',\n  impl: (domain) => {\n    const HistoryState = domain.state<HistoryState>({\n      name: 'HistoryState',\n      default: {\n        items: [],\n        currentIndex: -1,\n      },\n    })\n\n    const HistoryQuery = domain.query({\n      name: 'HistoryQuery',\n      impl: ({ get }) => {\n        return get(HistoryState())\n      },\n    })\n\n    const RecordHistoryStateCommand = domain.command({\n      name: 'RecordHistoryStateCommand',\n      impl: ({ get }, state: HistoryStateItem) => {\n        const history = get(HistoryState())\n\n        const previousItems = history.items.slice(0, history.currentIndex + 1)\n\n        /**\n         * If the current state is the same as the last state,\n         * then we don't need to record it.\n         * This is because we are going to replace the last state\n         * with the current state.\n         *\n         * This is a bit of a hack, but it works.\n         *\n         * TODO: Find a better way to do this.\n         */\n        if (state.action === 'adjust-circle') {\n          const lastState = previousItems[previousItems.length - 1]\n          if (lastState.action === 'adjust-circle' && lastState.index === state.index) {\n            previousItems.pop()\n          }\n        }\n\n        const newItems = [...previousItems, state]\n        const newIndex = newItems.length - 1\n\n        return HistoryState().new({\n          items: newItems,\n          currentIndex: newIndex,\n        })\n      },\n    })\n\n    const DrawState = domain.state<DrawState>({\n      name: 'DrawState',\n      default: {\n        circles: [],\n      },\n    })\n\n    const DrawQuery = domain.query({\n      name: 'DrawQuery',\n      impl: ({ get }) => {\n        return get(DrawState())\n      },\n    })\n\n    const UndoCommand = domain.command({\n      name: 'UndoCommand',\n      impl: ({ get }) => {\n        const history = get(HistoryState())\n        const canUndo = get(CanUndoQuery())\n        const newIndex = history.currentIndex - 1\n\n        if (!canUndo || newIndex < 0) {\n          return [\n            DrawState().new({\n              circles: [],\n            }),\n\n            HistoryState().new({\n              items: history.items,\n              currentIndex: -1,\n            }),\n          ]\n        }\n\n        return [\n          DrawState().new(history.items[newIndex].state),\n\n          HistoryState().new({\n            items: history.items,\n            currentIndex: newIndex,\n          }),\n        ]\n      },\n    })\n\n    const RedoCommand = domain.command({\n      name: 'RedoCommand',\n      impl: ({ get }) => {\n        const history = get(HistoryState())\n        const canRedo = get(CanRedoQuery())\n\n        if (!canRedo) {\n          return []\n        }\n\n        const newIndex = history.currentIndex + 1\n\n        return [\n          DrawState().new(history.items[newIndex].state),\n          HistoryState().new({\n            items: history.items,\n            currentIndex: newIndex,\n          }),\n        ]\n      },\n    })\n\n    const CanUndoQuery = domain.query({\n      name: 'CanUndoQuery',\n      impl: ({ get }) => {\n        const history = get(HistoryState())\n        return history.currentIndex >= 0\n      },\n    })\n\n    const CanRedoQuery = domain.query({\n      name: 'CanRedoQuery',\n      impl: ({ get }) => {\n        const history = get(HistoryState())\n        return history.currentIndex < history.items.length - 1\n      },\n    })\n\n    const SelectedIndexState = domain.state<number>({\n      name: 'SelectedIndexState',\n      default: -1,\n    })\n\n    const SelectedIndexQuery = domain.query({\n      name: 'SelectedIndexQuery',\n      impl: ({ get }) => {\n        return get(SelectedIndexState())\n      },\n    })\n\n    const SetSelectedIndexCommand = domain.command({\n      name: 'SetSelectedIndexCommand',\n      impl: ({}, index: number) => {\n        return SelectedIndexState().new(index)\n      },\n    })\n\n    const SelectedCircleInfoQuery = domain.query({\n      name: 'SelectedCircleInfoQuery',\n      impl: ({ get }) => {\n        const index = get(SelectedIndexState())\n        const circles = get(DrawState()).circles\n\n        if (index === -1) {\n          return null\n        }\n\n        return {\n          index,\n          circle: circles[index],\n        }\n      },\n    })\n\n    const DrawCommand = domain.command({\n      name: 'DrawCommand',\n      impl: ({ get }, action: DrawAction) => {\n        const state = get(DrawState())\n        const newState = {\n          circles: [...state.circles, { position: action.position, diameter: action.diameter }],\n        }\n\n        return [\n          DrawState().new(newState),\n          RecordHistoryStateCommand({\n            action: 'add-circle',\n            state: newState,\n          }),\n        ]\n      },\n    })\n\n    const AdjustCommand = domain.command({\n      name: 'AdjustCommand',\n      impl: ({ get }, action: AdjustAction) => {\n        const state = get(DrawState())\n        const circles = state.circles.map((circle, index) => {\n          if (index === action.index) {\n            return {\n              position: circle.position,\n              diameter: action.diameter,\n            }\n          }\n          return circle\n        })\n\n        const newState = {\n          circles,\n        }\n\n        return [\n          DrawState().new(newState),\n          RecordHistoryStateCommand({\n            action: 'adjust-circle',\n            index: action.index,\n            state: newState,\n          }),\n        ]\n      },\n    })\n\n    const TooltipsState = domain.state<TooltipsState>({\n      name: 'TooltipsState',\n      default: {\n        type: 'default',\n      },\n    })\n\n    const TooltipsQuery = domain.query({\n      name: 'TooltipsQuery',\n      impl: ({ get }) => {\n        return get(TooltipsState())\n      },\n    })\n\n    const UpdateTooltipsCommand = domain.command({\n      name: 'UpdateTooltipsCommand',\n      impl: ({}, newState: TooltipsState) => {\n        return TooltipsState().new(newState)\n      },\n    })\n\n    return {\n      query: {\n        HistoryQuery,\n        DrawQuery,\n        TooltipsQuery,\n        SelectedIndexQuery,\n        SelectedCircleInfoQuery,\n        CanUndoQuery,\n        CanRedoQuery,\n      },\n      command: {\n        DrawCommand,\n        AdjustCommand,\n        UpdateTooltipsCommand,\n        UndoCommand,\n        RedoCommand,\n        SetSelectedIndexCommand,\n      },\n    }\n  },\n})\n\nexport const positionInCircle = (position: Position, circle: Circle): boolean => {\n  const { x, y } = position\n  const { diameter, position: circlePosition } = circle\n  const { x: circleX, y: circleY } = circlePosition\n  const radius = diameter / 2\n  const dx = x - circleX\n  const dy = y - circleY\n\n  return dx * dx + dy * dy < radius * radius\n}\n","import React from 'react'\n\nimport { useRemeshDomain, useRemeshQuery, useRemeshSend } from 'remesh-react'\n\nimport { CircleDrawerDomain, positionInCircle, Position } from 'remesh-domains-for-demos/dist/7guis/CircleDrawer'\n\nimport { OuterClickWrapper } from './OuterClickWrapper'\n\nexport const CircleDrawerApp = () => {\n  const send = useRemeshSend()\n  const domain = useRemeshDomain(CircleDrawerDomain())\n  const drawState = useRemeshQuery(domain.query.DrawQuery())\n  const tooltipsState = useRemeshQuery(domain.query.TooltipsQuery())\n  const selectedCircleInfo = useRemeshQuery(domain.query.SelectedCircleInfoQuery())\n  const canUndo = useRemeshQuery(domain.query.CanUndoQuery())\n  const canRedo = useRemeshQuery(domain.query.CanRedoQuery())\n\n  const getCircleInfo = (position: Position) => {\n    const circle = drawState.circles.find((circle) => {\n      return positionInCircle(position, circle)\n    })\n\n    if (!circle) {\n      return null\n    }\n\n    const index = drawState.circles.indexOf(circle)\n\n    return {\n      index,\n      circle,\n    }\n  }\n\n  const handleRightClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    e.preventDefault()\n    const position = { x: e.pageX, y: e.pageY }\n\n    const circleInfo = getCircleInfo(position)\n\n    if (circleInfo) {\n      send([\n        domain.command.SetSelectedIndexCommand(circleInfo.index),\n        domain.command.UpdateTooltipsCommand({\n          type: 'show-tips',\n          index: circleInfo.index,\n          circle: circleInfo.circle,\n          pageX: e.pageX,\n          pageY: e.pageY,\n        }),\n      ])\n    }\n  }\n\n  const handleLeftClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (tooltipsState.type !== 'default') {\n      return\n    }\n\n    const position = { x: e.pageX, y: e.pageY }\n    const circleInfo = getCircleInfo(position)\n\n    if (!circleInfo) {\n      send(domain.command.DrawCommand({ position, diameter: 30 }))\n    }\n  }\n\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (tooltipsState.type !== 'default') {\n      return\n    }\n\n    const position = { x: e.pageX, y: e.pageY }\n    const circleInfo = getCircleInfo(position)\n\n    if (circleInfo) {\n      send(domain.command.SetSelectedIndexCommand(circleInfo.index))\n    } else {\n      send(domain.command.SetSelectedIndexCommand(-1))\n    }\n  }\n\n  const handleOpenSlider = () => {\n    if (tooltipsState.type === 'show-tips') {\n      send(\n        domain.command.UpdateTooltipsCommand({\n          type: 'open-slider',\n          index: tooltipsState.index,\n          circle: tooltipsState.circle,\n          pageX: tooltipsState.pageX,\n          pageY: tooltipsState.pageY,\n        }),\n      )\n    }\n  }\n\n  const handleCloseSlider = () => {\n    send(\n      domain.command.UpdateTooltipsCommand({\n        type: 'default',\n      }),\n    )\n  }\n\n  const handleAdust = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(event.target.value, 10)\n\n    if (selectedCircleInfo && !isNaN(value)) {\n      send(\n        domain.command.AdjustCommand({\n          index: selectedCircleInfo.index,\n          diameter: value,\n        }),\n      )\n    }\n  }\n\n  return (\n    <div\n      style={{\n        border: '1px solid #eaeaea',\n        boxSizing: 'border-box',\n        padding: 10,\n      }}\n    >\n      <h2>Circle Drawer</h2>\n      <div\n        style={{\n          width: 400,\n          textAlign: 'center',\n          padding: 10,\n        }}\n      >\n        <button\n          onClick={() => send(domain.command.UndoCommand())}\n          style={{\n            margin: '0 10px',\n          }}\n          disabled={!canUndo}\n        >\n          Undo\n        </button>\n        <button\n          onClick={() => send(domain.command.RedoCommand())}\n          style={{\n            margin: '0 10px',\n          }}\n          disabled={!canRedo}\n        >\n          Redo\n        </button>\n      </div>\n      <div\n        style={{\n          width: 400,\n          height: 400,\n          border: '1px solid #eaeaea',\n          boxSizing: 'border-box',\n          overflow: 'hidden',\n        }}\n        onClick={handleLeftClick}\n        onMouseMove={handleMouseMove}\n      >\n        {drawState.circles.map((circle, index) => {\n          return (\n            <div\n              key={circle.position.x + '-' + circle.position.y + '-' + circle.diameter}\n              style={{\n                position: 'absolute',\n                left: circle.position.x - circle.diameter / 2,\n                top: circle.position.y - circle.diameter / 2,\n                width: circle.diameter,\n                height: circle.diameter,\n                borderRadius: circle.diameter / 2,\n                border: '1px solid #666',\n                backgroundColor: selectedCircleInfo?.index === index ? '#eaeaea' : '',\n              }}\n              onContextMenu={handleRightClick}\n            ></div>\n          )\n        })}\n      </div>\n      {tooltipsState.type === 'show-tips' && (\n        <OuterClickWrapper\n          key=\"show-tips\"\n          style={{\n            position: 'absolute',\n            left: tooltipsState.pageX,\n            top: tooltipsState.pageY,\n            zIndex: 100,\n            background: '#fff',\n            border: '1px solid #666',\n            padding: 10,\n          }}\n          onOuterClick={handleCloseSlider}\n          onClick={handleOpenSlider}\n        >\n          Adjust Diameter\n        </OuterClickWrapper>\n      )}\n      {tooltipsState.type === 'open-slider' && (\n        <OuterClickWrapper\n          key=\"open-slider\"\n          style={{\n            position: 'absolute',\n            left: tooltipsState.pageX,\n            top: tooltipsState.pageY,\n            background: '#fff',\n            border: '1px solid #666',\n            zIndex: 100,\n            padding: 10,\n          }}\n          onOuterClick={handleCloseSlider}\n        >\n          <p>Adjust Diameter</p>\n          <div>\n            <input\n              type=\"range\"\n              value={selectedCircleInfo?.circle.diameter ?? ''}\n              min={1}\n              max={150}\n              onChange={handleAdust}\n            />\n          </div>\n        </OuterClickWrapper>\n      )}\n    </div>\n  )\n}\n","import { Remesh } from 'remesh'\n\nimport { ListModule } from 'remesh/modules/list'\n\nexport type CellContent =\n  | {\n      type: 'text'\n      text: string\n    }\n  | {\n      type: 'formula'\n      formula: string\n    }\n\nexport type CellState = {\n  row: number\n  column: string\n  content: CellContent\n  isEditing: boolean\n}\n\nexport const rows = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nexport const columns = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J']\n\nconst generateDefaultCellList = () => {\n  const cellList = [] as CellState[]\n\n  for (const column of columns) {\n    for (const row of rows) {\n      cellList.push({\n        row,\n        column,\n        content: {\n          type: 'text',\n          text: '',\n        },\n        isEditing: false,\n      })\n    }\n  }\n\n  return cellList\n}\n\nexport const CellsDomain = Remesh.domain({\n  name: 'CellsDomain',\n  inspectable: false,\n  impl: (domain) => {\n    const CellListModule = ListModule<CellState>(domain, {\n      name: 'CellListModule',\n      key: (cell) => cell.column + cell.row,\n      default: generateDefaultCellList(),\n    })\n\n    const CellQuery = domain.query({\n      name: 'CellQuery',\n      impl: ({ get }, key: string) => {\n        const state = get(CellListModule.query.ItemQuery(key))\n\n        if (state.content.type === 'text') {\n          return {\n            type: 'text' as const,\n            isEditing: state.isEditing,\n            content: state.content.text,\n            displayContent: state.content.text,\n          }\n        }\n\n        if (state.content.type === 'formula') {\n          const evaluate = compile(state.content.formula)\n          const getCellValue = (cellKey: string) => {\n            return Number(get(CellQuery(cellKey)).displayContent)\n          }\n\n          return {\n            type: 'formula' as const,\n            isEditing: state.isEditing,\n            content: state.content.formula,\n            displayContent: evaluate(getCellValue),\n          }\n        }\n\n        throw new Error('Unknown cell type')\n      },\n    })\n\n    const SelectCellCommand = domain.command({\n      name: 'SelectCellCommand',\n      impl: ({ get }, key: string) => {\n        const state = get(CellListModule.query.ItemQuery(key))\n\n        return CellListModule.command.UpdateItemCommand({\n          ...state,\n          isEditing: true,\n        })\n      },\n    })\n\n    const UnselectCellCommand = domain.command({\n      name: 'UnselectCellCommand',\n      impl: ({ get }, key: string) => {\n        const state = get(CellListModule.query.ItemQuery(key))\n\n        return CellListModule.command.UpdateItemCommand({\n          ...state,\n          isEditing: false,\n        })\n      },\n    })\n\n    const SetCellContentCommand = domain.command({\n      name: 'SetCellContentCommand',\n      impl: ({ get }, { key, input }: { key: string; input: string }) => {\n        const state = get(CellListModule.query.ItemQuery(key))\n\n        if (input.startsWith('=')) {\n          return CellListModule.command.UpdateItemCommand({\n            ...state,\n            content: {\n              type: 'formula',\n              formula: input,\n            },\n            isEditing: state.isEditing,\n          })\n        } else {\n          return CellListModule.command.UpdateItemCommand({\n            ...state,\n            content: {\n              type: 'text',\n              text: input,\n            },\n            isEditing: state.isEditing,\n          })\n        }\n      },\n    })\n\n    return {\n      query: {\n        CellQuery,\n      },\n      command: {\n        SelectCellCommand,\n        UnselectCellCommand,\n        SetCellContentCommand,\n      },\n    }\n  },\n})\n\nconst compile = (formula: string) => {\n  return (get: Function) => {\n    try {\n      const expression = formula.slice(1).replace(/\\w\\d+/g, (matched) => {\n        return `get('${matched}')`\n      })\n\n      const fn = new Function('get', `return (${expression}).toString()`)\n\n      return fn(get)\n    } catch {\n      return '-'\n    }\n  }\n}\n","import React from 'react'\nimport { useRemeshDomain, useRemeshQuery, useRemeshSend } from 'remesh-react'\n\nimport { CellsDomain, rows, columns } from 'remesh-domains-for-demos/dist/7guis/Cells'\n\nexport const CellsApp = () => {\n  const cellsDomain = useRemeshDomain(CellsDomain())\n\n  return (\n    <div>\n      <h2>Cells</h2>\n      <table\n        style={{\n          borderCollapse: 'collapse',\n          border: '1px solid #bbb',\n          textAlign: 'center',\n        }}\n      >\n        <thead>\n          <tr\n            style={{\n              backgroundColor: '#f6f6f6',\n            }}\n          >\n            <th style={{ width: 30, display: 'block' }}></th>\n            {columns.map((key) => (\n              <th\n                key={key}\n                style={{\n                  maxWidth: 80,\n                  border: '1px solid #bbb',\n                }}\n              >\n                {key}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((rowKey) => {\n            return (\n              <tr key={rowKey}>\n                <RowView rowKey={rowKey} columnKeyList={columns} />\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\ntype RowViewProps = {\n  rowKey: number\n  columnKeyList: string[]\n}\n\nconst RowView = ({ columnKeyList, rowKey }: RowViewProps) => {\n  const send = useRemeshSend()\n  const cells = useRemeshDomain(CellsDomain())\n\n  return (\n    <>\n      <td\n        style={{\n          width: 30,\n          border: '1px solid #bbb',\n          backgroundColor: '#f6f6f6',\n        }}\n      >\n        {rowKey}\n      </td>\n      {columnKeyList.map((columnKey) => {\n        const cellKey = `${columnKey}${rowKey}`\n        return (\n          <td\n            key={cellKey}\n            style={{\n              maxWidth: 80,\n              minWidth: 80,\n              border: '1px solid #bbb',\n              overflow: 'hidden',\n            }}\n            onClick={(event) => {\n              if (event.target instanceof HTMLInputElement) {\n                return\n              }\n              send(cells.command.SelectCellCommand(cellKey))\n            }}\n          >\n            <CellView cellKey={cellKey} />\n          </td>\n        )\n      })}\n    </>\n  )\n}\n\nconst CellView = ({ cellKey }: { cellKey: string }) => {\n  const send = useRemeshSend()\n  const cellsDomain = useRemeshDomain(CellsDomain())\n  const cell = useRemeshQuery(cellsDomain.query.CellQuery(cellKey))\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    send(cellsDomain.command.SetCellContentCommand({ key: cellKey, input: e.target.value }))\n  }\n\n  return (\n    <>\n      {cell.isEditing && (\n        <input\n          style={{\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'transparent',\n            boxSizing: 'border-box',\n            textAlign: 'center',\n          }}\n          value={cell.content}\n          onChange={handleChange}\n          onBlur={() => {\n            if (cell.isEditing) {\n              send(cellsDomain.command.UnselectCellCommand(cellKey))\n            }\n          }}\n          autoFocus\n        />\n      )}\n\n      {!cell.isEditing && cell.displayContent}\n    </>\n  )\n}\n","import React, { StrictMode } from 'react'\nimport * as ReactDOMClient from 'react-dom/client'\n\nimport { Remesh } from 'remesh'\n\nimport { RemeshRoot } from 'remesh-react'\n\nimport { RemeshReduxDevtools } from 'remesh-redux-devtools'\nimport { RemeshLogger } from 'remesh-logger'\n\nimport { CounterApp } from './Counter'\nimport { TemperatureConverterApp } from './TemperatureConverter'\nimport { FlightBookerApp } from './FlightBooker'\nimport { TimerApp } from './Timer'\nimport { CRUDApp } from './CRUD'\nimport { CircleDrawerApp } from './CircleDrawer'\nimport { CellsApp } from './Cells'\n\nconst Root = () => {\n  return (\n    <div>\n      <h1>7GUIs in React/Remesh/TypeScript</h1>\n      <p>This is a live version of an implementation (source) of 7GUIs with React, TypeScript and Remesh.</p>\n      <hr />\n      <CounterApp />\n      <hr />\n      <TemperatureConverterApp />\n      <hr />\n      <FlightBookerApp />\n      <hr />\n      <TimerApp />\n      <hr />\n      <CRUDApp />\n      <hr />\n      <CircleDrawerApp />\n      <hr />\n      <CellsApp />\n    </div>\n  )\n}\n\nconst container = document.getElementById('root')\n\nif (container) {\n  const root = ReactDOMClient.createRoot(container)\n  const store = Remesh.store({\n    inspectors: [RemeshReduxDevtools(), RemeshLogger()],\n  })\n\n  root.render(\n    <StrictMode>\n      <RemeshRoot store={store}>\n        <Root />\n      </RemeshRoot>\n    </StrictMode>,\n  )\n}\n"],"names":["performanceTimestampProvider","animationFrameProvider","callback","request","cancel","delegate","handle","timestamp","Subscription","args","_i","__spreadArray","__read","animationFrames","timestampProvider","animationFramesFactory","DEFAULT_ANIMATION_FRAMES","schedule","Observable","subscriber","subscription","provider","start","run","now","NEVER","noop","distinctUntilChanged","comparator","keySelector","identity","defaultCompare","operate","source","previousKey","first","createOperatorSubscriber","value","currentKey","a","b","pairwise","prev","hasPrev","p","CounterDomain","Remesh","domain","CountState","CountQuery","get","IncreCommand","count","CounterApp","send","useRemeshSend","counterDomain","useRemeshDomain","useRemeshQuery","query","width","border","boxSizing","padding","_jsx","_jsxs","command","TemperatureConverterDomain","CelsiusState","CelsiusQuery","FahrenheitState","FahrenheitQuery","ResetBothCommand","UpdateCelsiusCommand","input","celsius","fahrenheit","UpdateFahrenheitCommand","TemperatureConverterApp","event","target","handleCelsius","handleFahrenheit","getDate","dateInput","list","date","toDateInput","compareDate","date1","date2","FlightBookerDomain","OptionState","OptionQuery","StartDateInputState","StartDateInputQuery","EndDateInputState","EndDateInputQuery","StartDateQuery","startDateInput","EndDateQuery","endDateInput","UpdateOptionCommand","option","UpdateStartDateCommand","UpdateEndDateCommand","startDate","endDate","startDateStatus","endDateStatus","bookButtonStatus","FlightBookerApp","flightBooker","status","StatusQuery","handleOptionChange","handleStartDateChange","handleEndDateChange","handleBookButtonClick","bookButton","alert","backgroundColor","TimerDomain","DurationState","DurationQuery","ElapsedState","ElapsedQuery","StartEvent","StopEvent","UpdateElapsedCommand","increment","duration","elapsed","UpdateDurationCommand","newDuration","ResetElapsedCommand","fromEvent","startEvent$","startWith","map","stopEvent$","merge","switchMap","signal","takeUntil","TimerApp","timerDomain","handleDurationChange","parseInt","isNaN","handleResetElapsed","display","marginRight","whiteSpace","height","background","Math","min","verticalAlign","borderRadius","toFixed","CRUDDomain","nameUid","nameListModule","ListModule","item","FilterPrefixState","FilterPrefixQuery","UpdateFilterPrefixCommand","prefix","CreatedState","CreatedQuery","UpdateCreatedCommand","name","currentName","SelectedState","SelectedQuery","SelectItemCommand","targetItemId","currentSelected","targetItem","UpdateSelectedNameCommand","selected","FilteredListQuery","filterPrefix","nameList","SyncSelectedCommand","CreateNameItemCommand","created","newItem","OuterClickWrapper","props","onOuterClick","restProps","containerRef","useRef","useEffect","handleClick","parentElement","current","contains","addEventListener","removeEventListener","CRUDApp","filteredList","filter","handleFilterChange","e","handleSelect","itemId","handleNameChange","handleSurnameChange","surname","handleCreate","handleSync","handleDelete","DeleteItemCommand","id","overflow","fullName","color","CircleDrawerDomain","HistoryState","HistoryQuery","RecordHistoryStateCommand","state","history","previousItems","lastState","newItems","newIndex","DrawState","DrawQuery","UndoCommand","canUndo","CanUndoQuery","RedoCommand","CanRedoQuery","SelectedIndexState","SelectedIndexQuery","SetSelectedIndexCommand","index","SelectedCircleInfoQuery","circles","DrawCommand","action","newState","AdjustCommand","circle","TooltipsState","TooltipsQuery","UpdateTooltipsCommand","positionInCircle","position","x","y","diameter","circlePosition","circleX","circleY","radius","dx","dy","CircleDrawerApp","drawState","tooltipsState","selectedCircleInfo","canRedo","getCircleInfo","find","indexOf","handleRightClick","preventDefault","pageX","pageY","circleInfo","type","handleLeftClick","handleMouseMove","handleOpenSlider","handleCloseSlider","handleAdust","textAlign","margin","left","top","zIndex","rows","columns","generateDefaultCellList","cellList","column","row","CellsDomain","CellListModule","cell","CellQuery","key","evaluate","compile","getCellValue","cellKey","SelectCellCommand","UnselectCellCommand","SetCellContentCommand","formula","expression","matched","CellsApp","borderCollapse","maxWidth","rowKey","RowView","columnKeyList","cells","_Fragment","columnKey","minWidth","HTMLInputElement","CellView","cellsDomain","handleChange","isEditing","content","displayContent","Root","container","document","getElementById","root","ReactDOMClient","store","inspectors","RemeshReduxDevtools","RemeshLogger","render","StrictMode","RemeshRoot"],"mappings":"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"}