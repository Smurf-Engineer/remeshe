{"version":3,"file":"index.9da4a6db.js","sources":["../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/scheduler/performanceTimestampProvider.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/scheduler/animationFrameProvider.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/observable/dom/animationFrames.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/observable/of.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/observable/never.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/operators/pairwise.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js","../../../projects/domains/src/7guis/Counter.ts","../../../projects/react-demos/src/7guis/Counter.tsx","../../../projects/domains/src/7guis/TemperatureConverter.ts","../../../projects/react-demos/src/7guis/TemperatureConverter.tsx","../../../projects/domains/src/7guis/FlightBooker.ts","../../../projects/react-demos/src/7guis/FlightBooker.tsx","../../../projects/domains/src/7guis/Timer.ts","../../../projects/react-demos/src/7guis/Timer.tsx","../../../projects/domains/src/7guis/CRUD.ts","../../../projects/react-demos/src/7guis/OuterClickWrapper.tsx","../../../projects/react-demos/src/7guis/CRUD.tsx","../../../projects/domains/src/7guis/CircleDrawer.ts","../../../projects/react-demos/src/7guis/CircleDrawer.tsx","../../../projects/domains/src/7guis/Cells.ts","../../../projects/react-demos/src/7guis/Cells.tsx","../../../projects/react-demos/src/7guis/index.tsx"],"sourcesContent":["export var performanceTimestampProvider = {\n    now: function () {\n        return (performanceTimestampProvider.delegate || performance).now();\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=performanceTimestampProvider.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { Subscription } from '../Subscription';\nexport var animationFrameProvider = {\n    schedule: function (callback) {\n        var request = requestAnimationFrame;\n        var cancel = cancelAnimationFrame;\n        var delegate = animationFrameProvider.delegate;\n        if (delegate) {\n            request = delegate.requestAnimationFrame;\n            cancel = delegate.cancelAnimationFrame;\n        }\n        var handle = request(function (timestamp) {\n            cancel = undefined;\n            callback(timestamp);\n        });\n        return new Subscription(function () { return cancel === null || cancel === void 0 ? void 0 : cancel(handle); });\n    },\n    requestAnimationFrame: function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var delegate = animationFrameProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.requestAnimationFrame) || requestAnimationFrame).apply(void 0, __spreadArray([], __read(args)));\n    },\n    cancelAnimationFrame: function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var delegate = animationFrameProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.cancelAnimationFrame) || cancelAnimationFrame).apply(void 0, __spreadArray([], __read(args)));\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=animationFrameProvider.js.map","import { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\nexport function animationFrames(timestampProvider) {\n    return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\nfunction animationFramesFactory(timestampProvider) {\n    var schedule = animationFrameProvider.schedule;\n    return new Observable(function (subscriber) {\n        var subscription = new Subscription();\n        var provider = timestampProvider || performanceTimestampProvider;\n        var start = provider.now();\n        var run = function (timestamp) {\n            var now = provider.now();\n            subscriber.next({\n                timestamp: timestampProvider ? now : timestamp,\n                elapsed: now - start,\n            });\n            if (!subscriber.closed) {\n                subscription.add(schedule(run));\n            }\n        };\n        subscription.add(schedule(run));\n        return subscription;\n    });\n}\nvar DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n//# sourceMappingURL=animationFrames.js.map","import { popScheduler } from '../util/args';\nimport { from } from './from';\nexport function of() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = popScheduler(args);\n    return from(args, scheduler);\n}\n//# sourceMappingURL=of.js.map","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\nexport var NEVER = new Observable(noop);\nexport function never() {\n    return NEVER;\n}\n//# sourceMappingURL=never.js.map","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector) {\n    if (keySelector === void 0) { keySelector = identity; }\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate(function (source, subscriber) {\n        var previousKey;\n        var first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n//# sourceMappingURL=distinctUntilChanged.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function pairwise() {\n    return operate(function (source, subscriber) {\n        var prev;\n        var hasPrev = false;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var p = prev;\n            prev = value;\n            hasPrev && subscriber.next([p, value]);\n            hasPrev = true;\n        }));\n    });\n}\n//# sourceMappingURL=pairwise.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate(function (source, subscriber) {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, function () { return subscriber.complete(); }, noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=takeUntil.js.map","import { Remesh } from 'remesh'\n\nexport const Counter = Remesh.domain({\n  name: 'Counter',\n  impl: (domain) => {\n    const CounterState = domain.state({\n      name: 'CounterState',\n      default: 0,\n    })\n\n    const incre = domain.command({\n      name: 'increCommand',\n      impl: ({ get }) => {\n        const count = get(CounterState())\n        return CounterState().new(count + 1)\n      },\n    })\n\n    return {\n      query: {\n        count: CounterState.query,\n      },\n      command: {\n        incre,\n      },\n    }\n  },\n})\n","import { useRemeshDomain, useRemeshQuery } from 'remesh-react'\n\nimport { Counter } from 'remesh-domains-for-demos/dist/7guis/Counter'\n\nexport const CounterApp = () => {\n  const counter = useRemeshDomain(Counter())\n  const count = useRemeshQuery(counter.query.count())\n\n  const handleIncre = () => {\n    counter.command.incre()\n  }\n\n  return (\n    <div\n      style={{\n        width: 400,\n        border: '1px solid #eaeaea',\n        boxSizing: 'border-box',\n        padding: 10,\n      }}\n    >\n      <h2>Counter</h2>\n      <input type=\"number\" readOnly value={count} />\n      <label>\n        <button onClick={handleIncre}>Count </button>{' '}\n      </label>\n    </div>\n  )\n}\n","import { Remesh } from 'remesh'\n\nexport const TemperatureConverter = Remesh.domain({\n  name: 'TemperatureConverter',\n  impl: (domain) => {\n    const CelsiusState = domain.state({\n      name: 'CelsiusState',\n      default: '',\n    })\n\n    const FahrenheitState = domain.state({\n      name: 'FahrenheitState',\n      default: '',\n    })\n\n    const resetBoth = domain.command({\n      name: 'resetBoth',\n      impl: () => {\n        return [CelsiusState().new(''), FahrenheitState().new('')]\n      },\n    })\n\n    const updateCelsius = domain.command({\n      name: 'updateCelsius',\n      impl: ({}, input: string) => {\n        if (input === '') {\n          return resetBoth()\n        }\n\n        const celsius = parseFloat(input)\n\n        if (Number.isNaN(celsius)) {\n          return CelsiusState().new(input)\n        }\n\n        const fahrenheit = celsius * (9 / 5) + 32\n\n        return [CelsiusState().new(input), FahrenheitState().new(fahrenheit.toString())]\n      },\n    })\n\n    const updateFahrenheit = domain.command({\n      name: 'updateFahrenheit',\n      impl: ({}, input: string) => {\n        if (input === '') {\n          return resetBoth()\n        }\n\n        const fahrenheit = parseFloat(input)\n\n        if (Number.isNaN(fahrenheit)) {\n          return FahrenheitState().new(input)\n        }\n\n        const celsius = (fahrenheit - 32) * (5 / 9)\n\n        return [CelsiusState().new(celsius.toString()), FahrenheitState().new(input)]\n      },\n    })\n\n    return {\n      query: {\n        celsius: CelsiusState.query,\n        fahrenheit: FahrenheitState.query,\n      },\n      command: {\n        updateCelsius: updateCelsius,\n        updateFahrenheit: updateFahrenheit,\n      },\n    }\n  },\n})\n","import React from 'react'\nimport { useRemeshDomain, useRemeshQuery } from 'remesh-react'\n\nimport { TemperatureConverter } from 'remesh-domains-for-demos/dist/7guis/TemperatureConverter'\n\nexport const TemperatureConverterApp = () => {\n  const temperatureConverter = useRemeshDomain(TemperatureConverter())\n  const celsius = useRemeshQuery(temperatureConverter.query.celsius())\n  const fahrenheit = useRemeshQuery(temperatureConverter.query.fahrenheit())\n\n  const handleCelsius = (event: React.ChangeEvent<HTMLInputElement>) => {\n    temperatureConverter.command.updateCelsius(event.target.value)\n  }\n\n  const handleFahrenheit = (event: React.ChangeEvent<HTMLInputElement>) => {\n    temperatureConverter.command.updateFahrenheit(event.target.value)\n  }\n\n  return (\n    <div\n      style={{\n        border: '1px solid #eaeaea',\n        boxSizing: 'border-box',\n        padding: 10,\n      }}\n    >\n      <h2>Temperature Converter</h2>\n      <div>\n        <input type=\"text\" value={celsius} onChange={handleCelsius} />\n        <label htmlFor=\"\">Celsius</label>=\n        <input type=\"text\" value={fahrenheit} onChange={handleFahrenheit} />\n        <label htmlFor=\"\">Fahrenheit</label>\n      </div>\n    </div>\n  )\n}\n","import { Remesh } from 'remesh'\n\nexport type FlightBookerOption = 'one-way' | 'return'\n\nexport type FlightBookerStatus = {\n  startDate: 'valid' | 'invalid'\n  endDate: 'valid' | 'invalid' | 'disabled' | 'enabled'\n  bookButton: 'disabled' | 'enabled'\n}\n\nexport const getDate = (dateInput: string) => {\n  const list = dateInput.split('.')\n\n  if (list.length !== 3) {\n    return null\n  }\n\n  const date = new Date(`${list[2]}.${list[1]}.${list[0]}`)\n\n  if (date.toString() === 'Invalid Date') {\n    return null\n  }\n\n  return date\n}\n\nexport const toDateInput = (date: Date) => {\n  const list = date.toLocaleDateString().split('/')\n\n  return `${list[2]}.${list[1]}.${list[0]}`\n}\n\nexport const compareDate = (date1: Date, date2: Date) => {\n  if (date1.getFullYear() !== date2.getFullYear()) {\n    return date1.getFullYear() - date2.getFullYear()\n  }\n\n  if (date1.getMonth() !== date2.getMonth()) {\n    return date1.getMonth() - date2.getMonth()\n  }\n\n  return date1.getDate() - date2.getDate()\n}\n\nexport const FlightBooker = Remesh.domain({\n  name: 'FlightBooker',\n  impl: (domain) => {\n    const OptionState = domain.state<FlightBookerOption>({\n      name: 'OptionState',\n      default: 'one-way',\n    })\n\n    const StartDateInputState = domain.state({\n      name: 'StartDateInputState',\n      default: toDateInput(new Date()),\n    })\n\n    const EndDateInputState = domain.state({\n      name: 'EndDateInputState',\n      default: toDateInput(new Date()),\n    })\n\n    const startDateQuery = domain.query({\n      name: 'StartDateQuery',\n      impl: ({ get }) => {\n        const startDateInput = get(StartDateInputState())\n        return getDate(startDateInput)\n      },\n    })\n\n    const endDateQuery = domain.query({\n      name: 'EndDateQuery',\n      impl: ({ get }) => {\n        const endDateInput = get(EndDateInputState())\n        return getDate(endDateInput)\n      },\n    })\n\n    const updateOption = domain.command({\n      name: 'updateOption',\n      impl: ({}, option: FlightBookerOption) => {\n        return OptionState().new(option)\n      },\n    })\n\n    const updateStartDate = domain.command({\n      name: 'updateStartDate',\n      impl: ({}, dateInput: string) => {\n        return StartDateInputState().new(dateInput)\n      },\n    })\n\n    const updateEndDate = domain.command({\n      name: 'updateEndDate',\n      impl: ({}, dateInput: string) => {\n        return EndDateInputState().new(dateInput)\n      },\n    })\n\n    const status = domain.query({\n      name: 'StatusQuery',\n      impl: ({ get }): FlightBookerStatus => {\n        const option = get(OptionState())\n        const startDate = get(startDateQuery())\n        const endDate = get(endDateQuery())\n\n        const startDateStatus = !!startDate ? 'valid' : 'invalid'\n        const endDateStatus = option === 'return' ? (!!endDate ? 'valid' : 'invalid') : 'disabled'\n\n        const bookButtonStatus =\n          option === 'one-way'\n            ? !!startDate\n              ? 'enabled'\n              : 'disabled'\n            : !!startDate && !!endDate && compareDate(startDate, endDate) <= 0\n            ? 'enabled'\n            : 'disabled'\n\n        return {\n          startDate: startDateStatus,\n          endDate: endDateStatus,\n          bookButton: bookButtonStatus,\n        }\n      },\n    })\n\n    return {\n      query: {\n        status: status,\n        option: OptionState.query,\n        startDate: startDateQuery,\n        endDate: endDateQuery,\n        startDateInput: StartDateInputState.query,\n        endDateInput: EndDateInputState.query,\n      },\n      command: {\n        updateOption: updateOption,\n        updateStartDate: updateStartDate,\n        updateEndDate: updateEndDate,\n      },\n    }\n  },\n})\n","import React from 'react'\nimport { useRemeshDomain, useRemeshQuery } from 'remesh-react'\n\nimport { FlightBooker, FlightBookerOption } from 'remesh-domains-for-demos/dist/7guis/FlightBooker'\n\nexport const FlightBookerApp = () => {\n  const flightBooker = useRemeshDomain(FlightBooker())\n  const option = useRemeshQuery(flightBooker.query.option())\n  const status = useRemeshQuery(flightBooker.query.status())\n\n  const startDateInput = useRemeshQuery(flightBooker.query.startDateInput())\n  const endDateInput = useRemeshQuery(flightBooker.query.endDateInput())\n\n  const handleOptionChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    flightBooker.command.updateOption(event.target.value as FlightBookerOption)\n  }\n\n  const handleStartDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    flightBooker.command.updateStartDate(event.target.value)\n  }\n\n  const handleEndDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    flightBooker.command.updateEndDate(event.target.value)\n  }\n\n  const handleBookButtonClick = () => {\n    if (status.bookButton === 'enabled') {\n      if (option === 'one-way') {\n        alert(`You have booked a one-way flight on ${startDateInput}`)\n      } else {\n        alert(`You have booked return flight from ${startDateInput} to ${endDateInput}`)\n      }\n    }\n  }\n\n  return (\n    <div\n      style={{\n        width: 400,\n        border: '1px solid #eaeaea',\n        boxSizing: 'border-box',\n        padding: 10,\n      }}\n    >\n      <h2>Flight Booker</h2>\n      <div>\n        <select value={option} onChange={handleOptionChange}>\n          <option value=\"one-way\">One-way flight</option>\n          <option value=\"return\">Return flight</option>\n        </select>\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          style={{\n            backgroundColor: status.startDate === 'invalid' ? 'red' : '',\n          }}\n          value={startDateInput}\n          onChange={handleStartDateChange}\n        />\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          style={{\n            backgroundColor: status.endDate === 'invalid' ? 'red' : '',\n          }}\n          disabled={status.endDate === 'disabled'}\n          value={endDateInput}\n          onChange={handleEndDateChange}\n        />\n      </div>\n      <div>\n        <button disabled={status.bookButton === 'disabled'} onClick={handleBookButtonClick}>\n          Book\n        </button>\n      </div>\n    </div>\n  )\n}\n","import { merge, animationFrames, of, NEVER } from 'rxjs'\n\nimport { distinctUntilChanged, map, mapTo, pairwise, switchMap, takeUntil } from 'rxjs/operators'\n\nimport { Remesh } from 'remesh'\n\nexport const Timer = Remesh.domain({\n  name: 'timer',\n  inspectable: false,\n  impl: (domain) => {\n    const DurationState = domain.state({\n      name: 'duration',\n      default: 15000,\n    })\n\n    const ElapsedState = domain.state({\n      name: 'elapsed',\n      default: 0,\n    })\n\n    const StartEvent = domain.event({\n      name: 'StartEvent',\n    })\n\n    const StopEvent = domain.event({\n      name: 'StopEvent',\n    })\n\n    const updateElapsed = domain.command({\n      name: 'updateElapsed',\n      impl: ({ get }, increment: number) => {\n        const duration = get(DurationState())\n        const elapsed = get(ElapsedState())\n\n        if (elapsed > duration) {\n          return StopEvent()\n        }\n\n        return ElapsedState().new(elapsed + increment)\n      },\n    })\n\n    const updateDuration = domain.command({\n      name: 'updateDuration',\n      impl: ({ get }, newDuration: number) => {\n        const elapsed = get(ElapsedState())\n\n        if (newDuration > elapsed) {\n          return [DurationState().new(newDuration), StartEvent()]\n        }\n\n        return DurationState().new(newDuration)\n      },\n    })\n\n    const resetElapsed = domain.command({\n      name: 'resetElapsed',\n      impl: ({}) => {\n        return [ElapsedState().new(0), StartEvent()]\n      },\n    })\n\n    const updateElapsed$ = domain.command$({\n      name: 'updateElapsed$',\n      impl: ({ fromEvent }) => {\n        const startEvent$ = fromEvent(StartEvent).pipe(map(() => 1))\n        const stopEvent$ = fromEvent(StopEvent).pipe(map(() => 0))\n\n        const main$ = merge(startEvent$, stopEvent$).pipe(\n          distinctUntilChanged(),\n          switchMap((signal) => {\n            if (signal === 0) {\n              return NEVER\n            }\n            return animationFrames().pipe(\n              pairwise(),\n              map(([a, b]) => b.elapsed - a.elapsed),\n              map((increment) => updateElapsed(increment)),\n              takeUntil(fromEvent(StopEvent)),\n            )\n          }),\n        )\n\n        return merge(main$, of(StartEvent()))\n      },\n    })\n\n    domain.ignite(() => updateElapsed$())\n\n    return {\n      query: {\n        duration: DurationState.query,\n        elapsed: ElapsedState.query,\n      },\n      command: {\n        resetElapsed,\n        updateDuration,\n      },\n    }\n  },\n})\n","import React from 'react'\nimport { useRemeshDomain, useRemeshQuery } from 'remesh-react'\n\nimport { Timer } from 'remesh-domains-for-demos/dist/7guis/Timer'\n\nexport const TimerApp = () => {\n  const timer = useRemeshDomain(Timer())\n  const elapsed = useRemeshQuery(timer.query.elapsed())\n  const duration = useRemeshQuery(timer.query.duration())\n\n  const handleDurationChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const duration = parseInt(event.target.value, 10)\n    if (!isNaN(duration)) {\n      timer.command.updateDuration(duration)\n    }\n  }\n\n  const handleResetElapsed = () => {\n    timer.command.resetElapsed()\n  }\n\n  return (\n    <div\n      style={{\n        width: 400,\n        border: '1px solid #eaeaea',\n        boxSizing: 'border-box',\n        padding: 10,\n      }}\n    >\n      <h2>Timer</h2>\n      <div style={{ display: 'flex' }}>\n        <label style={{ marginRight: 10, whiteSpace: 'nowrap' }}>Elapsed Timer:</label>\n        <div style={{ width: '100%' }}>\n          <span\n            style={{\n              display: 'inline-block',\n              height: 10,\n              background: 'green',\n              width: `${Math.min(elapsed / duration, 1) * 100}%`,\n              verticalAlign: 'middle',\n              borderRadius: 5,\n            }}\n          ></span>\n        </div>\n      </div>\n      <div>{elapsed > duration ? (duration / 1000).toFixed(1) : (elapsed / 1000).toFixed(1)}s</div>\n      <div style={{ display: 'flex' }}>\n        <label style={{ width: 100, marginRight: 10 }}>Duration:</label>\n        <input\n          style={{ width: '100%' }}\n          type=\"range\"\n          min={0}\n          max={30000}\n          value={duration}\n          onChange={handleDurationChange}\n        />\n      </div>\n      <div>\n        <button style={{ width: '100% ' }} onClick={handleResetElapsed}>\n          Reset Timer\n        </button>\n      </div>\n    </div>\n  )\n}\n","import { Remesh } from 'remesh'\nimport { ListModule } from 'remesh/modules/list'\n\nexport type Name = {\n  name: string\n  surname: string\n}\n\nexport type NameItem = {\n  id: string\n} & Name\n\nexport const CRUD = Remesh.domain({\n  name: 'CRUD',\n  impl: (domain) => {\n    let nameUid = 0\n\n    const nameListDomain = ListModule<NameItem>(domain, {\n      name: 'Name',\n      key: (item) => item.id,\n    })\n\n    const FilterPrefixState = domain.state({\n      name: 'FilterPrefix',\n      default: '',\n    })\n\n    const updateFilterPrefix = domain.command({\n      name: 'updateFilterPrefix',\n      impl: ({}, prefix: string) => {\n        return FilterPrefixState().new(prefix)\n      },\n    })\n\n    const CreatedState = domain.state<Name>({\n      name: 'Created',\n      default: {\n        name: '',\n        surname: '',\n      },\n    })\n\n    const updateCreated = domain.command({\n      name: 'UpdateCreated',\n      impl: ({ get }, name: Partial<Name>) => {\n        const currentName = get(CreatedState())\n        return CreatedState().new({\n          ...currentName,\n          ...name,\n        })\n      },\n    })\n\n    const SelectedState = domain.state<NameItem | null>({\n      name: 'Selected',\n      default: null,\n    })\n\n    const selectItem = domain.command({\n      name: 'Select',\n      impl: ({ get }, targetItemId: string | null) => {\n        const currentSelected = get(SelectedState())\n\n        if (targetItemId === null) {\n          if (currentSelected === null) {\n            return null\n          } else {\n            return SelectedState().new(null)\n          }\n        }\n\n        if (currentSelected && currentSelected.id === targetItemId) {\n          return SelectedState().new(null)\n        }\n\n        const targetItem = get(nameListDomain.query.item(targetItemId))\n\n        return SelectedState().new(targetItem)\n      },\n    })\n\n    const updateSelectedName = domain.command({\n      name: 'UpdateSelectedName',\n      impl: ({ get }, name: Partial<Name>) => {\n        const selected = get(SelectedState())\n\n        if (selected === null) {\n          return []\n        }\n\n        return SelectedState().new({\n          ...selected,\n          ...name,\n        })\n      },\n    })\n\n    const filteredList = domain.query({\n      name: 'FilteredListQuery',\n      impl: ({ get }) => {\n        const filterPrefix = get(FilterPrefixState())\n        const nameList = get(nameListDomain.query.itemList())\n\n        if (filterPrefix === '') {\n          return nameList\n        }\n\n        return nameList.filter((item) => item.surname.startsWith(filterPrefix))\n      },\n    })\n\n    const syncSelected = domain.command({\n      name: 'SyncSelected',\n      impl: ({ get }) => {\n        const selected = get(SelectedState())\n\n        if (selected === null) {\n          return []\n        }\n\n        return nameListDomain.command.updateItem(selected)\n      },\n    })\n\n    const createNameItem = domain.command({\n      name: 'CreateNameItem',\n      impl: ({ get }) => {\n        const created = get(CreatedState())\n        const newItem = {\n          id: `${nameUid++}`,\n          ...created,\n        }\n\n        return [nameListDomain.command.addItem(newItem), updateCreated({ name: '', surname: '' })]\n      },\n    })\n\n    return {\n      query: {\n        ...nameListDomain.query,\n        filteredList: filteredList,\n        selected: SelectedState.query,\n        filterPrefix: FilterPrefixState.query,\n        created: CreatedState.query,\n      },\n      command: {\n        ...nameListDomain.command,\n        updateFilterPrefix: updateFilterPrefix,\n        selectItem: selectItem,\n        updateCreated: updateCreated,\n        updateSelectedName: updateSelectedName,\n        createNameItem: createNameItem,\n        syncSelected: syncSelected,\n      },\n    }\n  },\n})\n","import { ComponentPropsWithoutRef, useEffect, useRef } from 'react'\n\nexport const OuterClickWrapper = (props: OuterClickWrapperProps) => {\n  const { onOuterClick, ...restProps } = props\n  const containerRef = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      if (!(event.target as Node)?.parentElement) {\n        return\n      }\n\n      const isOuterClick = !!(containerRef.current && !containerRef.current.contains(event.target as Node))\n\n      if (isOuterClick) {\n        onOuterClick?.(event)\n      }\n    }\n\n    document.addEventListener('click', handleClick, false)\n    return () => {\n      document.removeEventListener('click', handleClick, false)\n    }\n  }, [])\n\n  return <div ref={containerRef} {...restProps}></div>\n}\ntype OuterClickWrapperProps = ComponentPropsWithoutRef<'div'> & {\n  onOuterClick?: (event: MouseEvent) => void\n}\n","import React from 'react'\n\nimport { useRemeshDomain, useRemeshQuery } from 'remesh-react'\n\nimport { CRUD } from 'remesh-domains-for-demos/dist/7guis/CRUD'\n\nimport { OuterClickWrapper } from './OuterClickWrapper'\n\nexport const CRUDApp = () => {\n  const domain = useRemeshDomain(CRUD())\n  const filteredList = useRemeshQuery(domain.query.filteredList())\n  const filter = useRemeshQuery(domain.query.filterPrefix())\n  const created = useRemeshQuery(domain.query.created())\n  const selected = useRemeshQuery(domain.query.selected())\n\n  const handleFilterChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    domain.command.updateFilterPrefix(e.target.value)\n  }\n\n  const handleSelect = (itemId: string | null) => {\n    domain.command.selectItem(itemId)\n  }\n\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (selected) {\n      domain.command.updateSelectedName({\n        name: e.target.value,\n      })\n    } else {\n      domain.command.updateCreated({ name: e.target.value })\n    }\n  }\n\n  const handleSurnameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (selected) {\n      domain.command.updateSelectedName({\n        surname: e.target.value,\n      })\n    } else {\n      domain.command.updateCreated({ surname: e.target.value })\n    }\n  }\n\n  const handleCreate = () => {\n    if (selected === null) {\n      domain.command.createNameItem()\n    }\n  }\n\n  const handleSync = () => {\n    if (selected) {\n      domain.command.syncSelected()\n    }\n  }\n\n  const handleDelete = () => {\n    if (selected) {\n      domain.command.deleteItem(selected.id)\n      domain.command.selectItem(null)\n    }\n  }\n\n  return (\n    <OuterClickWrapper\n      style={{\n        width: 400,\n        border: '1px solid #eaeaea',\n        boxSizing: 'border-box',\n        padding: 10,\n      }}\n      onOuterClick={() => {\n        handleSelect(null)\n      }}\n    >\n      <h2>CRUD</h2>\n      <div>\n        <label htmlFor=\"\">Filter prefix</label>\n        <input type=\"text\" value={filter} onChange={handleFilterChange} />\n      </div>\n      <div\n        style={{\n          display: 'flex',\n        }}\n      >\n        <div\n          style={{\n            width: '50%',\n            height: 100,\n            border: '1px solid #eaeaea',\n            overflow: 'scroll',\n          }}\n        >\n          {filteredList.map((item) => {\n            const fullName = item.name + ', ' + item.surname\n\n            return (\n              <div\n                key={item.id}\n                style={{\n                  background: selected?.id === item.id ? 'blue' : '',\n                  color: selected?.id === item.id ? 'white' : '',\n                }}\n                onClick={() => {\n                  handleSelect(item.id)\n                }}\n              >\n                {fullName}\n              </div>\n            )\n          })}\n        </div>\n        <div style={{ width: '50%', padding: 10 }}>\n          <div>\n            <label>Name:</label>\n            <input type=\"text\" value={selected ? selected.name : created.name} onChange={handleNameChange} />\n          </div>\n          <div>\n            <label>Surname:</label>\n            <input type=\"text\" value={selected ? selected.surname : created.surname} onChange={handleSurnameChange} />\n          </div>\n        </div>\n\n        <div>\n          <button disabled={selected !== null} style={{ marginRight: 10 }} onClick={handleCreate}>\n            Create\n          </button>\n          <button disabled={selected === null} style={{ marginRight: 10 }} onClick={handleSync}>\n            Update\n          </button>\n          <button disabled={selected === null} style={{ marginRight: 10 }} onClick={handleDelete}>\n            Delete\n          </button>\n        </div>\n      </div>\n    </OuterClickWrapper>\n  )\n}\n","import { Remesh } from 'remesh'\n\nexport type Position = { x: number; y: number }\n\nexport type DrawAction = {\n  position: Position\n  diameter: number\n}\n\nexport type AdjustAction = {\n  index: number\n  diameter: number\n}\n\nexport type Circle = {\n  position: Position\n  diameter: number\n}\n\nexport type DrawState = {\n  circles: Circle[]\n}\n\nexport type TooltipsState =\n  | {\n      type: 'default'\n    }\n  | {\n      type: 'show-tips'\n      index: number\n      circle: Circle\n      pageX: number\n      pageY: number\n    }\n  | {\n      type: 'open-slider'\n      index: number\n      circle: Circle\n      pageX: number\n      pageY: number\n    }\n\nexport type HistoryStateItem =\n  | {\n      action: 'add-circle'\n      state: DrawState\n    }\n  | {\n      action: 'adjust-circle'\n      index: number\n      state: DrawState\n    }\n\nexport type HistoryState = {\n  items: HistoryStateItem[]\n  currentIndex: number\n}\n\nexport const CircleDrawer = Remesh.domain({\n  name: 'CircleDrawer',\n  impl: (domain) => {\n    const HistoryState = domain.state<HistoryState>({\n      name: 'HistoryState',\n      default: {\n        items: [],\n        currentIndex: -1,\n      },\n    })\n\n    const recordHistoryState = domain.command({\n      name: 'recordHistoryState',\n      impl: ({ get }, state: HistoryStateItem) => {\n        const history = get(HistoryState())\n\n        const previousItems = history.items.slice(0, history.currentIndex + 1)\n\n        /**\n         * If the current state is the same as the last state,\n         * then we don't need to record it.\n         * This is because we are going to replace the last state\n         * with the current state.\n         *\n         * This is a bit of a hack, but it works.\n         *\n         * TODO: Find a better way to do this.\n         */\n        if (state.action === 'adjust-circle') {\n          const lastState = previousItems[previousItems.length - 1]\n          if (lastState.action === 'adjust-circle' && lastState.index === state.index) {\n            previousItems.pop()\n          }\n        }\n\n        const newItems = [...previousItems, state]\n        const newIndex = newItems.length - 1\n\n        return HistoryState().new({\n          items: newItems,\n          currentIndex: newIndex,\n        })\n      },\n    })\n\n    const DrawState = domain.state<DrawState>({\n      name: 'DrawState',\n      default: {\n        circles: [],\n      },\n    })\n\n    const undo = domain.command({\n      name: 'undo',\n      impl: ({ get }) => {\n        const history = get(HistoryState())\n        const canUndo = get(canUndoQuery())\n        const newIndex = history.currentIndex - 1\n\n        if (!canUndo || newIndex < 0) {\n          return [\n            DrawState().new({\n              circles: [],\n            }),\n            HistoryState().new({\n              items: history.items,\n              currentIndex: -1,\n            }),\n          ]\n        }\n\n        return [\n          DrawState().new(history.items[newIndex].state),\n          HistoryState().new({\n            items: history.items,\n            currentIndex: newIndex,\n          }),\n        ]\n      },\n    })\n\n    const redo = domain.command({\n      name: 'redo',\n      impl: ({ get }) => {\n        const history = get(HistoryState())\n        const canRedo = get(canRedoQuery())\n\n        if (!canRedo) {\n          return []\n        }\n\n        const newIndex = history.currentIndex + 1\n\n        return [\n          DrawState().new(history.items[newIndex].state),\n          HistoryState().new({\n            items: history.items,\n            currentIndex: newIndex,\n          }),\n        ]\n      },\n    })\n\n    const canUndoQuery = domain.query({\n      name: 'CanUndoQuery',\n      impl: ({ get }) => {\n        const history = get(HistoryState())\n        return history.currentIndex >= 0\n      },\n    })\n\n    const canRedoQuery = domain.query({\n      name: 'CanRedoQuery',\n      impl: ({ get }) => {\n        const history = get(HistoryState())\n        return history.currentIndex < history.items.length - 1\n      },\n    })\n\n    const SelectedIndexState = domain.state<number>({\n      name: 'SelectedIndexState',\n      default: -1,\n    })\n\n    const setSelectedIndex = domain.command({\n      name: 'setSelectedIndex',\n      impl: ({}, index: number) => {\n        return SelectedIndexState().new(index)\n      },\n    })\n\n    const SelectedCircleInfoQuery = domain.query({\n      name: 'SelectedCircleInfoQuery',\n      impl: ({ get }) => {\n        const index = get(SelectedIndexState())\n        const circles = get(DrawState()).circles\n\n        if (index === -1) {\n          return null\n        }\n\n        return {\n          index,\n          circle: circles[index],\n        }\n      },\n    })\n\n    const draw = domain.command({\n      name: 'draw',\n      impl: ({ get }, action: DrawAction) => {\n        const state = get(DrawState())\n        const newState = {\n          circles: [...state.circles, { position: action.position, diameter: action.diameter }],\n        }\n        return [\n          DrawState().new(newState),\n          recordHistoryState({\n            action: 'add-circle',\n            state: newState,\n          }),\n        ]\n      },\n    })\n\n    const adjust = domain.command({\n      name: 'adjust',\n      impl: ({ get }, action: AdjustAction) => {\n        const state = get(DrawState())\n        const circles = state.circles.map((circle, index) => {\n          if (index === action.index) {\n            return {\n              position: circle.position,\n              diameter: action.diameter,\n            }\n          }\n          return circle\n        })\n\n        const newState = {\n          circles,\n        }\n\n        return [\n          DrawState().new(newState),\n          recordHistoryState({\n            action: 'adjust-circle',\n            index: action.index,\n            state: newState,\n          }),\n        ]\n      },\n    })\n\n    const TooltipsState = domain.state<TooltipsState>({\n      name: 'TooltipsState',\n      default: {\n        type: 'default',\n      },\n    })\n\n    const updateTooltips = domain.command({\n      name: 'updateTooltips',\n      impl: ({}, newState: TooltipsState) => {\n        return TooltipsState().new(newState)\n      },\n    })\n\n    return {\n      query: {\n        historyState: HistoryState.query,\n        drawState: DrawState.query,\n        tooltipsState: TooltipsState.query,\n        selectedIndex: SelectedIndexState.query,\n        selectedCircleInfo: SelectedCircleInfoQuery,\n        canUndo: canUndoQuery,\n        canRedo: canRedoQuery,\n      },\n      command: {\n        draw,\n        adjust,\n        updateTooltips,\n        undo,\n        redo,\n        setSelectedIndex,\n      },\n    }\n  },\n})\n\nexport const positionInCircle = (position: Position, circle: Circle): boolean => {\n  const { x, y } = position\n  const { diameter, position: circlePosition } = circle\n  const { x: circleX, y: circleY } = circlePosition\n  const radius = diameter / 2\n  const dx = x - circleX\n  const dy = y - circleY\n\n  return dx * dx + dy * dy < radius * radius\n}\n","import React from 'react'\n\nimport { useRemeshDomain, useRemeshQuery } from 'remesh-react'\n\nimport { CircleDrawer, positionInCircle, Position } from 'remesh-domains-for-demos/dist/7guis/CircleDrawer'\n\nimport { OuterClickWrapper } from './OuterClickWrapper'\n\nexport const CircleDrawerApp = () => {\n  const domain = useRemeshDomain(CircleDrawer())\n  const drawState = useRemeshQuery(domain.query.drawState())\n  const tooltipsState = useRemeshQuery(domain.query.tooltipsState())\n  const selectedCircleInfo = useRemeshQuery(domain.query.selectedCircleInfo())\n  const canUndo = useRemeshQuery(domain.query.canUndo())\n  const canRedo = useRemeshQuery(domain.query.canRedo())\n\n  const getCircleInfo = (position: Position) => {\n    const circle = drawState.circles.find((circle) => {\n      return positionInCircle(position, circle)\n    })\n\n    if (!circle) {\n      return null\n    }\n\n    const index = drawState.circles.indexOf(circle)\n\n    return {\n      index,\n      circle,\n    }\n  }\n\n  const handleRightClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    e.preventDefault()\n    const position = { x: e.pageX, y: e.pageY }\n\n    const circleInfo = getCircleInfo(position)\n\n    if (circleInfo) {\n      domain.command.setSelectedIndex(circleInfo.index)\n      domain.command.updateTooltips({\n        type: 'show-tips',\n        index: circleInfo.index,\n        circle: circleInfo.circle,\n        pageX: e.pageX,\n        pageY: e.pageY,\n      })\n    }\n  }\n\n  const handleLeftClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (tooltipsState.type !== 'default') {\n      return\n    }\n\n    const position = { x: e.pageX, y: e.pageY }\n    const circleInfo = getCircleInfo(position)\n\n    if (!circleInfo) {\n      domain.command.draw({ position, diameter: 30 })\n    }\n  }\n\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (tooltipsState.type !== 'default') {\n      return\n    }\n\n    const position = { x: e.pageX, y: e.pageY }\n    const circleInfo = getCircleInfo(position)\n\n    if (circleInfo) {\n      domain.command.setSelectedIndex(circleInfo.index)\n    } else {\n      domain.command.setSelectedIndex(-1)\n    }\n  }\n\n  const handleOpenSlider = () => {\n    if (tooltipsState.type === 'show-tips') {\n      domain.command.updateTooltips({\n        type: 'open-slider',\n        index: tooltipsState.index,\n        circle: tooltipsState.circle,\n        pageX: tooltipsState.pageX,\n        pageY: tooltipsState.pageY,\n      })\n    }\n  }\n\n  const handleCloseSlider = () => {\n    console.log('handleCloseSlider')\n    domain.command.updateTooltips({\n      type: 'default',\n    })\n  }\n\n  const handleAdust = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(event.target.value, 10)\n\n    if (selectedCircleInfo && !isNaN(value)) {\n      domain.command.adjust({\n        index: selectedCircleInfo.index,\n        diameter: value,\n      })\n    }\n  }\n\n  return (\n    <div\n      style={{\n        border: '1px solid #eaeaea',\n        boxSizing: 'border-box',\n        padding: 10,\n      }}\n    >\n      <h2>Circle Drawer</h2>\n      <div\n        style={{\n          width: 400,\n          textAlign: 'center',\n          padding: 10,\n        }}\n      >\n        <button\n          onClick={() => domain.command.undo()}\n          style={{\n            margin: '0 10px',\n          }}\n          disabled={!canUndo}\n        >\n          Undo\n        </button>\n        <button\n          onClick={() => domain.command.redo()}\n          style={{\n            margin: '0 10px',\n          }}\n          disabled={!canRedo}\n        >\n          Redo\n        </button>\n      </div>\n      <div\n        style={{\n          width: 400,\n          height: 400,\n          border: '1px solid #eaeaea',\n          boxSizing: 'border-box',\n          overflow: 'hidden',\n        }}\n        onClick={handleLeftClick}\n        onMouseMove={handleMouseMove}\n      >\n        {drawState.circles.map((circle, index) => {\n          return (\n            <div\n              key={circle.position.x + '-' + circle.position.y + '-' + circle.diameter}\n              style={{\n                position: 'absolute',\n                left: circle.position.x - circle.diameter / 2,\n                top: circle.position.y - circle.diameter / 2,\n                width: circle.diameter,\n                height: circle.diameter,\n                borderRadius: circle.diameter / 2,\n                border: '1px solid #666',\n                backgroundColor: selectedCircleInfo?.index === index ? '#eaeaea' : '',\n              }}\n              onContextMenu={handleRightClick}\n            ></div>\n          )\n        })}\n      </div>\n      {tooltipsState.type === 'show-tips' && (\n        <OuterClickWrapper\n          key=\"show-tips\"\n          style={{\n            position: 'absolute',\n            left: tooltipsState.pageX,\n            top: tooltipsState.pageY,\n            zIndex: 100,\n            background: '#fff',\n            border: '1px solid #666',\n            padding: 10,\n          }}\n          onOuterClick={handleCloseSlider}\n          onClick={handleOpenSlider}\n        >\n          Adjust Diameter\n        </OuterClickWrapper>\n      )}\n      {tooltipsState.type === 'open-slider' && (\n        <OuterClickWrapper\n          key=\"open-slider\"\n          style={{\n            position: 'absolute',\n            left: tooltipsState.pageX,\n            top: tooltipsState.pageY,\n            background: '#fff',\n            border: '1px solid #666',\n            zIndex: 100,\n            padding: 10,\n          }}\n          onOuterClick={handleCloseSlider}\n        >\n          <p>Adjust Diameter</p>\n          <div>\n            <input\n              type=\"range\"\n              value={selectedCircleInfo?.circle.diameter ?? ''}\n              min={1}\n              max={150}\n              onChange={handleAdust}\n            />\n          </div>\n        </OuterClickWrapper>\n      )}\n    </div>\n  )\n}\n","import { Remesh } from 'remesh'\n\nexport type CellContent =\n  | {\n      type: 'text'\n      text: string\n    }\n  | {\n      type: 'formula'\n      formula: string\n    }\n\nexport type CellState = {\n  content: CellContent\n  isEditing: boolean\n}\n\nexport const Cells = Remesh.domain({\n  name: 'Cells',\n  inspectable: false,\n  impl: (domain) => {\n    const RowKeyListState = domain.state({\n      name: 'RowKeyListState',\n      default: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(String),\n    })\n\n    const ColumnKeyListState = domain.state({\n      name: 'ColumnKeyListState',\n      default: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'],\n    })\n\n    const CellState = domain.state({\n      name: 'CellState',\n      impl: (_: string): CellState => {\n        return {\n          content: {\n            type: 'text',\n            text: '',\n          },\n          isEditing: false,\n        }\n      },\n    })\n\n    const cell = domain.query({\n      name: 'CellQuery',\n      impl: ({ get }, key: string) => {\n        const state = get(CellState(key))\n\n        if (state.content.type === 'text') {\n          return {\n            type: 'text' as const,\n            isEditing: state.isEditing,\n            content: state.content.text,\n            displayContent: state.content.text,\n          }\n        }\n\n        if (state.content.type === 'formula') {\n          const evaluate = compile(state.content.formula)\n          const getCellValue = (cellKey: string) => {\n            return Number(get(cell(cellKey)).displayContent)\n          }\n\n          return {\n            type: 'formula' as const,\n            isEditing: state.isEditing,\n            content: state.content.formula,\n            displayContent: evaluate(getCellValue),\n          }\n        }\n\n        throw new Error('Unknown cell type')\n      },\n    })\n\n    const selectCell = domain.command({\n      name: 'selectCell',\n      impl: ({ get }, key: string) => {\n        const state = get(CellState(key))\n        return CellState(key).new({\n          content: state.content,\n          isEditing: true,\n        })\n      },\n    })\n\n    const unselectCell = domain.command({\n      name: 'unselectCell',\n      impl: ({ get }, key: string) => {\n        const state = get(CellState(key))\n        return CellState(key).new({\n          content: state.content,\n          isEditing: false,\n        })\n      },\n    })\n\n    const setCellContent = domain.command({\n      name: 'setCellContent',\n      impl: ({ get }, { key, input }: { key: string; input: string }) => {\n        const state = get(CellState(key))\n\n        if (input.startsWith('=')) {\n          return CellState(key).new({\n            content: {\n              type: 'formula',\n              formula: input,\n            },\n            isEditing: state.isEditing,\n          })\n        }\n\n        return CellState(key).new({\n          content: {\n            type: 'text',\n            text: input,\n          },\n          isEditing: state.isEditing,\n        })\n      },\n    })\n\n    return {\n      query: {\n        cell: cell,\n        columnKeyList: ColumnKeyListState.query,\n        rowKeyList: RowKeyListState.query,\n      },\n      command: {\n        selectCell,\n        unselectCell,\n        setCellContent,\n      },\n    }\n  },\n})\n\nconst compile = (formula: string) => {\n  return (get: Function) => {\n    try {\n      const expression = formula.slice(1).replace(/\\w\\d+/g, (matched) => {\n        return `get('${matched}')`\n      })\n\n      const fn = new Function('get', `return (${expression}).toString()`)\n\n      return fn(get)\n    } catch {\n      return '-'\n    }\n  }\n}\n","import React from 'react'\nimport { useRemeshDomain, useRemeshQuery } from 'remesh-react'\n\nimport { Cells } from 'remesh-domains-for-demos/dist/7guis/Cells'\n\nexport const CellsApp = () => {\n  const cells = useRemeshDomain(Cells())\n  const columnKeyList = useRemeshQuery(cells.query.columnKeyList())\n  const rowKeyList = useRemeshQuery(cells.query.rowKeyList())\n\n  return (\n    <div>\n      <h2>Cells</h2>\n      <table\n        style={{\n          borderCollapse: 'collapse',\n          border: '1px solid #bbb',\n          textAlign: 'center',\n        }}\n      >\n        <thead>\n          <tr\n            style={{\n              backgroundColor: '#f6f6f6',\n            }}\n          >\n            <th style={{ width: 30, display: 'block' }}></th>\n            {columnKeyList.map((key) => (\n              <th\n                key={key}\n                style={{\n                  maxWidth: 80,\n                  border: '1px solid #bbb',\n                }}\n              >\n                {key}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rowKeyList.map((rowKey) => {\n            return (\n              <tr key={rowKey}>\n                <RowView rowKey={rowKey} columnKeyList={columnKeyList} />\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\ntype RowViewProps = {\n  rowKey: string\n  columnKeyList: string[]\n}\n\nconst RowView = ({ columnKeyList, rowKey }: RowViewProps) => {\n  const cells = useRemeshDomain(Cells())\n\n  return (\n    <>\n      <td\n        style={{\n          width: 30,\n          border: '1px solid #bbb',\n          backgroundColor: '#f6f6f6',\n        }}\n      >\n        {rowKey}\n      </td>\n      {columnKeyList.map((columnKey) => {\n        const cellKey = `${columnKey}${rowKey}`\n        return (\n          <td\n            key={cellKey}\n            style={{\n              maxWidth: 80,\n              minWidth: 80,\n              border: '1px solid #bbb',\n              overflow: 'hidden',\n            }}\n            onClick={(event) => {\n              if (event.target instanceof HTMLInputElement) {\n                return\n              }\n              cells.command.selectCell(cellKey)\n            }}\n          >\n            <CellView cellKey={cellKey} />\n          </td>\n        )\n      })}\n    </>\n  )\n}\n\nconst CellView = ({ cellKey }: { cellKey: string }) => {\n  const cells = useRemeshDomain(Cells())\n  const cell = useRemeshQuery(cells.query.cell(cellKey))\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    cells.command.setCellContent({ key: cellKey, input: e.target.value })\n  }\n\n  return (\n    <>\n      {cell.isEditing && (\n        <input\n          style={{\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'transparent',\n            boxSizing: 'border-box',\n            textAlign: 'center',\n          }}\n          value={cell.content}\n          onChange={handleChange}\n          onBlur={() => {\n            if (cell.isEditing) {\n              cells.command.unselectCell(cellKey)\n            }\n          }}\n          autoFocus\n        />\n      )}\n\n      {!cell.isEditing && cell.displayContent}\n    </>\n  )\n}\n","import React, { StrictMode } from 'react'\nimport * as ReactDOMClient from 'react-dom/client'\n\nimport { Remesh } from 'remesh'\n\nimport { RemeshRoot } from 'remesh-react'\n\nimport { RemeshReduxDevtools } from 'remesh-redux-devtools'\nimport { RemeshLogger } from 'remesh-logger'\n\nimport { CounterApp } from './Counter'\nimport { TemperatureConverterApp } from './TemperatureConverter'\nimport { FlightBookerApp } from './FlightBooker'\nimport { TimerApp } from './Timer'\nimport { CRUDApp } from './CRUD'\nimport { CircleDrawerApp } from './CircleDrawer'\nimport { CellsApp } from './Cells'\n\nconst Root = () => {\n  return (\n    <div>\n      <h1>7GUIs in React/Remesh/TypeScript</h1>\n      <p>This is a live version of an implementation (source) of 7GUIs with React, TypeScript and Remesh.</p>\n      <hr />\n      <CounterApp />\n      <hr />\n      <TemperatureConverterApp />\n      <hr />\n      <FlightBookerApp />\n      <hr />\n      <TimerApp />\n      <hr />\n      <CRUDApp />\n      <hr />\n      <CircleDrawerApp />\n      <hr />\n      <CellsApp />\n    </div>\n  )\n}\n\nconst container = document.getElementById('root')\n\nif (container) {\n  const root = ReactDOMClient.createRoot(container)\n  const store = Remesh.store({\n    inspectors: [RemeshReduxDevtools(), RemeshLogger()],\n  })\n\n  root.render(\n    <StrictMode>\n      <RemeshRoot store={store}>\n        <Root />\n      </RemeshRoot>\n    </StrictMode>,\n  )\n}\n"],"names":["CounterApp","counter","useRemeshDomain","Counter","count","useRemeshQuery","query","width","border","boxSizing","padding","_jsx","_jsxs","command","incre","TemperatureConverterApp","temperatureConverter","TemperatureConverter","celsius","fahrenheit","event","updateCelsius","target","value","handleCelsius","updateFahrenheit","handleFahrenheit","FlightBookerApp","flightBooker","FlightBooker","option","status","startDateInput","endDateInput","handleOptionChange","updateOption","handleStartDateChange","updateStartDate","handleEndDateChange","updateEndDate","handleBookButtonClick","bookButton","alert","backgroundColor","startDate","endDate","TimerApp","timer","Timer","elapsed","duration","handleDurationChange","parseInt","isNaN","updateDuration","handleResetElapsed","resetElapsed","display","marginRight","whiteSpace","height","background","Math","min","verticalAlign","borderRadius","toFixed","OuterClickWrapper","props","onOuterClick","restProps","containerRef","useRef","useEffect","handleClick","parentElement","isOuterClick","current","contains","addEventListener","removeEventListener","CRUDApp","domain","CRUD","filteredList","filter","filterPrefix","created","selected","handleFilterChange","e","updateFilterPrefix","handleSelect","itemId","selectItem","handleNameChange","updateSelectedName","name","updateCreated","handleSurnameChange","surname","handleCreate","createNameItem","handleSync","syncSelected","handleDelete","deleteItem","id","overflow","map","item","fullName","color","CircleDrawerApp","CircleDrawer","drawState","tooltipsState","selectedCircleInfo","canUndo","canRedo","getCircleInfo","position","circle","circles","find","positionInCircle","index","indexOf","handleRightClick","preventDefault","x","pageX","y","pageY","circleInfo","setSelectedIndex","updateTooltips","type","handleLeftClick","draw","diameter","handleMouseMove","handleOpenSlider","handleCloseSlider","console","log","handleAdust","adjust","textAlign","undo","margin","redo","left","top","zIndex","CellsApp","cells","Cells","columnKeyList","rowKeyList","borderCollapse","key","maxWidth","rowKey","RowView","_Fragment","columnKey","cellKey","minWidth","HTMLInputElement","selectCell","CellView","cell","handleChange","setCellContent","input","isEditing","content","unselectCell","displayContent","Root","container","document","getElementById","root","ReactDOMClient","store","Remesh","inspectors","RemeshReduxDevtools","RemeshLogger","render","StrictMode"],"mappings":"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"}