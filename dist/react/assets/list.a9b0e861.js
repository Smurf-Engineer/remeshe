import{R as x}from"./remesh-react.691c86dd.js";const M=(c,t)=>{var I;const l=c.state({name:`${t.name}.ItemListState`,default:(I=t.default)!=null?I:[]}),y=c.query({name:`${t.name}.ItemListQuery`,impl:({get:e})=>e(l())}),L=c.query({name:`${t.name}.DerivedQuery`,impl:({get:e})=>{const n=e(l()),m=[],r={};for(let s=0;s<n.length;s++){const a=n[s],u=t.key(a);m.push(u),r[u]=a}return{record:r,keyList:m}}}),C=(e,n)=>{for(const m of e)if(t.key(m)===n)return!0;return!1},$=c.query({name:`${t.name}.HasItemByKeyQuery`,impl:({get:e},n)=>{const m=e(l());return C(m,n)}}),f=c.query({name:`${t.name}.KeyListQuery`,impl:({get:e})=>e(L()).keyList}),w=c.query({name:`${t.name}.ItemQuery`,impl:({get:e},n)=>{const m=e(L()).record;if(!(n in m))throw new Error(`${n} in not founded in ${t.name}`);return m[n]},onError:(e,n)=>n}),d=c.command({name:`${t.name}.SetListCommand`,impl:({},e)=>l().new(e)}),K=c.command({name:`${t.name}.AddItemCommand`,impl:({get:e},n)=>{const m=e(l());if(C(m,t.key(n)))throw new Error(`item with key ${t.key(n)} is already in list ${t.name}`);const r=m.concat(n);return d(r)}}),A=c.command({name:`${t.name}.AddItemListCommand`,impl:({get:e},n)=>{if(n.length===0)return null;const r=e(l()).concat(n);return d(r)}}),Q=c.command({name:`${t.name}.DeleteItemCommand`,impl:({get:e},n)=>{const m=e(l()),r=m.filter(s=>t.key(s)!==n);return r.length===m.length?null:d(r)}}),D=c.command({name:`${t.name}.DeleteItemListCommand`,impl:({get:e},n)=>{const m=e(y()),r=m.filter(s=>!n.includes(t.key(s)));return r.length===m.length?null:d(r)}}),U=c.command({name:`${t.name}.DeleteAllCommand`,impl:({})=>d([])}),k=(e,n)=>{const m=t.key(n),r=[];let s=!1;for(const a of e)t.key(a)===m?(r.push(n),s=!0):r.push(a);return s?r:null},g=c.command({name:`${t.name}.UpdateItemCommand`,impl:({get:e},n)=>{const m=e(l()),r=k(m,n);return r?l().new(r):null}}),q=c.command({name:`${t.name}.UpsertItemCommand`,impl:({get:e},n)=>{const m=e(l()),r=k(m,n);return l().new(r!=null?r:[...m,n])}}),B=c.command({name:`${t.name}.UpdateItemListCommand`,impl:({get:e},n)=>{const m=e(l()),r=[];let s=!1;for(const a of m){for(const u of n)if(t.key(a)===t.key(u)){r.push(u),s=!0;break}s||r.push(a)}return s?l().new(r):null}}),R=c.command({name:`${t.name}.UpdateItemListCommand`,impl:({get:e},n)=>{if(n.length===0)return null;const m=e(l()),r=m.slice(),s=m.map(a=>t.key(a));for(const a of n){const u=s.lastIndexOf(t.key(a));u>=0?r[u]=a:r.push(a)}return l().new(r)}}),S=c.command({name:`${t.name}.InsertAtCommand`,impl:({get:e},{index:n,item:m})=>{if(e(f()).includes(t.key(m)))return null;const s=e(y()),a=s.slice(0,n).concat(m).concat(s.slice(n));return d(a)}}),E=c.command({name:`${t.name}.InsertBeforeCommand`,impl:({get:e},{before:n,item:m})=>{const r=e(f()),s=t.key(m),a=t.key(n);if(r.includes(s))return null;const u=e(y()),i=[];for(const o of u)t.key(o)===a&&i.push(m),i.push(o);return d(i)}}),b=c.command({name:`${t.name}.InsertAfterCommand`,impl:({get:e},{after:n,item:m})=>{const r=e(f()),s=t.key(m),a=t.key(n);if(r.includes(s))return null;const u=e(y()),i=[];for(const o of u){const h=t.key(o);i.push(o),h===a&&i.push(m)}return d(i)}}),v=c.command({name:`${t.name}.ResetCommand`,impl:({})=>{var e;return d((e=t.default)!=null?e:[])}});return x.module({command:{SetListCommand:d,AddItemCommand:K,AddItemListCommand:A,DeleteItemCommand:Q,DeleteItemListCommand:D,DeleteAllCommand:U,UpdateItemCommand:g,UpsertItemCommand:q,UpdateItemListCommand:B,UpsertItemListCommand:R,InsertAtCommand:S,InsertBeforeCommand:E,InsertAfterCommand:b,ResetCommand:v},query:{KeyListQuery:f,HasItemByKeyQuery:$,ItemQuery:w,ItemListQuery:y}})};export{M as L};
//# sourceMappingURL=list.a9b0e861.js.map
