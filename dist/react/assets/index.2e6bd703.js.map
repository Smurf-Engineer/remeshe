{"version":3,"file":"index.2e6bd703.js","sources":["../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/scheduler/performanceTimestampProvider.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/scheduler/animationFrameProvider.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/observable/dom/animationFrames.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/observable/never.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/operators/pairwise.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js","../../../projects/domains/dist/7guis/Counter.js","../../../projects/react-demos/src/7guis/Counter.tsx","../../../projects/domains/dist/7guis/TemperatureConverter.js","../../../projects/react-demos/src/7guis/TemperatureConverter.tsx","../../../projects/domains/dist/7guis/FlightBooker.js","../../../projects/react-demos/src/7guis/FlightBooker.tsx","../../../projects/domains/dist/7guis/Timer.js","../../../projects/react-demos/src/7guis/Timer.tsx","../../../projects/domains/dist/7guis/CRUD.js","../../../projects/react-demos/src/7guis/OuterClickWrapper.tsx","../../../projects/react-demos/src/7guis/CRUD.tsx","../../../projects/domains/dist/7guis/CircleDrawer.js","../../../projects/react-demos/src/7guis/CircleDrawer.tsx","../../../projects/domains/dist/7guis/Cells.js","../../../projects/react-demos/src/7guis/Cells.tsx","../../../projects/react-demos/src/7guis/index.tsx"],"sourcesContent":["export var performanceTimestampProvider = {\n    now: function () {\n        return (performanceTimestampProvider.delegate || performance).now();\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=performanceTimestampProvider.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { Subscription } from '../Subscription';\nexport var animationFrameProvider = {\n    schedule: function (callback) {\n        var request = requestAnimationFrame;\n        var cancel = cancelAnimationFrame;\n        var delegate = animationFrameProvider.delegate;\n        if (delegate) {\n            request = delegate.requestAnimationFrame;\n            cancel = delegate.cancelAnimationFrame;\n        }\n        var handle = request(function (timestamp) {\n            cancel = undefined;\n            callback(timestamp);\n        });\n        return new Subscription(function () { return cancel === null || cancel === void 0 ? void 0 : cancel(handle); });\n    },\n    requestAnimationFrame: function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var delegate = animationFrameProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.requestAnimationFrame) || requestAnimationFrame).apply(void 0, __spreadArray([], __read(args)));\n    },\n    cancelAnimationFrame: function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var delegate = animationFrameProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.cancelAnimationFrame) || cancelAnimationFrame).apply(void 0, __spreadArray([], __read(args)));\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=animationFrameProvider.js.map","import { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\nexport function animationFrames(timestampProvider) {\n    return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\nfunction animationFramesFactory(timestampProvider) {\n    var schedule = animationFrameProvider.schedule;\n    return new Observable(function (subscriber) {\n        var subscription = new Subscription();\n        var provider = timestampProvider || performanceTimestampProvider;\n        var start = provider.now();\n        var run = function (timestamp) {\n            var now = provider.now();\n            subscriber.next({\n                timestamp: timestampProvider ? now : timestamp,\n                elapsed: now - start,\n            });\n            if (!subscriber.closed) {\n                subscription.add(schedule(run));\n            }\n        };\n        subscription.add(schedule(run));\n        return subscription;\n    });\n}\nvar DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n//# sourceMappingURL=animationFrames.js.map","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\nexport var NEVER = new Observable(noop);\nexport function never() {\n    return NEVER;\n}\n//# sourceMappingURL=never.js.map","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector) {\n    if (keySelector === void 0) { keySelector = identity; }\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate(function (source, subscriber) {\n        var previousKey;\n        var first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n//# sourceMappingURL=distinctUntilChanged.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function pairwise() {\n    return operate(function (source, subscriber) {\n        var prev;\n        var hasPrev = false;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var p = prev;\n            prev = value;\n            hasPrev && subscriber.next([p, value]);\n            hasPrev = true;\n        }));\n    });\n}\n//# sourceMappingURL=pairwise.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate(function (source, subscriber) {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, function () { return subscriber.complete(); }, noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=takeUntil.js.map","import { Remesh } from 'remesh';\nexport const Counter = Remesh.domain({\n    name: 'Counter',\n    impl: (domain) => {\n        const CounterState = domain.state({\n            name: 'CounterState',\n            default: 0,\n        });\n        const incre = domain.command({\n            name: 'increCommand',\n            impl: ({ get }) => {\n                const count = get(CounterState());\n                return CounterState().new(count + 1);\n            },\n        });\n        return {\n            query: {\n                count: CounterState.query,\n            },\n            command: {\n                incre,\n            },\n        };\n    },\n});\n//# sourceMappingURL=Counter.js.map","import { useRemeshDomain, useRemeshQuery } from 'remesh-react'\r\n\r\nimport { Counter } from 'remesh-domains-for-demos/dist/7guis/Counter'\r\n\r\nexport const CounterApp = () => {\r\n  const counter = useRemeshDomain(Counter())\r\n  const count = useRemeshQuery(counter.query.count())\r\n\r\n  const handleIncre = () => {\r\n    counter.command.incre()\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 400,\r\n        border: '1px solid #eaeaea',\r\n        boxSizing: 'border-box',\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <h2>Counter</h2>\r\n      <input type=\"number\" readOnly value={count} />\r\n      <label>\r\n        <button onClick={handleIncre}>Count </button>{' '}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n","import { Remesh } from 'remesh';\nexport const TemperatureConverter = Remesh.domain({\n    name: 'TemperatureConverter',\n    impl: (domain) => {\n        const CelsiusState = domain.state({\n            name: 'CelsiusState',\n            default: '',\n        });\n        const FahrenheitState = domain.state({\n            name: 'FahrenheitState',\n            default: '',\n        });\n        const resetBoth = domain.command({\n            name: 'resetBoth',\n            impl: () => {\n                return [CelsiusState().new(''), FahrenheitState().new('')];\n            },\n        });\n        const updateCelsius = domain.command({\n            name: 'updateCelsius',\n            impl: ({}, input) => {\n                if (input === '') {\n                    return resetBoth();\n                }\n                const celsius = parseFloat(input);\n                if (Number.isNaN(celsius)) {\n                    return CelsiusState().new(input);\n                }\n                const fahrenheit = celsius * (9 / 5) + 32;\n                return [\n                    CelsiusState().new(input),\n                    FahrenheitState().new(fahrenheit.toString()),\n                ];\n            },\n        });\n        const updateFahrenheit = domain.command({\n            name: 'updateFahrenheit',\n            impl: ({}, input) => {\n                if (input === '') {\n                    return resetBoth();\n                }\n                const fahrenheit = parseFloat(input);\n                if (Number.isNaN(fahrenheit)) {\n                    return FahrenheitState().new(input);\n                }\n                const celsius = (fahrenheit - 32) * (5 / 9);\n                return [\n                    CelsiusState().new(celsius.toString()),\n                    FahrenheitState().new(input),\n                ];\n            },\n        });\n        return {\n            query: {\n                celsius: CelsiusState.query,\n                fahrenheit: FahrenheitState.query,\n            },\n            command: {\n                updateCelsius: updateCelsius,\n                updateFahrenheit: updateFahrenheit,\n            },\n        };\n    },\n});\n//# sourceMappingURL=TemperatureConverter.js.map","import React from 'react'\r\nimport { useRemeshDomain, useRemeshQuery } from 'remesh-react'\r\n\r\nimport { TemperatureConverter } from 'remesh-domains-for-demos/dist/7guis/TemperatureConverter'\r\n\r\nexport const TemperatureConverterApp = () => {\r\n  const temperatureConverter = useRemeshDomain(TemperatureConverter())\r\n  const celsius = useRemeshQuery(temperatureConverter.query.celsius())\r\n  const fahrenheit = useRemeshQuery(temperatureConverter.query.fahrenheit())\r\n\r\n  const handleCelsius = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    temperatureConverter.command.updateCelsius(event.target.value)\r\n  }\r\n\r\n  const handleFahrenheit = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    temperatureConverter.command.updateFahrenheit(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        border: '1px solid #eaeaea',\r\n        boxSizing: 'border-box',\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <h2>Temperature Converter</h2>\r\n      <div>\r\n        <input type=\"text\" value={celsius} onChange={handleCelsius} />\r\n        <label htmlFor=\"\">Celsius</label>=\r\n        <input type=\"text\" value={fahrenheit} onChange={handleFahrenheit} />\r\n        <label htmlFor=\"\">Fahrenheit</label>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Remesh } from 'remesh';\nexport const getDate = (dateInput) => {\n    const list = dateInput.split('.');\n    if (list.length !== 3) {\n        return null;\n    }\n    const date = new Date(`${list[2]}.${list[1]}.${list[0]}`);\n    if (date.toString() === 'Invalid Date') {\n        return null;\n    }\n    return date;\n};\nexport const toDateInput = (date) => {\n    const list = date.toLocaleDateString().split('/');\n    return `${list[2]}.${list[1]}.${list[0]}`;\n};\nexport const compareDate = (date1, date2) => {\n    if (date1.getFullYear() !== date2.getFullYear()) {\n        return date1.getFullYear() - date2.getFullYear();\n    }\n    if (date1.getMonth() !== date2.getMonth()) {\n        return date1.getMonth() - date2.getMonth();\n    }\n    return date1.getDate() - date2.getDate();\n};\nexport const FlightBooker = Remesh.domain({\n    name: 'FlightBooker',\n    impl: (domain) => {\n        const OptionState = domain.state({\n            name: 'OptionState',\n            default: 'one-way',\n        });\n        const StartDateInputState = domain.state({\n            name: 'StartDateInputState',\n            default: toDateInput(new Date()),\n        });\n        const EndDateInputState = domain.state({\n            name: 'EndDateInputState',\n            default: toDateInput(new Date()),\n        });\n        const startDateQuery = domain.query({\n            name: 'StartDateQuery',\n            impl: ({ get }) => {\n                const startDateInput = get(StartDateInputState());\n                return getDate(startDateInput);\n            },\n        });\n        const endDateQuery = domain.query({\n            name: 'EndDateQuery',\n            impl: ({ get }) => {\n                const endDateInput = get(EndDateInputState());\n                return getDate(endDateInput);\n            },\n        });\n        const updateOption = domain.command({\n            name: 'updateOption',\n            impl: ({}, option) => {\n                return OptionState().new(option);\n            },\n        });\n        const updateStartDate = domain.command({\n            name: 'updateStartDate',\n            impl: ({}, dateInput) => {\n                return StartDateInputState().new(dateInput);\n            },\n        });\n        const updateEndDate = domain.command({\n            name: 'updateEndDate',\n            impl: ({}, dateInput) => {\n                return EndDateInputState().new(dateInput);\n            },\n        });\n        const status = domain.query({\n            name: 'StatusQuery',\n            impl: ({ get }) => {\n                const option = get(OptionState());\n                const startDate = get(startDateQuery());\n                const endDate = get(endDateQuery());\n                const startDateStatus = !!startDate ? 'valid' : 'invalid';\n                const endDateStatus = option === 'return' ? (!!endDate ? 'valid' : 'invalid') : 'disabled';\n                const bookButtonStatus = option === 'one-way'\n                    ? !!startDate\n                        ? 'enabled'\n                        : 'disabled'\n                    : !!startDate && !!endDate && compareDate(startDate, endDate) <= 0\n                        ? 'enabled'\n                        : 'disabled';\n                return {\n                    startDate: startDateStatus,\n                    endDate: endDateStatus,\n                    bookButton: bookButtonStatus,\n                };\n            },\n        });\n        return {\n            query: {\n                status: status,\n                option: OptionState.query,\n                startDate: startDateQuery,\n                endDate: endDateQuery,\n                startDateInput: StartDateInputState.query,\n                endDateInput: EndDateInputState.query,\n            },\n            command: {\n                updateOption: updateOption,\n                updateStartDate: updateStartDate,\n                updateEndDate: updateEndDate,\n            },\n        };\n    },\n});\n//# sourceMappingURL=FlightBooker.js.map","import React from 'react'\r\nimport { useRemeshDomain, useRemeshQuery } from 'remesh-react'\r\n\r\nimport { FlightBooker, FlightBookerOption } from 'remesh-domains-for-demos/dist/7guis/FlightBooker'\r\n\r\nexport const FlightBookerApp = () => {\r\n  const flightBooker = useRemeshDomain(FlightBooker())\r\n  const option = useRemeshQuery(flightBooker.query.option())\r\n  const status = useRemeshQuery(flightBooker.query.status())\r\n\r\n  const startDateInput = useRemeshQuery(flightBooker.query.startDateInput())\r\n  const endDateInput = useRemeshQuery(flightBooker.query.endDateInput())\r\n\r\n  const handleOptionChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    flightBooker.command.updateOption(event.target.value as FlightBookerOption)\r\n  }\r\n\r\n  const handleStartDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    flightBooker.command.updateStartDate(event.target.value)\r\n  }\r\n\r\n  const handleEndDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    flightBooker.command.updateEndDate(event.target.value)\r\n  }\r\n\r\n  const handleBookButtonClick = () => {\r\n    if (status.bookButton === 'enabled') {\r\n      if (option === 'one-way') {\r\n        alert(`You have booked a one-way flight on ${startDateInput}`)\r\n      } else {\r\n        alert(`You have booked return flight from ${startDateInput} to ${endDateInput}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 400,\r\n        border: '1px solid #eaeaea',\r\n        boxSizing: 'border-box',\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <h2>Flight Booker</h2>\r\n      <div>\r\n        <select value={option} onChange={handleOptionChange}>\r\n          <option value=\"one-way\">One-way flight</option>\r\n          <option value=\"return\">Return flight</option>\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          style={{\r\n            backgroundColor: status.startDate === 'invalid' ? 'red' : '',\r\n          }}\r\n          value={startDateInput}\r\n          onChange={handleStartDateChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          style={{\r\n            backgroundColor: status.endDate === 'invalid' ? 'red' : '',\r\n          }}\r\n          disabled={status.endDate === 'disabled'}\r\n          value={endDateInput}\r\n          onChange={handleEndDateChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button disabled={status.bookButton === 'disabled'} onClick={handleBookButtonClick}>\r\n          Book\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { merge, animationFrames, of, NEVER } from 'rxjs';\nimport { distinctUntilChanged, map, mapTo, pairwise, switchMap, takeUntil } from 'rxjs/operators';\nimport { Remesh } from 'remesh';\nexport const Timer = Remesh.domain({\n    name: 'timer',\n    inspectable: false,\n    impl: (domain) => {\n        const DurationState = domain.state({\n            name: 'duration',\n            default: 15000,\n        });\n        const ElapsedState = domain.state({\n            name: 'elapsed',\n            default: 0,\n        });\n        const StartEvent = domain.event({\n            name: 'StartEvent',\n        });\n        const StopEvent = domain.event({\n            name: 'StopEvent',\n        });\n        const updateElapsed = domain.command({\n            name: 'updateElapsed',\n            impl: ({ get }, increment) => {\n                const duration = get(DurationState());\n                const elapsed = get(ElapsedState());\n                if (elapsed > duration) {\n                    return StopEvent();\n                }\n                return ElapsedState().new(elapsed + increment);\n            },\n        });\n        const updateDuration = domain.command({\n            name: 'updateDuration',\n            impl: ({ get }, newDuration) => {\n                const elapsed = get(ElapsedState());\n                if (newDuration > elapsed) {\n                    return [DurationState().new(newDuration), StartEvent()];\n                }\n                return DurationState().new(newDuration);\n            },\n        });\n        const resetElapsed = domain.command({\n            name: 'resetElapsed',\n            impl: ({}) => {\n                return [ElapsedState().new(0), StartEvent()];\n            },\n        });\n        domain.command$({\n            name: 'updateElapsed$',\n            impl: ({ fromEvent }) => {\n                const event$ = merge(fromEvent(StartEvent).pipe(mapTo(1)), fromEvent(StopEvent).pipe(mapTo(0))).pipe(distinctUntilChanged());\n                const main$ = event$.pipe(switchMap((signal) => {\n                    if (signal === 0) {\n                        return NEVER;\n                    }\n                    return animationFrames().pipe(pairwise(), map(([a, b]) => b.elapsed - a.elapsed), map((increment) => updateElapsed(increment)), takeUntil(fromEvent(StopEvent)));\n                }));\n                return merge(main$, of(StartEvent()));\n            },\n        });\n        return {\n            query: {\n                duration: DurationState.query,\n                elapsed: ElapsedState.query,\n            },\n            command: {\n                resetElapsed,\n                updateDuration,\n            },\n        };\n    },\n});\n//# sourceMappingURL=Timer.js.map","import React from 'react'\r\nimport { useRemeshDomain, useRemeshQuery } from 'remesh-react'\r\n\r\nimport { Timer } from 'remesh-domains-for-demos/dist/7guis/Timer'\r\n\r\nexport const TimerApp = () => {\r\n  const timer = useRemeshDomain(Timer())\r\n  const elapsed = useRemeshQuery(timer.query.elapsed())\r\n  const duration = useRemeshQuery(timer.query.duration())\r\n\r\n  const handleDurationChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const duration = parseInt(event.target.value, 10)\r\n    if (!isNaN(duration)) {\r\n      timer.command.updateDuration(duration)\r\n    }\r\n  }\r\n\r\n  const handleResetElapsed = () => {\r\n    timer.command.resetElapsed()\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 400,\r\n        border: '1px solid #eaeaea',\r\n        boxSizing: 'border-box',\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <h2>Timer</h2>\r\n      <div style={{ display: 'flex' }}>\r\n        <label style={{ marginRight: 10, whiteSpace: 'nowrap' }}>Elapsed Timer:</label>\r\n        <div style={{ width: '100%' }}>\r\n          <span\r\n            style={{\r\n              display: 'inline-block',\r\n              height: 10,\r\n              background: 'green',\r\n              width: `${Math.min(elapsed / duration, 1) * 100}%`,\r\n              verticalAlign: 'middle',\r\n              borderRadius: 5,\r\n            }}\r\n          ></span>\r\n        </div>\r\n      </div>\r\n      <div>{elapsed > duration ? (duration / 1000).toFixed(1) : (elapsed / 1000).toFixed(1)}s</div>\r\n      <div style={{ display: 'flex' }}>\r\n        <label style={{ width: 100, marginRight: 10 }}>Duration:</label>\r\n        <input\r\n          style={{ width: '100%' }}\r\n          type=\"range\"\r\n          min={0}\r\n          max={30000}\r\n          value={duration}\r\n          onChange={handleDurationChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button style={{ width: '100% ' }} onClick={handleResetElapsed}>\r\n          Reset Timer\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Remesh } from 'remesh';\nimport { ListModule } from 'remesh/modules/list';\nexport const CRUD = Remesh.domain({\n    name: 'CRUD',\n    impl: (domain) => {\n        let nameUid = 0;\n        const nameListDomain = ListModule(domain, {\n            name: 'Name',\n            key: (item) => item.id,\n        });\n        const FilterPrefixState = domain.state({\n            name: 'FilterPrefix',\n            default: '',\n        });\n        const updateFilterPrefix = domain.command({\n            name: 'updateFilterPrefix',\n            impl: ({}, prefix) => {\n                return FilterPrefixState().new(prefix);\n            },\n        });\n        const CreatedState = domain.state({\n            name: 'Created',\n            default: {\n                name: '',\n                surname: '',\n            },\n        });\n        const updateCreated = domain.command({\n            name: 'UpdateCreated',\n            impl: ({ get }, name) => {\n                const currentName = get(CreatedState());\n                return CreatedState().new({\n                    ...currentName,\n                    ...name,\n                });\n            },\n        });\n        const SelectedState = domain.state({\n            name: 'Selected',\n            default: null,\n        });\n        const selectItem = domain.command({\n            name: 'Select',\n            impl: ({ get }, targetItemId) => {\n                const currentSelected = get(SelectedState());\n                if (targetItemId === null) {\n                    if (currentSelected === null) {\n                        return null;\n                    }\n                    else {\n                        return SelectedState().new(null);\n                    }\n                }\n                if (currentSelected && currentSelected.id === targetItemId) {\n                    return SelectedState().new(null);\n                }\n                const targetItem = get(nameListDomain.query.item(targetItemId));\n                return SelectedState().new(targetItem);\n            },\n        });\n        const updateSelectedName = domain.command({\n            name: 'UpdateSelectedName',\n            impl: ({ get }, name) => {\n                const selected = get(SelectedState());\n                if (selected === null) {\n                    return [];\n                }\n                return SelectedState().new({\n                    ...selected,\n                    ...name,\n                });\n            },\n        });\n        const filteredList = domain.query({\n            name: 'FilteredListQuery',\n            impl: ({ get }) => {\n                const filterPrefix = get(FilterPrefixState());\n                const nameList = get(nameListDomain.query.itemList());\n                if (filterPrefix === '') {\n                    return nameList;\n                }\n                return nameList.filter((item) => item.surname.startsWith(filterPrefix));\n            },\n        });\n        const syncSelected = domain.command({\n            name: 'SyncSelected',\n            impl: ({ get }) => {\n                const selected = get(SelectedState());\n                if (selected === null) {\n                    return [];\n                }\n                return nameListDomain.command.updateItem(selected);\n            },\n        });\n        const createNameItem = domain.command({\n            name: 'CreateNameItem',\n            impl: ({ get }) => {\n                const created = get(CreatedState());\n                const newItem = {\n                    id: `${nameUid++}`,\n                    ...created,\n                };\n                return [nameListDomain.command.addItem(newItem), updateCreated({ name: '', surname: '' })];\n            },\n        });\n        return {\n            query: {\n                ...nameListDomain.query,\n                filteredList: filteredList,\n                selected: SelectedState.query,\n                filterPrefix: FilterPrefixState.query,\n                created: CreatedState.query,\n            },\n            command: {\n                ...nameListDomain.command,\n                updateFilterPrefix: updateFilterPrefix,\n                selectItem: selectItem,\n                updateCreated: updateCreated,\n                updateSelectedName: updateSelectedName,\n                createNameItem: createNameItem,\n                syncSelected: syncSelected,\n            },\n        };\n    },\n});\n//# sourceMappingURL=CRUD.js.map","import { ComponentPropsWithoutRef, useEffect, useRef } from 'react'\r\n\r\nexport const OuterClickWrapper = (props: OuterClickWrapperProps) => {\r\n  const { onOuterClick, ...restProps } = props\r\n  const containerRef = useRef<HTMLDivElement | null>(null)\r\n\r\n  useEffect(() => {\r\n    const handleClick = (event: MouseEvent) => {\r\n      if (!(event.target as Node)?.parentElement) {\r\n        return\r\n      }\r\n\r\n      const isOuterClick = !!(containerRef.current && !containerRef.current.contains(event.target as Node))\r\n\r\n      if (isOuterClick) {\r\n        onOuterClick?.(event)\r\n      }\r\n    }\r\n\r\n    document.addEventListener('click', handleClick, false)\r\n    return () => {\r\n      document.removeEventListener('click', handleClick, false)\r\n    }\r\n  }, [])\r\n\r\n  return <div ref={containerRef} {...restProps}></div>\r\n}\r\ntype OuterClickWrapperProps = ComponentPropsWithoutRef<'div'> & {\r\n  onOuterClick?: (event: MouseEvent) => void\r\n}\r\n","import React from 'react'\r\n\r\nimport { useRemeshDomain, useRemeshQuery } from 'remesh-react'\r\n\r\nimport { CRUD } from 'remesh-domains-for-demos/dist/7guis/CRUD'\r\n\r\nimport { OuterClickWrapper } from './OuterClickWrapper'\r\n\r\nexport const CRUDApp = () => {\r\n  const domain = useRemeshDomain(CRUD())\r\n  const filteredList = useRemeshQuery(domain.query.filteredList())\r\n  const filter = useRemeshQuery(domain.query.filterPrefix())\r\n  const created = useRemeshQuery(domain.query.created())\r\n  const selected = useRemeshQuery(domain.query.selected())\r\n\r\n  const handleFilterChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    domain.command.updateFilterPrefix(e.target.value)\r\n  }\r\n\r\n  const handleSelect = (itemId: string | null) => {\r\n    domain.command.selectItem(itemId)\r\n  }\r\n\r\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (selected) {\r\n      domain.command.updateSelectedName({\r\n        name: e.target.value,\r\n      })\r\n    } else {\r\n      domain.command.updateCreated({ name: e.target.value })\r\n    }\r\n  }\r\n\r\n  const handleSurnameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (selected) {\r\n      domain.command.updateSelectedName({\r\n        surname: e.target.value,\r\n      })\r\n    } else {\r\n      domain.command.updateCreated({ surname: e.target.value })\r\n    }\r\n  }\r\n\r\n  const handleCreate = () => {\r\n    if (selected === null) {\r\n      domain.command.createNameItem()\r\n    }\r\n  }\r\n\r\n  const handleSync = () => {\r\n    if (selected) {\r\n      domain.command.syncSelected()\r\n    }\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    if (selected) {\r\n      domain.command.deleteItem(selected.id)\r\n      domain.command.selectItem(null)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <OuterClickWrapper\r\n      style={{\r\n        width: 400,\r\n        border: '1px solid #eaeaea',\r\n        boxSizing: 'border-box',\r\n        padding: 10,\r\n      }}\r\n      onOuterClick={() => {\r\n        handleSelect(null)\r\n      }}\r\n    >\r\n      <h2>CRUD</h2>\r\n      <div>\r\n        <label htmlFor=\"\">Filter prefix</label>\r\n        <input type=\"text\" value={filter} onChange={handleFilterChange} />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            width: '50%',\r\n            height: 100,\r\n            border: '1px solid #eaeaea',\r\n            overflow: 'scroll',\r\n          }}\r\n        >\r\n          {filteredList.map((item) => {\r\n            const fullName = item.name + ', ' + item.surname\r\n\r\n            return (\r\n              <div\r\n                key={item.id}\r\n                style={{\r\n                  background: selected?.id === item.id ? 'blue' : '',\r\n                  color: selected?.id === item.id ? 'white' : '',\r\n                }}\r\n                onClick={() => {\r\n                  handleSelect(item.id)\r\n                }}\r\n              >\r\n                {fullName}\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n        <div style={{ width: '50%', padding: 10 }}>\r\n          <div>\r\n            <label>Name:</label>\r\n            <input type=\"text\" value={selected ? selected.name : created.name} onChange={handleNameChange} />\r\n          </div>\r\n          <div>\r\n            <label>Surname:</label>\r\n            <input type=\"text\" value={selected ? selected.surname : created.surname} onChange={handleSurnameChange} />\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <button disabled={selected !== null} style={{ marginRight: 10 }} onClick={handleCreate}>\r\n            Create\r\n          </button>\r\n          <button disabled={selected === null} style={{ marginRight: 10 }} onClick={handleSync}>\r\n            Update\r\n          </button>\r\n          <button disabled={selected === null} style={{ marginRight: 10 }} onClick={handleDelete}>\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </OuterClickWrapper>\r\n  )\r\n}\r\n","import { Remesh } from 'remesh';\nexport const CircleDrawer = Remesh.domain({\n    name: 'CircleDrawer',\n    impl: (domain) => {\n        const HistoryState = domain.state({\n            name: 'HistoryState',\n            default: {\n                items: [],\n                currentIndex: -1,\n            },\n        });\n        const recordHistoryState = domain.command({\n            name: 'recordHistoryState',\n            impl: ({ get }, state) => {\n                const history = get(HistoryState());\n                const previousItems = history.items.slice(0, history.currentIndex + 1);\n                /**\n                 * If the current state is the same as the last state,\n                 * then we don't need to record it.\n                 * This is because we are going to replace the last state\n                 * with the current state.\n                 *\n                 * This is a bit of a hack, but it works.\n                 *\n                 * TODO: Find a better way to do this.\n                 */\n                if (state.action === 'adjust-circle') {\n                    const lastState = previousItems[previousItems.length - 1];\n                    if (lastState.action === 'adjust-circle' && lastState.index === state.index) {\n                        previousItems.pop();\n                    }\n                }\n                const newItems = [...previousItems, state];\n                const newIndex = newItems.length - 1;\n                return HistoryState().new({\n                    items: newItems,\n                    currentIndex: newIndex,\n                });\n            },\n        });\n        const DrawState = domain.state({\n            name: 'DrawState',\n            default: {\n                circles: [],\n            },\n        });\n        const undo = domain.command({\n            name: 'undo',\n            impl: ({ get }) => {\n                const history = get(HistoryState());\n                const canUndo = get(canUndoQuery());\n                const newIndex = history.currentIndex - 1;\n                if (!canUndo || newIndex < 0) {\n                    return [\n                        DrawState().new({\n                            circles: [],\n                        }),\n                        HistoryState().new({\n                            items: history.items,\n                            currentIndex: -1,\n                        }),\n                    ];\n                }\n                return [\n                    DrawState().new(history.items[newIndex].state),\n                    HistoryState().new({\n                        items: history.items,\n                        currentIndex: newIndex,\n                    }),\n                ];\n            },\n        });\n        const redo = domain.command({\n            name: 'redo',\n            impl: ({ get }) => {\n                const history = get(HistoryState());\n                const canRedo = get(canRedoQuery());\n                if (!canRedo) {\n                    return [];\n                }\n                const newIndex = history.currentIndex + 1;\n                return [\n                    DrawState().new(history.items[newIndex].state),\n                    HistoryState().new({\n                        items: history.items,\n                        currentIndex: newIndex,\n                    }),\n                ];\n            },\n        });\n        const canUndoQuery = domain.query({\n            name: 'CanUndoQuery',\n            impl: ({ get }) => {\n                const history = get(HistoryState());\n                return history.currentIndex >= 0;\n            },\n        });\n        const canRedoQuery = domain.query({\n            name: 'CanRedoQuery',\n            impl: ({ get }) => {\n                const history = get(HistoryState());\n                return history.currentIndex < history.items.length - 1;\n            },\n        });\n        const SelectedIndexState = domain.state({\n            name: 'SelectedIndexState',\n            default: -1,\n        });\n        const setSelectedIndex = domain.command({\n            name: 'setSelectedIndex',\n            impl: ({}, index) => {\n                return SelectedIndexState().new(index);\n            },\n        });\n        const SelectedCircleInfoQuery = domain.query({\n            name: 'SelectedCircleInfoQuery',\n            impl: ({ get }) => {\n                const index = get(SelectedIndexState());\n                const circles = get(DrawState()).circles;\n                if (index === -1) {\n                    return null;\n                }\n                return {\n                    index,\n                    circle: circles[index],\n                };\n            },\n        });\n        const draw = domain.command({\n            name: 'draw',\n            impl: ({ get }, action) => {\n                const state = get(DrawState());\n                const newState = {\n                    circles: [...state.circles, { position: action.position, diameter: action.diameter }],\n                };\n                return [\n                    DrawState().new(newState),\n                    recordHistoryState({\n                        action: 'add-circle',\n                        state: newState,\n                    }),\n                ];\n            },\n        });\n        const adjust = domain.command({\n            name: 'adjust',\n            impl: ({ get }, action) => {\n                const state = get(DrawState());\n                const circles = state.circles.map((circle, index) => {\n                    if (index === action.index) {\n                        return {\n                            position: circle.position,\n                            diameter: action.diameter,\n                        };\n                    }\n                    return circle;\n                });\n                const newState = {\n                    circles,\n                };\n                return [\n                    DrawState().new(newState),\n                    recordHistoryState({\n                        action: 'adjust-circle',\n                        index: action.index,\n                        state: newState,\n                    }),\n                ];\n            },\n        });\n        const TooltipsState = domain.state({\n            name: 'TooltipsState',\n            default: {\n                type: 'default',\n            },\n        });\n        const updateTooltips = domain.command({\n            name: 'updateTooltips',\n            impl: ({}, newState) => {\n                return TooltipsState().new(newState);\n            },\n        });\n        return {\n            query: {\n                historyState: HistoryState.query,\n                drawState: DrawState.query,\n                tooltipsState: TooltipsState.query,\n                selectedIndex: SelectedIndexState.query,\n                selectedCircleInfo: SelectedCircleInfoQuery,\n                canUndo: canUndoQuery,\n                canRedo: canRedoQuery,\n            },\n            command: {\n                draw,\n                adjust,\n                updateTooltips,\n                undo,\n                redo,\n                setSelectedIndex,\n            },\n        };\n    },\n});\nexport const positionInCircle = (position, circle) => {\n    const { x, y } = position;\n    const { diameter, position: circlePosition } = circle;\n    const { x: circleX, y: circleY } = circlePosition;\n    const radius = diameter / 2;\n    const dx = x - circleX;\n    const dy = y - circleY;\n    return dx * dx + dy * dy < radius * radius;\n};\n//# sourceMappingURL=CircleDrawer.js.map","import React from 'react'\r\n\r\nimport { useRemeshDomain, useRemeshQuery } from 'remesh-react'\r\n\r\nimport { CircleDrawer, positionInCircle, Position } from 'remesh-domains-for-demos/dist/7guis/CircleDrawer'\r\n\r\nimport { OuterClickWrapper } from './OuterClickWrapper'\r\n\r\nexport const CircleDrawerApp = () => {\r\n  const domain = useRemeshDomain(CircleDrawer())\r\n  const drawState = useRemeshQuery(domain.query.drawState())\r\n  const tooltipsState = useRemeshQuery(domain.query.tooltipsState())\r\n  const selectedCircleInfo = useRemeshQuery(domain.query.selectedCircleInfo())\r\n  const canUndo = useRemeshQuery(domain.query.canUndo())\r\n  const canRedo = useRemeshQuery(domain.query.canRedo())\r\n\r\n  const getCircleInfo = (position: Position) => {\r\n    const circle = drawState.circles.find((circle) => {\r\n      return positionInCircle(position, circle)\r\n    })\r\n\r\n    if (!circle) {\r\n      return null\r\n    }\r\n\r\n    const index = drawState.circles.indexOf(circle)\r\n\r\n    return {\r\n      index,\r\n      circle,\r\n    }\r\n  }\r\n\r\n  const handleRightClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    e.preventDefault()\r\n    const position = { x: e.pageX, y: e.pageY }\r\n\r\n    const circleInfo = getCircleInfo(position)\r\n\r\n    if (circleInfo) {\r\n      domain.command.setSelectedIndex(circleInfo.index)\r\n      domain.command.updateTooltips({\r\n        type: 'show-tips',\r\n        index: circleInfo.index,\r\n        circle: circleInfo.circle,\r\n        pageX: e.pageX,\r\n        pageY: e.pageY,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleLeftClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (tooltipsState.type !== 'default') {\r\n      return\r\n    }\r\n\r\n    const position = { x: e.pageX, y: e.pageY }\r\n    const circleInfo = getCircleInfo(position)\r\n\r\n    if (!circleInfo) {\r\n      domain.command.draw({ position, diameter: 30 })\r\n    }\r\n  }\r\n\r\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (tooltipsState.type !== 'default') {\r\n      return\r\n    }\r\n\r\n    const position = { x: e.pageX, y: e.pageY }\r\n    const circleInfo = getCircleInfo(position)\r\n\r\n    if (circleInfo) {\r\n      domain.command.setSelectedIndex(circleInfo.index)\r\n    } else {\r\n      domain.command.setSelectedIndex(-1)\r\n    }\r\n  }\r\n\r\n  const handleOpenSlider = () => {\r\n    if (tooltipsState.type === 'show-tips') {\r\n      domain.command.updateTooltips({\r\n        type: 'open-slider',\r\n        index: tooltipsState.index,\r\n        circle: tooltipsState.circle,\r\n        pageX: tooltipsState.pageX,\r\n        pageY: tooltipsState.pageY,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleCloseSlider = () => {\r\n    console.log('handleCloseSlider')\r\n    domain.command.updateTooltips({\r\n      type: 'default',\r\n    })\r\n  }\r\n\r\n  const handleAdust = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = parseInt(event.target.value, 10)\r\n\r\n    if (selectedCircleInfo && !isNaN(value)) {\r\n      domain.command.adjust({\r\n        index: selectedCircleInfo.index,\r\n        diameter: value,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        border: '1px solid #eaeaea',\r\n        boxSizing: 'border-box',\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <h2>Circle Drawer</h2>\r\n      <div\r\n        style={{\r\n          width: 400,\r\n          textAlign: 'center',\r\n          padding: 10,\r\n        }}\r\n      >\r\n        <button\r\n          onClick={() => domain.command.undo()}\r\n          style={{\r\n            margin: '0 10px',\r\n          }}\r\n          disabled={!canUndo}\r\n        >\r\n          Undo\r\n        </button>\r\n        <button\r\n          onClick={() => domain.command.redo()}\r\n          style={{\r\n            margin: '0 10px',\r\n          }}\r\n          disabled={!canRedo}\r\n        >\r\n          Redo\r\n        </button>\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: 400,\r\n          height: 400,\r\n          border: '1px solid #eaeaea',\r\n          boxSizing: 'border-box',\r\n          overflow: 'hidden',\r\n        }}\r\n        onClick={handleLeftClick}\r\n        onMouseMove={handleMouseMove}\r\n      >\r\n        {drawState.circles.map((circle, index) => {\r\n          return (\r\n            <div\r\n              key={circle.position.x + '-' + circle.position.y + '-' + circle.diameter}\r\n              style={{\r\n                position: 'absolute',\r\n                left: circle.position.x - circle.diameter / 2,\r\n                top: circle.position.y - circle.diameter / 2,\r\n                width: circle.diameter,\r\n                height: circle.diameter,\r\n                borderRadius: circle.diameter / 2,\r\n                border: '1px solid #666',\r\n                backgroundColor: selectedCircleInfo?.index === index ? '#eaeaea' : '',\r\n              }}\r\n              onContextMenu={handleRightClick}\r\n            ></div>\r\n          )\r\n        })}\r\n      </div>\r\n      {tooltipsState.type === 'show-tips' && (\r\n        <OuterClickWrapper\r\n          key=\"show-tips\"\r\n          style={{\r\n            position: 'absolute',\r\n            left: tooltipsState.pageX,\r\n            top: tooltipsState.pageY,\r\n            zIndex: 100,\r\n            background: '#fff',\r\n            border: '1px solid #666',\r\n            padding: 10,\r\n          }}\r\n          onOuterClick={handleCloseSlider}\r\n          onClick={handleOpenSlider}\r\n        >\r\n          Adjust Diameter\r\n        </OuterClickWrapper>\r\n      )}\r\n      {tooltipsState.type === 'open-slider' && (\r\n        <OuterClickWrapper\r\n          key=\"open-slider\"\r\n          style={{\r\n            position: 'absolute',\r\n            left: tooltipsState.pageX,\r\n            top: tooltipsState.pageY,\r\n            background: '#fff',\r\n            border: '1px solid #666',\r\n            zIndex: 100,\r\n            padding: 10,\r\n          }}\r\n          onOuterClick={handleCloseSlider}\r\n        >\r\n          <p>Adjust Diameter</p>\r\n          <div>\r\n            <input\r\n              type=\"range\"\r\n              value={selectedCircleInfo?.circle.diameter ?? ''}\r\n              min={1}\r\n              max={150}\r\n              onChange={handleAdust}\r\n            />\r\n          </div>\r\n        </OuterClickWrapper>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { Remesh } from 'remesh';\nexport const Cells = Remesh.domain({\n    name: 'Cells',\n    inspectable: false,\n    impl: (domain) => {\n        const RowKeyListState = domain.state({\n            name: 'RowKeyListState',\n            default: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(String),\n        });\n        const ColumnKeyListState = domain.state({\n            name: 'ColumnKeyListState',\n            default: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'],\n        });\n        const CellState = domain.state({\n            name: 'CellState',\n            impl: (_) => {\n                return {\n                    content: {\n                        type: 'text',\n                        text: '',\n                    },\n                    isEditing: false,\n                };\n            },\n        });\n        const cell = domain.query({\n            name: 'CellQuery',\n            impl: ({ get }, key) => {\n                const state = get(CellState(key));\n                if (state.content.type === 'text') {\n                    return {\n                        type: 'text',\n                        isEditing: state.isEditing,\n                        content: state.content.text,\n                        displayContent: state.content.text,\n                    };\n                }\n                if (state.content.type === 'formula') {\n                    const evaluate = compile(state.content.formula);\n                    const getCellValue = (cellKey) => {\n                        return Number(get(cell(cellKey)).displayContent);\n                    };\n                    return {\n                        type: 'formula',\n                        isEditing: state.isEditing,\n                        content: state.content.formula,\n                        displayContent: evaluate(getCellValue),\n                    };\n                }\n                throw new Error('Unknown cell type');\n            },\n        });\n        const selectCell = domain.command({\n            name: 'selectCell',\n            impl: ({ get }, key) => {\n                const state = get(CellState(key));\n                return CellState(key).new({\n                    content: state.content,\n                    isEditing: true,\n                });\n            },\n        });\n        const unselectCell = domain.command({\n            name: 'unselectCell',\n            impl: ({ get }, key) => {\n                const state = get(CellState(key));\n                return CellState(key).new({\n                    content: state.content,\n                    isEditing: false,\n                });\n            },\n        });\n        const setCellContent = domain.command({\n            name: 'setCellContent',\n            impl: ({ get }, { key, input }) => {\n                const state = get(CellState(key));\n                if (input.startsWith('=')) {\n                    return CellState(key).new({\n                        content: {\n                            type: 'formula',\n                            formula: input,\n                        },\n                        isEditing: state.isEditing,\n                    });\n                }\n                return CellState(key).new({\n                    content: {\n                        type: 'text',\n                        text: input,\n                    },\n                    isEditing: state.isEditing,\n                });\n            },\n        });\n        return {\n            query: {\n                cell: cell,\n                columnKeyList: ColumnKeyListState.query,\n                rowKeyList: RowKeyListState.query,\n            },\n            command: {\n                selectCell,\n                unselectCell,\n                setCellContent,\n            },\n        };\n    },\n});\nconst compile = (formula) => {\n    return (get) => {\n        try {\n            const expression = formula.slice(1).replace(/\\w\\d+/g, (matched) => {\n                return `get('${matched}')`;\n            });\n            const fn = new Function('get', `return (${expression}).toString()`);\n            return fn(get);\n        }\n        catch {\n            return '-';\n        }\n    };\n};\n//# sourceMappingURL=Cells.js.map","import React from 'react'\r\nimport { useRemeshDomain, useRemeshQuery } from 'remesh-react'\r\n\r\nimport { Cells } from 'remesh-domains-for-demos/dist/7guis/Cells'\r\n\r\nexport const CellsApp = () => {\r\n  const cells = useRemeshDomain(Cells())\r\n  const columnKeyList = useRemeshQuery(cells.query.columnKeyList())\r\n  const rowKeyList = useRemeshQuery(cells.query.rowKeyList())\r\n\r\n  return (\r\n    <div>\r\n      <h2>Cells</h2>\r\n      <table\r\n        style={{\r\n          borderCollapse: 'collapse',\r\n          border: '1px solid #bbb',\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        <thead>\r\n          <tr\r\n            style={{\r\n              backgroundColor: '#f6f6f6',\r\n            }}\r\n          >\r\n            <th style={{ width: 30, display: 'block' }}></th>\r\n            {columnKeyList.map((key) => (\r\n              <th\r\n                key={key}\r\n                style={{\r\n                  maxWidth: 80,\r\n                  border: '1px solid #bbb',\r\n                }}\r\n              >\r\n                {key}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {rowKeyList.map((rowKey) => {\r\n            return (\r\n              <tr key={rowKey}>\r\n                <RowView rowKey={rowKey} columnKeyList={columnKeyList} />\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\ntype RowViewProps = {\r\n  rowKey: string\r\n  columnKeyList: string[]\r\n}\r\n\r\nconst RowView = ({ columnKeyList, rowKey }: RowViewProps) => {\r\n  const cells = useRemeshDomain(Cells())\r\n\r\n  return (\r\n    <>\r\n      <td\r\n        style={{\r\n          width: 30,\r\n          border: '1px solid #bbb',\r\n          backgroundColor: '#f6f6f6',\r\n        }}\r\n      >\r\n        {rowKey}\r\n      </td>\r\n      {columnKeyList.map((columnKey) => {\r\n        const cellKey = `${columnKey}${rowKey}`\r\n        return (\r\n          <td\r\n            key={cellKey}\r\n            style={{\r\n              maxWidth: 80,\r\n              minWidth: 80,\r\n              border: '1px solid #bbb',\r\n              overflow: 'hidden',\r\n            }}\r\n            onClick={(event) => {\r\n              if (event.target instanceof HTMLInputElement) {\r\n                return\r\n              }\r\n              cells.command.selectCell(cellKey)\r\n            }}\r\n          >\r\n            <CellView cellKey={cellKey} />\r\n          </td>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nconst CellView = ({ cellKey }: { cellKey: string }) => {\r\n  const cells = useRemeshDomain(Cells())\r\n  const cell = useRemeshQuery(cells.query.cell(cellKey))\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    cells.command.setCellContent({ key: cellKey, input: e.target.value })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {cell.isEditing && (\r\n        <input\r\n          style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundColor: 'transparent',\r\n            boxSizing: 'border-box',\r\n            textAlign: 'center',\r\n          }}\r\n          value={cell.content}\r\n          onChange={handleChange}\r\n          onBlur={() => {\r\n            if (cell.isEditing) {\r\n              cells.command.unselectCell(cellKey)\r\n            }\r\n          }}\r\n          autoFocus\r\n        />\r\n      )}\r\n\r\n      {!cell.isEditing && cell.displayContent}\r\n    </>\r\n  )\r\n}","import React, { StrictMode } from 'react'\r\nimport * as ReactDOMClient from 'react-dom/client'\r\n\r\nimport { Remesh } from 'remesh'\r\n\r\nimport { RemeshRoot } from 'remesh-react'\r\n\r\nimport { RemeshReduxDevtools } from 'remesh-redux-devtools'\r\nimport { RemeshLogger } from 'remesh-logger'\r\n\r\nimport { CounterApp } from './Counter'\r\nimport { TemperatureConverterApp } from './TemperatureConverter'\r\nimport { FlightBookerApp } from './FlightBooker'\r\nimport { TimerApp } from './Timer'\r\nimport { CRUDApp } from './CRUD'\r\nimport { CircleDrawerApp } from './CircleDrawer'\r\nimport { CellsApp } from './Cells'\r\n\r\nconst Root = () => {\r\n  return (\r\n    <div>\r\n      <h1>7GUIs in React/Remesh/TypeScript</h1>\r\n      <p>This is a live version of an implementation (source) of 7GUIs with React, TypeScript and Remesh.</p>\r\n      <hr />\r\n      <CounterApp />\r\n      <hr />\r\n      <TemperatureConverterApp />\r\n      <hr />\r\n      <FlightBookerApp />\r\n      <hr />\r\n      <TimerApp />\r\n      <hr />\r\n      <CRUDApp />\r\n      <hr />\r\n      <CircleDrawerApp />\r\n      <hr />\r\n      <CellsApp />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst container = document.getElementById('root')\r\n\r\nif (container) {\r\n  const root = ReactDOMClient.createRoot(container)\r\n  const store = Remesh.store({\r\n    inspectors: [RemeshReduxDevtools(), RemeshLogger()],\r\n  })\r\n\r\n  root.render(\r\n    <StrictMode>\r\n      <RemeshRoot store={store}>\r\n        <Root />\r\n      </RemeshRoot>\r\n    </StrictMode>,\r\n  )\r\n}\r\n"],"names":["CounterApp","counter","useRemeshDomain","Counter","count","useRemeshQuery","query","width","border","boxSizing","padding","_jsx","_jsxs","command","incre","TemperatureConverterApp","temperatureConverter","TemperatureConverter","celsius","fahrenheit","event","updateCelsius","target","value","handleCelsius","updateFahrenheit","handleFahrenheit","FlightBookerApp","flightBooker","FlightBooker","option","status","startDateInput","endDateInput","handleOptionChange","updateOption","handleStartDateChange","updateStartDate","handleEndDateChange","updateEndDate","handleBookButtonClick","bookButton","alert","backgroundColor","startDate","endDate","TimerApp","timer","Timer","elapsed","duration","handleDurationChange","parseInt","isNaN","updateDuration","handleResetElapsed","resetElapsed","display","marginRight","whiteSpace","height","background","Math","min","verticalAlign","borderRadius","toFixed","OuterClickWrapper","props","onOuterClick","restProps","containerRef","useRef","useEffect","handleClick","parentElement","isOuterClick","current","contains","addEventListener","removeEventListener","CRUDApp","domain","CRUD","filteredList","filter","filterPrefix","created","selected","handleFilterChange","e","updateFilterPrefix","handleSelect","itemId","selectItem","handleNameChange","updateSelectedName","name","updateCreated","handleSurnameChange","surname","handleCreate","createNameItem","handleSync","syncSelected","handleDelete","deleteItem","id","overflow","map","item","fullName","color","CircleDrawerApp","CircleDrawer","drawState","tooltipsState","selectedCircleInfo","canUndo","canRedo","getCircleInfo","position","circle","circles","find","positionInCircle","index","indexOf","handleRightClick","preventDefault","x","pageX","y","pageY","circleInfo","setSelectedIndex","updateTooltips","type","handleLeftClick","draw","diameter","handleMouseMove","handleOpenSlider","handleCloseSlider","console","log","handleAdust","adjust","textAlign","undo","margin","redo","left","top","zIndex","CellsApp","cells","Cells","columnKeyList","rowKeyList","borderCollapse","key","maxWidth","rowKey","RowView","_Fragment","columnKey","cellKey","minWidth","HTMLInputElement","selectCell","CellView","cell","handleChange","setCellContent","input","isEditing","content","unselectCell","displayContent","Root","container","document","getElementById","root","ReactDOMClient","store","Remesh","inspectors","RemeshReduxDevtools","RemeshLogger","render","StrictMode"],"mappings":"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"}