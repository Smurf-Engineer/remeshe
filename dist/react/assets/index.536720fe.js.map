{"version":3,"file":"index.536720fe.js","sources":["../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/filter.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/ignoreElements.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/mapTo.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/delayWhen.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/delay.js","../../../projects/react-demos/src/chess/context/game.ts","../../../projects/react-demos/src/chess/components/Board.tsx","../../../projects/domains/src/chess/index.ts","../../../projects/react-demos/src/chess/components/Chess.tsx","../../../projects/react-demos/src/chess/components/Marker.tsx","../../../projects/react-demos/src/chess/ChessGame.tsx","../../../projects/react-demos/src/chess/index.tsx"],"sourcesContent":["import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function filter(predicate, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return predicate.call(thisArg, value, index++) && subscriber.next(value); }));\n    });\n}\n//# sourceMappingURL=filter.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nexport function ignoreElements() {\n    return operate(function (source, subscriber) {\n        source.subscribe(createOperatorSubscriber(subscriber, noop));\n    });\n}\n//# sourceMappingURL=ignoreElements.js.map","import { map } from './map';\nexport function mapTo(value) {\n    return map(function () { return value; });\n}\n//# sourceMappingURL=mapTo.js.map","import { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return function (source) {\n            return concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n        };\n    }\n    return mergeMap(function (value, index) { return delayDurationSelector(value, index).pipe(take(1), mapTo(value)); });\n}\n//# sourceMappingURL=delayWhen.js.map","import { asyncScheduler } from '../scheduler/async';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\nexport function delay(due, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    var duration = timer(due, scheduler);\n    return delayWhen(function () { return duration; });\n}\n//# sourceMappingURL=delay.js.map","import React from 'react'\n\ntype GameConfigContextValue = {\n  left: number\n  top: number\n  gridSize: number\n  chessSize: number\n}\n\nexport const GameConfigContext = React.createContext<GameConfigContextValue>({\n  left: 0,\n  top: 0,\n  gridSize: 60,\n  chessSize: 40,\n})\n","import React, { useContext } from 'react'\nimport { GameConfigContext } from '../context/game'\n\n// 棋盘画线辅助计算\nconst createPathArr = (config: { left: number; top: number; gridSize: number }) => {\n  const { left: baseLeft, top: baseTop, gridSize } = config\n\n  const left = baseLeft + gridSize / 2\n  const top = baseTop + gridSize / 2\n\n  // 生成线的路径\n  const line = (x1: number, y1: number, x2: number, y2: number) => {\n    return `M${left + x1 * gridSize},${top + y1 * gridSize} L${left + x2 * gridSize},${top + y2 * gridSize}`\n  }\n\n  // 生成十字花\n  const star = (x: number, y: number) => {\n    const arr = []\n    const distance = 1 / 10\n    const length = 1 / 4\n\n    let startX, startY, endX, endY\n\n    // 左边画一半\n    if (x != 0) {\n      startX = x - distance\n      startY = y - distance - length\n      endX = x - distance - length\n      endY = y - distance\n\n      arr.push(line(startX, startY, startX, endY))\n      arr.push(line(startX, endY, endX, endY))\n\n      startY = y + distance + length\n      endY = y + distance\n\n      arr.push(line(startX, startY, startX, endY))\n      arr.push(line(startX, endY, endX, endY))\n    }\n\n    // 右边画一半\n    if (x != 8) {\n      startX = x + distance\n      startY = y - distance - length\n      endX = x + distance + length\n      endY = y - distance\n\n      arr.push(line(startX, startY, startX, endY))\n      arr.push(line(startX, endY, endX, endY))\n\n      startY = y + distance + length\n      endY = y + distance\n\n      arr.push(line(startX, startY, startX, endY))\n      arr.push(line(startX, endY, endX, endY))\n    }\n\n    return arr\n  }\n\n  const arr: string[] = [\n    // 炮位\n    [1, 2],\n    [7, 2],\n    [1, 7],\n    [7, 7],\n    // 兵位\n    [0, 3],\n    [2, 3],\n    [4, 3],\n    [6, 3],\n    [8, 3],\n    [0, 6],\n    [2, 6],\n    [4, 6],\n    [6, 6],\n    [8, 6],\n  ]\n    .map(([x, y]) => star(x, y))\n    .reduce((acc, cur) => acc.concat(cur), [])\n    // 横线\n    .concat(new Array(8).fill(0).map((_, i) => line(0, i + 1, 8, i + 1)))\n    // 竖线，被楚河汉界分成两段\n    .concat(new Array(7).fill(0).map((_, i) => line(i + 1, 0, i + 1, 4)))\n    .concat(new Array(7).fill(0).map((_, i) => line(i + 1, 5, i + 1, 9)))\n    // 九宫格的线\n    .concat([line(3, 0, 5, 2), line(5, 0, 3, 2), line(3, 7, 5, 9), line(3, 9, 5, 7)])\n\n  return arr\n}\n\nexport const BoardRender = () => {\n  const config = useContext(GameConfigContext)\n\n  const { left: baseLeft, top: baseTop, gridSize, chessSize } = config\n\n  const left = baseLeft + gridSize / 2\n  const top = baseTop + gridSize / 2\n  const width = gridSize * 8\n  const height = gridSize * 9\n\n  const pathArr = createPathArr(config)\n\n  const svgStyle: React.SVGAttributes<SVGSVGElement>['style'] = {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: width + chessSize,\n    height: height + chessSize,\n  }\n\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style={svgStyle}>\n      <g>\n        <rect x={left} y={top} width={width} height={height} fill=\"none\" stroke=\"#000000\" strokeWidth=\"3\"></rect>\n        {pathArr.map((path, i) => (\n          <path key={i} fill=\"none\" stroke=\"#000000\" d={path}></path>\n        ))}\n      </g>\n    </svg>\n  )\n}\n","import { Remesh } from 'remesh'\nimport { delay, filter, map } from 'rxjs/operators'\n\nexport enum ChessValue {\n  General = 100,\n  Chariot = 50,\n  Cannon = 30,\n  Horse = 29,\n  Elephant = 16,\n  Guard = 10,\n  Soldier = 1,\n}\n\nexport enum ChessColor {\n  Red = 1,\n  Black = -1,\n}\n\nexport type Position = {\n  x: number\n  y: number\n}\n\nexport type Chess = {\n  color: ChessColor // 棋子什么颜色\n  value: ChessValue // 是哪种棋子\n  selected?: boolean // 是否被选中\n  marked?: boolean // 是否被标记为可攻击\n  position: Position // 当前位置\n}\n\nexport type Marker = Position\n\nexport type Game = {\n  currentPlayer: ChessColor\n  selectedChess?: Chess\n  situation: Chess[]\n  markers: Marker[]\n}\n\nexport type GameStatus = 'red-win' | 'black-win' | 'playing'\n\n/**\n * 帮助函数\n */\n/**\n * 判断两个位置是否相同\n * @param pos1 第一个位置\n * @param pos2 第二个位置\n * @returns boolean，是否相同\n */\nconst isSamePosition = (pos1: Position, pos2: Position) => {\n  return pos1.x === pos2.x && pos1.y === pos2.y\n}\n\n/**\n * 将的位置是否合法\n * @param color 颜色\n * @param position 位置\n */\nconst isGeneralValid = (color: ChessColor, { x, y }: Position) => {\n  switch (color) {\n    case ChessColor.Black:\n      return !(x < 3 || x > 5 || (y > 2 && y < 7))\n    case ChessColor.Red:\n      return !(x < 3 || x > 5 || (y > 2 && y < 7))\n  }\n}\n\n/**\n * 士的位置是否合法\n * @param color 颜色\n * @param position 位置\n */\nconst isGuardValid = (color: ChessColor, { x, y }: Position) => {\n  switch (color) {\n    case ChessColor.Black:\n      return [\n        [3, 0],\n        [3, 2],\n        [5, 0],\n        [5, 2],\n        [4, 1],\n      ].find(([x1, y1]) => x1 === x && y1 === y)\n    case ChessColor.Red:\n      return [\n        [3, 7],\n        [3, 9],\n        [5, 7],\n        [5, 9],\n        [4, 8],\n      ].find(([x1, y1]) => x1 === x && y1 === y)\n  }\n}\n\n/**\n * 象的位置是否合法\n * @param color 颜色\n * @param position 位置\n */\nconst isElephantValid = (color: ChessColor, { x, y }: Position) => {\n  switch (color) {\n    case ChessColor.Black:\n      return [\n        [0, 2],\n        [2, 0],\n        [2, 4],\n        [4, 2],\n        [6, 0],\n        [6, 4],\n        [8, 2],\n      ].find(([x1, y1]) => x1 === x && y1 === y)\n    case ChessColor.Red:\n      return [\n        [0, 7],\n        [2, 5],\n        [2, 9],\n        [4, 7],\n        [6, 5],\n        [6, 9],\n        [8, 7],\n      ].find(([x1, y1]) => x1 === x && y1 === y)\n  }\n}\n\n/**\n * 兵的位置是否合法\n * @param color 颜色\n * @param position 位置\n */\nconst isSoldierValid = (color: ChessColor, { x, y }: Position) => {\n  switch (color) {\n    case ChessColor.Black:\n      return !(y < 3 || (y < 5 && x % 2 === 1))\n    case ChessColor.Red:\n      return !(y > 6 || (y > 4 && x % 2 === 1))\n  }\n}\n\nconst canCannonAttack =\n  (game: Game) =>\n  ({ position: source }: Chess, { x, y }: Position) => {\n    // 不在一条直线上，不能走\n    if (source.x !== x && source.y !== y) {\n      return false\n    }\n\n    // 先检测目标位置有无棋子\n    if (game.situation.find((chess) => chess.position.x === x && chess.position.y === y)) {\n      // 目标位置非空，吃子的逻辑，检测中间时候有且仅有一个棋子\n      // 同一水平线\n      if (source.y === y) {\n        return (\n          game.situation.filter(\n            (chess) => chess.position.y === y && (chess.position.x - x) * (chess.position.x - source.x) < 0,\n          ).length === 1\n        )\n      }\n\n      // 同一竖直线\n      if (source.x === x) {\n        return (\n          game.situation.filter(\n            (chess) => chess.position.x === x && (chess.position.y - y) * (chess.position.y - source.y) < 0,\n          ).length === 1\n        )\n      }\n    }\n\n    return false\n  }\n\n// 将可以去哪里吗\nconst canGeneralMove =\n  () =>\n  ({ position: source }: Chess, { x, y }: Position) => {\n    return Math.abs(source.y - y) + Math.abs(source.x - x) === 1\n  }\n\n// 士可以去哪里吗\nconst canGuardMove =\n  () =>\n  ({ position: source }: Chess, { x, y }: Position) => {\n    const square = (a: number) => a * a\n\n    return square(source.x - x) + square(source.y - y) === 2\n  }\n\n// 象可以去哪里吗\nconst canElephantMove =\n  (game: Game) =>\n  ({ position: source }: Chess, { x, y }: Position) => {\n    if (Math.abs(source.x - x) !== 2 || Math.abs(source.y - y) !== 2) {\n      return false\n    } else {\n      // 象眼位置没有棋子\n      return !game.situation.find(\n        (chess) => chess.position.x === (source.x + x) / 2 && chess.position.y === (source.y + y) / 2,\n      )\n    }\n  }\n\n// 马可以去哪里吗\nconst canHorseMove =\n  (game: Game) =>\n  ({ position: source }: Chess, { x, y }: Position) => {\n    const dx = source.x - x\n    const dy = source.y - y\n\n    // 马走日，并且马腿的位置没有棋子\n    return (\n      dx * dx + dy * dy === 5 &&\n      !game.situation.find(\n        (chess) =>\n          chess.position.x === Math.round((2 * source.x + x) / 3) &&\n          chess.position.y === Math.round((2 * source.y + y) / 3),\n      )\n    )\n  }\n\n// 能走直线吗\nconst canMoveStraightly =\n  (game: Game) =>\n  ({ position: source }: Chess, { x, y }: Position) => {\n    // 不在一条直线上，不能走\n    if (source.x !== x && source.y !== y) {\n      return false\n    }\n\n    // 同一条水平线，中间无棋子\n    if (source.y === y) {\n      return !game.situation.find(\n        (chess) => chess.position.y === y && (chess.position.x - x) * (chess.position.x - source.x) < 0,\n      )\n    }\n\n    // 同一竖直线，中间无棋子\n    if (source.x === x) {\n      return !game.situation.find(\n        (chess) => chess.position.x === x && (chess.position.y - y) * (chess.position.y - source.y) < 0,\n      )\n    }\n\n    return false\n  }\n\n// 兵可以去哪里吗\nconst canSoldierMove =\n  () =>\n  ({ position: source, color }: Chess, { x, y }: Position) => {\n    switch (color) {\n      case ChessColor.Black:\n        return y >= source.y && Math.abs(x - source.x) + Math.abs(y - source.y) === 1\n      case ChessColor.Red:\n        return y <= source.y && Math.abs(x - source.x) + Math.abs(y - source.y) === 1\n    }\n  }\n\n/**\n * 判断在当前棋局下，某个棋子能否移动到目的位置，有些棋子的移动需要结合棋盘状态，此处不检测目标位置是否有棋子\n * @param game 棋盘状态\n */\nconst canMove = (game: Game) => (chess: Chess, position: Position) => {\n  const { color, value } = chess\n  switch (value) {\n    case ChessValue.General:\n      return isGeneralValid(color, position) && canGeneralMove()(chess, position)\n    case ChessValue.Guard:\n      return isGuardValid(color, position) && canGuardMove()(chess, position)\n    case ChessValue.Elephant:\n      return isElephantValid(color, position) && canElephantMove(game)(chess, position)\n    case ChessValue.Horse:\n      return canHorseMove(game)(chess, position)\n    case ChessValue.Chariot:\n      return canMoveStraightly(game)(chess, position)\n    case ChessValue.Cannon:\n      return canMoveStraightly(game)(chess, position)\n    case ChessValue.Soldier:\n      return isSoldierValid(color, position) && canSoldierMove()(chess, position)\n  }\n}\n\n/**\n * 判断在当前棋局下，某个棋子能否攻击目标位置\n * @param game 棋盘状态\n */\nconst canAttack = (game: Game) => (chess: Chess, dest: Chess) => {\n  if (chess.color === dest.color) {\n    // 不能吃自己的棋子\n    return false\n  }\n\n  if (chess.value === ChessValue.Cannon) {\n    return canCannonAttack(game)(chess, dest.position)\n  } else {\n    return (\n      game.situation.find((chess) => isSamePosition(chess.position, dest.position)) &&\n      canMove(game)(chess, dest.position)\n    )\n  }\n}\n\n// 标记某个棋子为选中\nconst select = (chess: Chess) => {\n  return {\n    ...chess,\n    selected: true,\n  }\n}\n\n// 取消某个棋子的选中状态\nconst unselect = (chess: Chess) => {\n  return {\n    ...chess,\n    selected: false,\n  }\n}\n\n// 标记为可被攻击\nconst mark = (chess: Chess) => {\n  return {\n    ...chess,\n    marked: true,\n  }\n}\n\n// 取消可攻击状态\nconst unmark = (chess: Chess) => {\n  return {\n    ...chess,\n    marked: false,\n  }\n}\n\n/**\n * 移动棋子到指定位置\n * @param chess 待移动的棋子状态\n * @param position 位置\n */\nconst move = (position: Position) => {\n  return (chess: Chess) => {\n    return {\n      ...chess,\n      position,\n    }\n  }\n}\n\n/**\n * 在当前棋局中选中指定位置的棋子\n * @param position 目标位置\n */\nconst selectChessInGame =\n  (position: Position) =>\n  (game: Game): Game => {\n    const { currentPlayer, situation } = game\n    const { x, y } = position\n\n    let newSelectedChess: Chess | undefined\n    const newSituation = situation\n      .map((chess) => unmark(unselect(chess)))\n      .map((chess) => {\n        if (chess.position.x === x && chess.position.y === y) {\n          newSelectedChess = select(chess)\n          return newSelectedChess\n        } else {\n          return chess\n        }\n      })\n      .map((chess) => {\n        if (canAttack(game)(newSelectedChess!, chess)) {\n          return mark(chess)\n        } else {\n          return chess\n        }\n      })\n\n    const markers: Marker[] = new Array(90)\n      .fill(null)\n      .map((v, index) => {\n        const x = index % 9\n        const y = (index - x) / 9\n        return { x, y }\n      })\n      .filter((v) => canMove(game)(newSelectedChess!, v))\n\n    return {\n      currentPlayer,\n      selectedChess: newSelectedChess,\n      situation: newSituation,\n      markers,\n    }\n  }\n\n/**\n * 在当前棋局中，把选中的棋子移动到指定位置\n * @param position 目标位置\n */\nconst moveChessInGame =\n  (position: Position) =>\n  (game: Game): Game => {\n    const { currentPlayer, situation, selectedChess } = game\n\n    if (selectedChess && canMove(game)(selectedChess, position)) {\n      const { x, y } = selectedChess.position\n      const newSituation = situation\n        .map((chess) => {\n          if (chess.position.x === x && chess.position.y === y) {\n            return move(position)(chess)\n          } else {\n            return chess\n          }\n        })\n        // 走完之后，去掉棋子的选中和标记状态\n        .map((chess) => unmark(unselect(chess)))\n\n      return {\n        currentPlayer: -currentPlayer,\n        selectedChess: undefined,\n        situation: newSituation,\n        markers: [],\n      }\n    }\n    return game\n  }\n\n/**\n * 在当前棋局中，用选中的棋子攻击指定位置\n * @param position 目标位置\n */\nconst attack =\n  (position: Position) =>\n  (game: Game): Game => {\n    const { currentPlayer, situation, selectedChess } = game\n\n    // 要攻击的棋子\n    const dest = situation.find((chess) => chess.position.x === position.x && chess.position.y === position.y)\n\n    if (selectedChess && dest && canAttack(game)(selectedChess, dest)) {\n      const { x, y } = selectedChess.position\n      const newSituation = situation\n        .map((chess) => {\n          // 吃别人的，自己移动到对方位置\n          if (chess.position.x === x && chess.position.y === y) {\n            return move(position)(chess)\n          }\n\n          // 被吃的，拿掉\n          if (chess.position.x === position.x && chess.position.y === position.y) {\n            return null\n          }\n\n          // 其他保持原样\n          return chess\n        })\n        .filter((chess) => !!chess)\n        // 走完之后，去掉棋子的选中和标记状态\n        .map((chess) => unmark(unselect(chess as Chess)))\n\n      return {\n        currentPlayer: -currentPlayer,\n        selectedChess: undefined,\n        situation: newSituation,\n        markers: [],\n      }\n    }\n    return game\n  }\n\nconst getGameStatus = (situation: Game['situation']): GameStatus => {\n  const blackWin = !situation.some((chess) => {\n    return chess.color === ChessColor.Red && chess.value === ChessValue.General\n  })\n\n  if (blackWin) {\n    return 'black-win'\n  }\n\n  const redWin = !situation.some((chess) => {\n    return chess.color === ChessColor.Black && chess.value === ChessValue.General\n  })\n\n  if (redWin) {\n    return 'red-win'\n  }\n\n  return 'playing'\n}\n\nconst defaultSituation: Chess[] = [\n  { color: ChessColor.Black, value: ChessValue.Chariot, position: { x: 0, y: 0 } },\n  { color: ChessColor.Black, value: ChessValue.Horse, position: { x: 1, y: 0 } },\n  { color: ChessColor.Black, value: ChessValue.Elephant, position: { x: 2, y: 0 } },\n  { color: ChessColor.Black, value: ChessValue.Guard, position: { x: 3, y: 0 } },\n  { color: ChessColor.Black, value: ChessValue.General, position: { x: 4, y: 0 } },\n  { color: ChessColor.Black, value: ChessValue.Guard, position: { x: 5, y: 0 } },\n  { color: ChessColor.Black, value: ChessValue.Elephant, position: { x: 6, y: 0 } },\n  { color: ChessColor.Black, value: ChessValue.Horse, position: { x: 7, y: 0 } },\n  { color: ChessColor.Black, value: ChessValue.Chariot, position: { x: 8, y: 0 } },\n\n  { color: ChessColor.Black, value: ChessValue.Cannon, position: { x: 1, y: 2 } },\n  { color: ChessColor.Black, value: ChessValue.Cannon, position: { x: 7, y: 2 } },\n\n  { color: ChessColor.Black, value: ChessValue.Soldier, position: { x: 0, y: 3 } },\n  { color: ChessColor.Black, value: ChessValue.Soldier, position: { x: 2, y: 3 } },\n  { color: ChessColor.Black, value: ChessValue.Soldier, position: { x: 4, y: 3 } },\n  { color: ChessColor.Black, value: ChessValue.Soldier, position: { x: 6, y: 3 } },\n  { color: ChessColor.Black, value: ChessValue.Soldier, position: { x: 8, y: 3 } },\n\n  { color: ChessColor.Red, value: ChessValue.Soldier, position: { x: 0, y: 6 } },\n  { color: ChessColor.Red, value: ChessValue.Soldier, position: { x: 2, y: 6 } },\n  { color: ChessColor.Red, value: ChessValue.Soldier, position: { x: 4, y: 6 } },\n  { color: ChessColor.Red, value: ChessValue.Soldier, position: { x: 6, y: 6 } },\n  { color: ChessColor.Red, value: ChessValue.Soldier, position: { x: 8, y: 6 } },\n\n  { color: ChessColor.Red, value: ChessValue.Cannon, position: { x: 1, y: 7 } },\n  { color: ChessColor.Red, value: ChessValue.Cannon, position: { x: 7, y: 7 } },\n\n  { color: ChessColor.Red, value: ChessValue.Chariot, position: { x: 0, y: 9 } },\n  { color: ChessColor.Red, value: ChessValue.Horse, position: { x: 1, y: 9 } },\n  { color: ChessColor.Red, value: ChessValue.Elephant, position: { x: 2, y: 9 } },\n  { color: ChessColor.Red, value: ChessValue.Guard, position: { x: 3, y: 9 } },\n  { color: ChessColor.Red, value: ChessValue.General, position: { x: 4, y: 9 } },\n  { color: ChessColor.Red, value: ChessValue.Guard, position: { x: 5, y: 9 } },\n  { color: ChessColor.Red, value: ChessValue.Elephant, position: { x: 6, y: 9 } },\n  { color: ChessColor.Red, value: ChessValue.Horse, position: { x: 7, y: 9 } },\n  { color: ChessColor.Red, value: ChessValue.Chariot, position: { x: 8, y: 9 } },\n]\n\nexport const GameDomain = Remesh.domain({\n  name: 'GameDomain',\n  impl: (domain) => {\n    const defaultGameState = {\n      currentPlayer: ChessColor.Red,\n      selectedChess: undefined,\n      situation: defaultSituation,\n      markers: [],\n    }\n\n    const GameState = domain.state<Game>({\n      name: 'GameState',\n      default: defaultGameState,\n    })\n\n    const GameQuery = domain.query({\n      name: 'GameQuery',\n      impl: ({ get }) => {\n        return get(GameState())\n      },\n    })\n\n    const GameStatusQuery = domain.query({\n      name: 'GameStatusQuery',\n      impl: ({ get }): GameStatus => {\n        const { situation } = get(GameQuery())\n        return getGameStatus(situation)\n      },\n    })\n\n    const GameOverEvent = domain.event({\n      name: 'GameOverEvent',\n    })\n\n    const NotYourMoveEvent = domain.event({\n      name: 'NotYourMoveEvent',\n    })\n\n    const ResetGameStateCommand = domain.command({\n      name: 'ResetGameStateCommand',\n      impl: () => {\n        return GameState().new(defaultGameState)\n      },\n    })\n\n    const SelectChessCommand = domain.command({\n      name: 'SelectChessCommand',\n      impl({ get }, chess: Chess) {\n        const gameStatus = get(GameStatusQuery())\n\n        if (gameStatus !== 'playing') {\n          return GameOverEvent()\n        }\n\n        const game = get(GameState())\n        const { currentPlayer, selectedChess } = game\n\n        if (chess.color === currentPlayer) {\n          return [GameState().new(selectChessInGame(chess.position)(game))]\n        } else {\n          if (selectedChess) {\n            return [GameState().new(attack(chess.position)(game))]\n          } else {\n            return [NotYourMoveEvent()]\n          }\n        }\n      },\n    })\n\n    const MoveChessCommand = domain.command({\n      name: 'MoveChessCommand',\n      impl({ get }, position: Marker) {\n        const gameStatus = get(GameStatusQuery())\n\n        if (gameStatus !== 'playing') {\n          return GameOverEvent()\n        }\n\n        const game = get(GameState())\n\n        const { selectedChess } = game\n\n        if (selectedChess) {\n          return [GameState().new(moveChessInGame(position)(game))]\n        } else {\n          return [NotYourMoveEvent()]\n        }\n      },\n    })\n\n    domain.effect({\n      name: 'CheckGameStatusEffect',\n      impl: ({ fromQuery }) => {\n        return fromQuery(GameStatusQuery()).pipe(\n          filter((gameStatus) => gameStatus !== 'playing'),\n          delay(100),\n          map(() => GameOverEvent()),\n        )\n      },\n    })\n\n    return {\n      query: {\n        GameQuery,\n        GameStatusQuery,\n      },\n      command: {\n        SelectChessCommand,\n        MoveChessCommand,\n        ResetGameStateCommand,\n      },\n      event: {\n        NotYourMoveEvent,\n        GameOverEvent,\n      },\n    }\n  },\n})\n","import React, { useContext } from 'react'\nimport { Chess, ChessColor, ChessValue } from 'remesh-domains-for-demos/dist/chess'\nimport { GameConfigContext } from '../context/game'\n\nconst formatChessColor = (color: ChessColor) => {\n  return { [ChessColor.Red]: 'red', [ChessColor.Black]: 'black' }[color]\n}\n\nconst formatChessValue = (color: ChessColor, value: ChessValue) => {\n  return {\n    [ChessColor.Red]: {\n      [ChessValue.General]: '帅',\n      [ChessValue.Guard]: '仕',\n      [ChessValue.Elephant]: '相',\n      [ChessValue.Horse]: '馬',\n      [ChessValue.Chariot]: '車',\n      [ChessValue.Cannon]: '炮',\n      [ChessValue.Soldier]: '兵',\n    },\n    [ChessColor.Black]: {\n      [ChessValue.General]: '将',\n      [ChessValue.Guard]: '士',\n      [ChessValue.Elephant]: '象',\n      [ChessValue.Horse]: '马',\n      [ChessValue.Chariot]: '车',\n      [ChessValue.Cannon]: '砲',\n      [ChessValue.Soldier]: '卒',\n    },\n  }[color][value]\n}\n\ntype ChessProps = {\n  chess: Chess\n  onClick: (chess: Chess) => void\n}\n\nexport const ChessRender = (props: ChessProps) => {\n  const { chess, onClick } = props\n\n  const {\n    color,\n    value,\n    position: { x, y },\n    selected,\n    marked,\n  } = chess\n\n  const { chessSize, gridSize, left, top } = useContext(GameConfigContext)\n\n  const style: React.HTMLAttributes<HTMLDivElement>['style'] = {\n    position: 'absolute',\n    zIndex: 10,\n    backgroundColor: 'white',\n    fontSize: 26,\n    textAlign: 'center',\n    borderWidth: 2,\n    width: chessSize,\n    height: chessSize,\n    cursor: 'pointer',\n    left: left + x * gridSize + (gridSize - chessSize) / 2 - 2,\n    top: top + y * gridSize + (gridSize - chessSize) / 2 - 2,\n    borderStyle: selected ? 'dashed' : 'solid',\n    borderColor: marked ? 'aqua' : formatChessColor(color),\n    borderRadius: chessSize / 2 + 1,\n    color: formatChessColor(color),\n  }\n\n  return (\n    <div onClick={() => onClick(chess)} style={style}>\n      {formatChessValue(color, value)}\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Marker } from 'remesh-domains-for-demos/dist/chess'\nimport { GameConfigContext } from '../context/game'\n\ntype MarkerProps = {\n  marker: Marker\n  onClick: (marker: Marker) => void\n}\n\nexport const MarkerRender = (props: MarkerProps) => {\n  const { marker, onClick } = props\n  const { x, y } = marker\n\n  const { chessSize, gridSize, left, top } = useContext(GameConfigContext)\n\n  const style: React.HTMLAttributes<HTMLDivElement>['style'] = {\n    position: 'absolute',\n    borderWidth: 2,\n    borderStyle: 'dashed',\n    borderColor: 'green',\n    backgroundColor: 'white',\n    width: chessSize / 2,\n    height: chessSize / 2,\n    left: left + x * gridSize + chessSize / 4 + (gridSize - chessSize) / 2 - 2,\n    top: top + y * gridSize + chessSize / 4 + (gridSize - chessSize) / 2 - 2,\n  }\n\n  return <div onClick={() => onClick(marker)} style={style} />\n}\n","import React, { useContext } from 'react'\nimport { useRemeshDomain, useRemeshEvent, useRemeshQuery, useRemeshSend } from 'remesh-react'\nimport { BoardRender } from './components/Board'\nimport { ChessRender } from './components/Chess'\nimport { MarkerRender } from './components/Marker'\nimport { GameConfigContext } from './context/game'\n\nimport { GameDomain } from 'remesh-domains-for-demos/dist/chess'\n\nexport const ChessGame = () => {\n  const send = useRemeshSend()\n  const { left, top, gridSize } = useContext(GameConfigContext)\n\n  const domain = useRemeshDomain(GameDomain())\n  const gameState = useRemeshQuery(domain.query.GameQuery())\n\n  useRemeshEvent(domain.event.NotYourMoveEvent, () => {\n    alert('不该你走')\n  })\n\n  useRemeshEvent(domain.event.GameOverEvent, () => {\n    const shouldRestart = window.confirm('游戏结束，是否重新开始？')\n    if (shouldRestart) {\n      send(domain.command.ResetGameStateCommand())\n    }\n  })\n\n  const style: React.HTMLAttributes<HTMLDivElement>['style'] = {\n    width: left + 9 * gridSize,\n    height: top + 10 * gridSize,\n  }\n\n  const { situation, markers } = gameState\n\n  return (\n    <div style={style}>\n      <BoardRender />\n\n      {situation.map((chess, i) => (\n        <ChessRender key={i} chess={chess} onClick={() => send(domain.command.SelectChessCommand(chess))} />\n      ))}\n\n      {markers.map((marker, i) => (\n        <MarkerRender key={i} marker={marker} onClick={() => send(domain.command.MoveChessCommand(marker))} />\n      ))}\n    </div>\n  )\n}\n","import React, { StrictMode } from 'react'\nimport * as ReactDOMClient from 'react-dom/client'\n\nimport { Remesh } from 'remesh'\n\nimport { RemeshRoot } from 'remesh-react'\nimport { RemeshReduxDevtools } from 'remesh-redux-devtools'\nimport { RemeshLogger } from 'remesh-logger'\n\nimport { ChessGame } from './ChessGame'\nimport { GameConfigContext } from './context/game'\n\nconst container = document.getElementById('root')\n\nif (container) {\n  const root = ReactDOMClient.createRoot(container)\n  const store = Remesh.store({\n    inspectors: [\n      RemeshReduxDevtools(),\n      RemeshLogger({\n        include: ['command', 'query', 'event', 'domain', 'command$', 'state'],\n      }),\n    ],\n  })\n\n  root.render(\n    <StrictMode>\n      <RemeshRoot store={store}>\n        <GameConfigContext.Provider\n          value={{\n            left: 0,\n            top: 0,\n            gridSize: 60,\n            chessSize: 40,\n          }}\n        >\n          <ChessGame />\n        </GameConfigContext.Provider>\n      </RemeshRoot>\n    </StrictMode>,\n  )\n}\n"],"names":["filter","predicate","thisArg","operate","source","subscriber","index","createOperatorSubscriber","value","ignoreElements","noop","mapTo","map","delayWhen","delayDurationSelector","subscriptionDelay","concat","take","mergeMap","delay","due","scheduler","asyncScheduler","duration","timer","GameConfigContext","React","createPathArr","config","left","baseLeft","top","baseTop","gridSize","line","x1","y1","x2","y2","star","x","y","arr","startX","startY","endX","endY","distance","length","push","reduce","acc","cur","Array","fill","_","i","BoardRender","useContext","chessSize","width","height","pathArr","svgStyle","position","_jsx","path","ChessValue","ChessColor","isSamePosition","pos1","pos2","isGeneralValid","color","isGuardValid","isElephantValid","isSoldierValid","canCannonAttack","game","chess","canGeneralMove","canGuardMove","square","a","canElephantMove","canHorseMove","dx","dy","canMoveStraightly","canSoldierMove","canMove","canAttack","dest","select","unselect","mark","unmark","move","selectChessInGame","currentPlayer","situation","newSelectedChess","newSituation","markers","v","moveChessInGame","selectedChess","attack","getGameStatus","defaultSituation","GameDomain","Remesh","domain","defaultGameState","GameState","GameQuery","get","GameStatusQuery","GameOverEvent","NotYourMoveEvent","ResetGameStateCommand","SelectChessCommand","MoveChessCommand","fromQuery","gameStatus","formatChessColor","Red","Black","formatChessValue","General","Guard","Elephant","Horse","Chariot","Cannon","Soldier","ChessRender","props","onClick","selected","marked","style","zIndex","backgroundColor","fontSize","textAlign","borderWidth","cursor","borderStyle","borderColor","borderRadius","MarkerRender","marker","ChessGame","send","useRemeshSend","useRemeshDomain","gameState","useRemeshQuery","query","event","alert","window","confirm","command","container","document","getElementById","root","ReactDOMClient","store","inspectors","RemeshReduxDevtools","RemeshLogger","include","render","StrictMode","RemeshRoot"],"mappings":"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"}