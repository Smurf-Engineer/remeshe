{"version":3,"file":"remesh-react.2e60fbbd.js","sources":["../../../node_modules/.pnpm/shallowequal@1.1.0/node_modules/shallowequal/index.js","../../../node_modules/.pnpm/is-plain-object@5.0.0/node_modules/is-plain-object/dist/is-plain-object.mjs","../../../packages/remesh/src/remesh.ts","../../../node_modules/.pnpm/tslib@2.4.0/node_modules/tslib/tslib.es6.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/isFunction.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/UnsubscriptionError.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/arrRemove.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/Subscription.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/config.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduler/timeoutProvider.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/reportUnhandledError.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/noop.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/errorContext.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/Subscriber.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/symbol/observable.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/identity.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/pipe.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/Observable.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/lift.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/ObjectUnsubscribedError.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/Subject.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/isArrayLike.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/isPromise.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/isInteropObservable.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/isAsyncIterable.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/throwUnobservableError.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/symbol/iterator.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/isIterable.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/isReadableStreamLike.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/observeOn.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/subscribeOn.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleObservable.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduled/schedulePromise.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleArray.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleIterable.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleAsyncIterable.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleReadableStreamLike.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduled/scheduled.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/observable/from.js","../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/map.js","../../../packages/remesh/src/inspector.ts","../../../packages/remesh/src/store.ts","../../../packages/remesh/src/index.ts","../../../node_modules/.pnpm/use-sync-external-store@1.2.0_react@18.2.0/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","../../../node_modules/.pnpm/use-sync-external-store@1.2.0_react@18.2.0/node_modules/use-sync-external-store/shim/index.js","../../../packages/remesh-react/src/remesh-react.tsx"],"sourcesContent":["//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexport { isPlainObject };\n","import { Observable, ObservableInput } from 'rxjs'\r\nimport shallowEqual from 'shallowequal'\r\nimport { isPlainObject } from 'is-plain-object'\r\nimport { DomainConceptName } from './type'\r\n\r\nexport type SerializablePrimitives = void | undefined | number | string | boolean | null\r\n\r\nexport type SerializableArray = Serializable[]\r\n\r\nexport type SerializableObject = { [key: string]: Serializable }\r\n\r\nexport type Serializable = SerializablePrimitives | SerializableArray | SerializableObject | Serializable[]\r\n\r\nexport type ToType<T> = T extends object | unknown[]\r\n  ? {\r\n      [key in keyof T]: ToType<T[key]>\r\n    }\r\n  : T\r\n\r\nexport type Args<T = unknown> = [] | [arg: T] | [arg?: T]\r\n\r\nexport type RemeshInjectedContext = {\r\n  get<T extends Args<Serializable>, U>(input: RemeshQueryAction<T, U>): U\r\n  get<state>(input: RemeshStateItem<state>): state\r\n  get<entity extends SerializableObject>(input: RemeshEntityItem<entity>): entity\r\n  get(input: RemeshStateItem<any> | RemeshEntityItem<any> | RemeshQueryAction<any, any>): unknown\r\n  fromEvent: <T extends Args, U>(Event: RemeshEvent<T, U> | RemeshSubscribeOnlyEvent<T, U>) => Observable<U>\r\n  fromQuery: <T extends Args<Serializable>, U>(Query: RemeshQueryAction<T, U>) => Observable<U>\r\n}\r\n\r\nexport type RemeshEventContext = {\r\n  get: RemeshInjectedContext['get']\r\n}\r\n\r\nexport type RemeshEvent<T extends Args, U> = {\r\n  type: 'RemeshEvent'\r\n  eventId: number\r\n  eventName: DomainConceptName<'Event'>\r\n  impl?: (context: RemeshEventContext, arg: T[0]) => U\r\n  (...args: T): RemeshEventAction<T, U>\r\n  owner: RemeshDomainAction<any, any>\r\n  inspectable: boolean\r\n  toSubscribeOnlyEvent: () => RemeshSubscribeOnlyEvent<T, U>\r\n}\r\n\r\nexport type RemeshEventAction<T extends Args, U> = {\r\n  type: 'RemeshEventAction'\r\n  arg: T[0]\r\n  Event: RemeshEvent<T, U>\r\n}\r\n\r\nexport type RemeshEventOptions<T extends Args, U> = {\r\n  name: DomainConceptName<'Event'>\r\n  inspectable?: boolean\r\n  impl: (context: RemeshEventContext, ...args: T) => U\r\n}\r\n\r\nlet eventUid = 0\r\n\r\nexport function RemeshEvent<T extends Args = [], U = void>(options: RemeshEventOptions<T, U>): RemeshEvent<T, U>\r\nexport function RemeshEvent<T = void>(options: Omit<RemeshEventOptions<[T], T>, 'impl'>): RemeshEvent<[T], T>\r\nexport function RemeshEvent<T extends Args, U>(\r\n  options: RemeshEventOptions<T, U> | Omit<RemeshEventOptions<[], void>, 'impl'>,\r\n): RemeshEvent<T, U> {\r\n  const eventId = eventUid++\r\n\r\n  const Event = ((arg: T[0]): RemeshEventAction<T, U> => {\r\n    return {\r\n      type: 'RemeshEventAction',\r\n      arg,\r\n      Event,\r\n    }\r\n  }) as unknown as RemeshEvent<T, U>\r\n\r\n  Event.type = 'RemeshEvent'\r\n  Event.eventId = eventId\r\n  Event.eventName = options.name\r\n  Event.owner = DefaultDomain()\r\n  Event.inspectable = 'inspectable' in options ? options.inspectable ?? true : true\r\n  Event.toSubscribeOnlyEvent = () => {\r\n    return toRemeshSubscribeOnlyEvent(Event)\r\n  }\r\n\r\n  if ('impl' in options) {\r\n    Event.impl = options.impl as unknown as typeof Event.impl\r\n  }\r\n\r\n  return Event\r\n}\r\n\r\nexport type RemeshSubscribeOnlyEvent<_T, _U> = {\r\n  type: 'RemeshSubscribeOnlyEvent'\r\n  eventId: number\r\n  eventName: DomainConceptName<'Event'>\r\n}\r\n\r\nexport type ToRemeshSubscribeOnlyEvent<T> = T extends RemeshSubscribeOnlyEvent<any, any>\r\n  ? T\r\n  : T extends RemeshEvent<infer TT, infer UU>\r\n  ? RemeshSubscribeOnlyEvent<TT, UU>\r\n  : never\r\n\r\nexport type ToRemeshSubscribeOnlyEventMap<T extends RemeshDomainOutput['event']> = {\r\n  [K in keyof T]: ToRemeshSubscribeOnlyEvent<T[K]>\r\n}\r\n\r\nconst eventToSubscribeOnlyEventWeakMap = new WeakMap<RemeshEvent<any, any>, RemeshSubscribeOnlyEvent<any, any>>()\r\nconst subscribeOnlyEventToEventWeakMap = new WeakMap<RemeshSubscribeOnlyEvent<any, any>, RemeshEvent<any, any>>()\r\n\r\nexport const toRemeshSubscribeOnlyEvent = <T, U>(event: RemeshEvent<any, U>): RemeshSubscribeOnlyEvent<T, U> => {\r\n  const subscribeOnlyEvent = eventToSubscribeOnlyEventWeakMap.get(event)\r\n\r\n  if (subscribeOnlyEvent) {\r\n    return subscribeOnlyEvent\r\n  }\r\n\r\n  const newSubscribeOnlyEvent = {\r\n    type: 'RemeshSubscribeOnlyEvent',\r\n    eventId: event.eventId,\r\n    eventName: event.eventName,\r\n  } as RemeshSubscribeOnlyEvent<T, U>\r\n\r\n  eventToSubscribeOnlyEventWeakMap.set(event, newSubscribeOnlyEvent)\r\n\r\n  subscribeOnlyEventToEventWeakMap.set(newSubscribeOnlyEvent, event)\r\n\r\n  return newSubscribeOnlyEvent\r\n}\r\n\r\nexport const internalToOriginalEvent = <T extends Args, U>(\r\n  subscribeOnlyEvent: RemeshSubscribeOnlyEvent<T, U>,\r\n): RemeshEvent<T, U> => {\r\n  const event = subscribeOnlyEventToEventWeakMap.get(subscribeOnlyEvent)\r\n\r\n  if (event) {\r\n    return event\r\n  }\r\n\r\n  throw new Error(`SubscribeOnlyEvent ${subscribeOnlyEvent.eventName} does not have an associated Event`)\r\n}\r\n\r\nexport type CompareFn<T> = (prev: T, curr: T) => boolean\r\n\r\nexport type RemeshState<T> = {\r\n  type: 'RemeshState'\r\n  stateId: number\r\n  stateName: DomainConceptName<'State'>\r\n  (key?: string): RemeshStateItem<T>\r\n  default: T | (() => T)\r\n  owner: RemeshDomainAction<any, any>\r\n  compare: CompareFn<T>\r\n  inspectable: boolean\r\n}\r\n\r\nexport type RemeshStateItem<T> = {\r\n  type: 'RemeshStateItem'\r\n  key?: string\r\n  State: RemeshState<T>\r\n  new: (state: T) => RemeshStateItemUpdatePayload<T>\r\n}\r\n\r\nexport type RemeshStateItemUpdatePayload<T> = {\r\n  type: 'RemeshStateItemUpdatePayload'\r\n  key?: string\r\n  value: T\r\n  stateItem: RemeshStateItem<T>\r\n}\r\n\r\nexport type RemeshStateOptions<T> = {\r\n  name: DomainConceptName<'State'>\r\n  default: T\r\n  inspectable?: boolean\r\n  compare?: CompareFn<T>\r\n}\r\n\r\nlet stateUid = 0\r\n\r\nexport const defaultCompare = <T>(prev: T, curr: T) => {\r\n  if (isPlainObject(prev) && isPlainObject(curr)) {\r\n    return shallowEqual(prev, curr)\r\n  }\r\n\r\n  if (Array.isArray(prev) && Array.isArray(curr)) {\r\n    return shallowEqual(prev, curr)\r\n  }\r\n\r\n  return prev === curr\r\n}\r\n\r\nexport const RemeshState = <T>(options: RemeshStateOptions<T>): RemeshState<T> => {\r\n  const stateId = stateUid++\r\n\r\n  type StateItem = RemeshStateItem<T>\r\n\r\n  let cacheForNullary = null as StateItem | null\r\n\r\n  const State = ((key) => {\r\n    if (key === undefined && cacheForNullary) {\r\n      return cacheForNullary\r\n    }\r\n\r\n    const stateItem: StateItem = {\r\n      type: 'RemeshStateItem',\r\n      key,\r\n      State,\r\n      new: (newState) => {\r\n        return {\r\n          type: 'RemeshStateItemUpdatePayload',\r\n          key,\r\n          value: newState,\r\n          stateItem,\r\n        }\r\n      },\r\n    }\r\n\r\n    if (key === undefined) {\r\n      cacheForNullary = stateItem\r\n    }\r\n\r\n    return stateItem\r\n  }) as RemeshState<T>\r\n\r\n  State.type = 'RemeshState'\r\n  State.stateId = stateId\r\n  State.stateName = options.name\r\n  State.default = options.default\r\n  State.compare = options.compare ?? defaultCompare\r\n  State.owner = DefaultDomain()\r\n  State.inspectable = options.inspectable ?? true\r\n\r\n  return State\r\n}\r\n\r\nexport type RemeshEntity<T extends SerializableObject> = {\r\n  type: 'RemeshEntity'\r\n  entityId: number\r\n  entityName: DomainConceptName<'Entity'>\r\n  key: (entity: T) => string\r\n  injectEntities?: T[]\r\n  (key: string | number): RemeshEntityItem<T>\r\n  owner: RemeshDomainAction<any, any>\r\n  inspectable: boolean\r\n  compare: CompareFn<T>\r\n}\r\n\r\nexport type RemeshEntityItem<T extends SerializableObject> = {\r\n  type: 'RemeshEntityItem'\r\n  key: string\r\n  Entity: RemeshEntity<T>\r\n  new: (entity: T) => RemeshEntityItemUpdatePayload<T>\r\n}\r\n\r\nexport type RemeshEntityItemUpdatePayload<T extends SerializableObject> = {\r\n  type: 'RemeshEntityItemUpdatePayload'\r\n  value: T\r\n  entityItem: RemeshEntityItem<T>\r\n}\r\n\r\nexport type RemeshEntityOptions<T extends SerializableObject> = {\r\n  name: DomainConceptName<'Entity'>\r\n  key: (entity: T) => string\r\n  injectEntities?: T[]\r\n  inspectable?: boolean\r\n  compare?: CompareFn<T>\r\n}\r\n\r\nlet entityUid = 0\r\n\r\nexport const RemeshEntity = <T extends SerializableObject>(options: RemeshEntityOptions<T>): RemeshEntity<T> => {\r\n  const entityId = entityUid++\r\n\r\n  type EntityItem = RemeshEntityItem<T>\r\n\r\n  let cacheForNullary = null as EntityItem | null\r\n\r\n  const Entity = ((key) => {\r\n    if (key === undefined && cacheForNullary) {\r\n      return cacheForNullary\r\n    }\r\n\r\n    const entityItem: EntityItem = {\r\n      type: 'RemeshEntityItem',\r\n      key: `${key}`,\r\n      Entity,\r\n      new: (newEntity) => {\r\n        return {\r\n          type: 'RemeshEntityItemUpdatePayload',\r\n          key,\r\n          value: newEntity,\r\n          entityItem,\r\n        }\r\n      },\r\n    }\r\n\r\n    if (key === undefined) {\r\n      cacheForNullary = entityItem\r\n    }\r\n\r\n    return entityItem\r\n  }) as RemeshEntity<T>\r\n\r\n  Entity.type = 'RemeshEntity'\r\n  Entity.entityId = entityId\r\n  Entity.entityName = options.name\r\n  Entity.key = options.key\r\n  Entity.injectEntities = options.injectEntities\r\n  Entity.owner = DefaultDomain()\r\n  Entity.inspectable = options.inspectable ?? true\r\n  Entity.compare = options.compare ?? defaultCompare\r\n\r\n  return Entity\r\n}\r\n\r\nexport type RemeshQueryContext = {\r\n  get: RemeshInjectedContext['get']\r\n}\r\n\r\nexport type RemeshQuery<T extends Args<Serializable>, U> = {\r\n  type: 'RemeshQuery'\r\n  queryId: number\r\n  queryName: DomainConceptName<'Query'>\r\n  impl: (context: RemeshQueryContext, arg: T[0]) => U\r\n  (...args: T): RemeshQueryAction<T, U>\r\n  owner: RemeshDomainAction<any, any>\r\n  compare: CompareFn<U>\r\n  inspectable: boolean\r\n}\r\n\r\nexport type RemeshQueryAction<T extends Args<Serializable>, U> = {\r\n  type: 'RemeshQueryAction'\r\n  Query: RemeshQuery<T, U>\r\n  arg: T[0]\r\n}\r\n\r\nexport type RemeshQueryOptions<T extends Args<Serializable>, U> = {\r\n  name: DomainConceptName<'Query'>\r\n  inspectable?: boolean\r\n  impl: (context: RemeshQueryContext, ...args: T) => U\r\n  compare?: RemeshQuery<T, U>['compare']\r\n}\r\n\r\nlet queryUid = 0\r\nexport const RemeshQuery = <T extends Args<Serializable>, U>(options: RemeshQueryOptions<T, U>): RemeshQuery<T, U> => {\r\n  const queryId = queryUid++\r\n\r\n  /**\r\n   * optimize for nullary query\r\n   */\r\n  let cacheForNullary: RemeshQueryAction<T, U> | null = null\r\n\r\n  const Query = ((arg: T[0]) => {\r\n    if (arg === undefined && cacheForNullary) {\r\n      return cacheForNullary\r\n    }\r\n\r\n    const action: RemeshQueryAction<T, U> = {\r\n      type: 'RemeshQueryAction',\r\n      Query,\r\n      arg,\r\n    }\r\n\r\n    if (arg === undefined) {\r\n      cacheForNullary = action\r\n    }\r\n\r\n    return action\r\n  }) as unknown as RemeshQuery<T, U>\r\n\r\n  Query.type = 'RemeshQuery'\r\n  Query.queryId = queryId\r\n  Query.queryName = options.name\r\n  Query.impl = options.impl as (context: RemeshQueryContext, arg: T[0]) => U\r\n  Query.compare = options.compare ?? defaultCompare\r\n  Query.owner = DefaultDomain()\r\n  Query.inspectable = options.inspectable ?? true\r\n\r\n  return Query\r\n}\r\n\r\nexport type RemeshCommandContext = {\r\n  get: RemeshInjectedContext['get']\r\n}\r\n\r\nexport type RemeshCommandAction<T extends Args> = {\r\n  type: 'RemeshCommandAction'\r\n  arg: T[0]\r\n  Command: RemeshCommand<T>\r\n}\r\n\r\nexport type RemeshCommandOutput =\r\n  | RemeshCommandAction<any>\r\n  | RemeshEventAction<any, any>\r\n  | RemeshStateItemUpdatePayload<any>\r\n  | RemeshEntityItemUpdatePayload<any>\r\n  | RemeshCommandOutput[]\r\n  | null\r\n\r\nexport type RemeshCommand<T extends Args> = {\r\n  type: 'RemeshCommand'\r\n  commandId: number\r\n  commandName: DomainConceptName<'Command'>\r\n  impl: (context: RemeshCommandContext, ...args: T) => RemeshCommandOutput\r\n  (...args: T): RemeshCommandAction<T>\r\n  owner: RemeshDomainAction<any, any>\r\n  inspectable: boolean\r\n}\r\n\r\nexport type RemeshCommandOptions<T extends Args> = {\r\n  name: DomainConceptName<'Command'>\r\n  inspectable?: boolean\r\n  impl: (context: RemeshCommandContext, ...args: T) => RemeshCommandOutput\r\n}\r\n\r\nlet commandUid = 0\r\n\r\nexport const RemeshCommand = <T extends Args = []>(options: RemeshCommandOptions<T>): RemeshCommand<T> => {\r\n  const commandId = commandUid++\r\n\r\n  const Command = ((arg: T[0]) => {\r\n    return {\r\n      type: 'RemeshCommandAction',\r\n      arg,\r\n      Command,\r\n    }\r\n  }) as unknown as RemeshCommand<T>\r\n\r\n  Command.type = 'RemeshCommand'\r\n  Command.commandId = commandId\r\n  Command.commandName = options.name\r\n  Command.impl = options.impl\r\n  Command.owner = DefaultDomain()\r\n  Command.inspectable = options.inspectable ?? true\r\n\r\n  return Command\r\n}\r\n\r\nexport type RemeshExternImpl<T> = {\r\n  type: 'RemeshExternImpl'\r\n  Extern: RemeshExtern<T>\r\n  value: T\r\n}\r\n\r\nexport type RemeshExtern<T> = {\r\n  type: 'RemeshExtern'\r\n  externId: number\r\n  default: T\r\n  impl(value: T): RemeshExternImpl<T>\r\n}\r\n\r\nexport type RemeshExternOptions<T> = {\r\n  default: RemeshExtern<T>['default']\r\n}\r\n\r\nlet externUid = 0\r\nexport const RemeshExtern = <T>(options: RemeshExternOptions<T>): RemeshExtern<T> => {\r\n  const Extern: RemeshExtern<T> = {\r\n    type: 'RemeshExtern',\r\n    externId: externUid++,\r\n    default: options.default,\r\n    impl: (value) => {\r\n      return {\r\n        type: 'RemeshExternImpl',\r\n        Extern,\r\n        value,\r\n      }\r\n    },\r\n  }\r\n\r\n  return Extern\r\n}\r\n\r\nexport type RemeshDomainPreloadQueryContext = {\r\n  get: RemeshInjectedContext['get']\r\n}\r\n\r\nexport type RemeshDomainPreloadCommandContext = {\r\n  get: RemeshInjectedContext['get']\r\n}\r\n\r\nexport type RemeshDomainPreloadCommandOutput =\r\n  | RemeshStateItemUpdatePayload<any>\r\n  | RemeshEntityItemUpdatePayload<any>\r\n  | RemeshDomainPreloadCommandOutput[]\r\n  | null\r\n\r\nexport type RemeshDomainPreloadOptions<T extends Serializable> = {\r\n  key: string\r\n  query: (context: RemeshDomainPreloadQueryContext) => Promise<T>\r\n  command: (context: RemeshDomainPreloadCommandContext, data: T) => RemeshDomainPreloadCommandOutput\r\n}\r\n\r\nexport type RemeshEffectContext = {\r\n  get: RemeshInjectedContext['get']\r\n  fromEvent: RemeshInjectedContext['fromEvent']\r\n  fromQuery: RemeshInjectedContext['fromQuery']\r\n}\r\n\r\nexport type RemeshAction = RemeshEventAction<any, any> | RemeshCommandAction<any> | null | RemeshAction[]\r\n\r\nexport type RemeshEffect = {\r\n  name: DomainConceptName<'Effect'>\r\n  impl: (context: RemeshEffectContext) => ObservableInput<RemeshAction> | null\r\n}\r\n\r\nexport type RemeshDomainContext = {\r\n  // definitions\r\n  state: typeof RemeshState\r\n  entity: typeof RemeshEntity\r\n  event: typeof RemeshEvent\r\n  query: typeof RemeshQuery\r\n  command: typeof RemeshCommand\r\n  effect: (effect: RemeshEffect) => void\r\n  preload: <T extends Serializable>(options: RemeshDomainPreloadOptions<T>) => void\r\n  // methods\r\n  getExtern: <T>(Extern: RemeshExtern<T>) => T\r\n  getDomain: <T extends RemeshDomainDefinition, U extends Args<Serializable>>(\r\n    domainAction: RemeshDomainAction<T, U>,\r\n  ) => {\r\n    [key in keyof VerifiedRemeshDomainDefinition<T>]: VerifiedRemeshDomainDefinition<T>[key]\r\n  }\r\n}\r\n\r\nexport type RemeshEvents = {\r\n  [key: string]: RemeshEvent<any, any> | RemeshSubscribeOnlyEvent<any, any>\r\n}\r\n\r\nexport type RemeshQueries = {\r\n  [key: string]: RemeshQuery<any, any>\r\n}\r\n\r\nexport type RemeshCommands = {\r\n  [key: string]: RemeshCommand<any>\r\n}\r\n\r\nexport type RemeshDomainOutput = {\r\n  event: RemeshEvents\r\n  query: RemeshQueries\r\n  command: RemeshCommands\r\n}\r\n\r\nexport type RemeshDomainDefinition = Partial<RemeshDomainOutput>\r\n\r\nexport type VerifiedRemeshDomainDefinition<T extends RemeshDomainDefinition> = Pick<\r\n  {\r\n    event: {\r\n      [key in keyof T['event']]: key extends DomainConceptName<'Event'>\r\n        ? ToRemeshSubscribeOnlyEvent<T['event'][key]>\r\n        : `${key & string} is not a valid event name`\r\n    }\r\n    query: {\r\n      [key in keyof T['query']]: key extends DomainConceptName<'Query'>\r\n        ? T['query'][key]\r\n        : `${key & string} is not a valid query name`\r\n    }\r\n    command: {\r\n      [key in keyof T['command']]: key extends DomainConceptName<'Command'>\r\n        ? T['command'][key]\r\n        : `${key & string} is not a valid command name`\r\n    }\r\n  },\r\n  ('event' | 'query' | 'command') & keyof T\r\n>\r\n\r\nexport const toValidRemeshDomainDefinition = <T extends RemeshDomainDefinition>(\r\n  domainDefinition: T,\r\n): VerifiedRemeshDomainDefinition<T> => {\r\n  const result = {} as VerifiedRemeshDomainDefinition<T>\r\n\r\n  if (domainDefinition.event) {\r\n    const eventRecord = {} as VerifiedRemeshDomainDefinition<T>['event']\r\n\r\n    for (const key in domainDefinition.event) {\r\n      const event = domainDefinition.event[key]\r\n      if (event.type === 'RemeshSubscribeOnlyEvent') {\r\n        eventRecord[key] = event\r\n      } else {\r\n        eventRecord[key] = toRemeshSubscribeOnlyEvent(event)\r\n      }\r\n    }\r\n\r\n    result.event = eventRecord\r\n  }\r\n\r\n  if (domainDefinition.query) {\r\n    result.query = domainDefinition.query as unknown as typeof result.query\r\n  }\r\n\r\n  if (domainDefinition.command) {\r\n    result.command = domainDefinition.command as unknown as typeof result.command\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport const RemeshModule = <T extends RemeshDomainDefinition>(\r\n  module: T,\r\n): {\r\n  [key in keyof VerifiedRemeshDomainDefinition<T>]: VerifiedRemeshDomainDefinition<T>[key]\r\n} => {\r\n  return toValidRemeshDomainDefinition(module)\r\n}\r\n\r\nexport type RemeshDomain<T extends RemeshDomainDefinition, U extends Args<Serializable>> = {\r\n  type: 'RemeshDomain'\r\n  domainName: DomainConceptName<'Domain'>\r\n  domainId: number\r\n  impl: (context: RemeshDomainContext, arg: U[0]) => T\r\n  (...args: U): RemeshDomainAction<T, U>\r\n  inspectable: boolean\r\n}\r\n\r\nexport type RemeshDomainAction<T extends RemeshDomainDefinition, U extends Args<Serializable>> = {\r\n  type: 'RemeshDomainAction'\r\n  Domain: RemeshDomain<T, U>\r\n  arg: U[0]\r\n}\r\n\r\nexport type RemeshDomainOptions<T extends RemeshDomainDefinition, U extends Args<Serializable>> = {\r\n  name: DomainConceptName<'Domain'>\r\n  inspectable?: boolean\r\n  impl: (context: RemeshDomainContext, ...args: U) => T\r\n}\r\n\r\nlet domainUid = 0\r\nexport const RemeshDomain = <T extends RemeshDomainDefinition, U extends Args<Serializable>>(\r\n  options: RemeshDomainOptions<T, U>,\r\n): RemeshDomain<T, U> => {\r\n  /**\r\n   * optimize for nullary domain\r\n   */\r\n  let cacheForNullary: RemeshDomainAction<T, U> | null = null\r\n\r\n  const Domain: RemeshDomain<T, U> = ((arg: U[0]) => {\r\n    if (arg === undefined && cacheForNullary) {\r\n      return cacheForNullary\r\n    }\r\n\r\n    const result: RemeshDomainAction<T, U> = {\r\n      type: 'RemeshDomainAction',\r\n      Domain,\r\n      arg,\r\n    }\r\n\r\n    if (arg === undefined) {\r\n      cacheForNullary = result\r\n    }\r\n\r\n    return result\r\n  }) as unknown as RemeshDomain<T, U>\r\n\r\n  Domain.type = 'RemeshDomain'\r\n  Domain.domainId = domainUid++\r\n  Domain.domainName = options.name\r\n  Domain.impl = options.impl as (context: RemeshDomainContext, arg: U[0]) => T\r\n  Domain.inspectable = options.inspectable ?? true\r\n\r\n  return Domain\r\n}\r\n\r\nexport const DefaultDomain: RemeshDomain<{}, []> = RemeshDomain({\r\n  name: 'DefaultDomain',\r\n  impl: () => {\r\n    return {}\r\n  },\r\n})\r\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","export function isFunction(value) {\n    return typeof value === 'function';\n}\n//# sourceMappingURL=isFunction.js.map","export function createErrorClass(createImpl) {\n    var _super = function (instance) {\n        Error.call(instance);\n        instance.stack = new Error().stack;\n    };\n    var ctorFunc = createImpl(_super);\n    ctorFunc.prototype = Object.create(Error.prototype);\n    ctorFunc.prototype.constructor = ctorFunc;\n    return ctorFunc;\n}\n//# sourceMappingURL=createErrorClass.js.map","import { createErrorClass } from './createErrorClass';\nexport var UnsubscriptionError = createErrorClass(function (_super) {\n    return function UnsubscriptionErrorImpl(errors) {\n        _super(this);\n        this.message = errors\n            ? errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ')\n            : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n    };\n});\n//# sourceMappingURL=UnsubscriptionError.js.map","export function arrRemove(arr, item) {\n    if (arr) {\n        var index = arr.indexOf(item);\n        0 <= index && arr.splice(index, 1);\n    }\n}\n//# sourceMappingURL=arrRemove.js.map","import { __read, __spreadArray, __values } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nvar Subscription = (function () {\n    function Subscription(initialTeardown) {\n        this.initialTeardown = initialTeardown;\n        this.closed = false;\n        this._parentage = null;\n        this._finalizers = null;\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var e_1, _a, e_2, _b;\n        var errors;\n        if (!this.closed) {\n            this.closed = true;\n            var _parentage = this._parentage;\n            if (_parentage) {\n                this._parentage = null;\n                if (Array.isArray(_parentage)) {\n                    try {\n                        for (var _parentage_1 = __values(_parentage), _parentage_1_1 = _parentage_1.next(); !_parentage_1_1.done; _parentage_1_1 = _parentage_1.next()) {\n                            var parent_1 = _parentage_1_1.value;\n                            parent_1.remove(this);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (_parentage_1_1 && !_parentage_1_1.done && (_a = _parentage_1.return)) _a.call(_parentage_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    _parentage.remove(this);\n                }\n            }\n            var initialFinalizer = this.initialTeardown;\n            if (isFunction(initialFinalizer)) {\n                try {\n                    initialFinalizer();\n                }\n                catch (e) {\n                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n                }\n            }\n            var _finalizers = this._finalizers;\n            if (_finalizers) {\n                this._finalizers = null;\n                try {\n                    for (var _finalizers_1 = __values(_finalizers), _finalizers_1_1 = _finalizers_1.next(); !_finalizers_1_1.done; _finalizers_1_1 = _finalizers_1.next()) {\n                        var finalizer = _finalizers_1_1.value;\n                        try {\n                            execFinalizer(finalizer);\n                        }\n                        catch (err) {\n                            errors = errors !== null && errors !== void 0 ? errors : [];\n                            if (err instanceof UnsubscriptionError) {\n                                errors = __spreadArray(__spreadArray([], __read(errors)), __read(err.errors));\n                            }\n                            else {\n                                errors.push(err);\n                            }\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_finalizers_1_1 && !_finalizers_1_1.done && (_b = _finalizers_1.return)) _b.call(_finalizers_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            if (errors) {\n                throw new UnsubscriptionError(errors);\n            }\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var _a;\n        if (teardown && teardown !== this) {\n            if (this.closed) {\n                execFinalizer(teardown);\n            }\n            else {\n                if (teardown instanceof Subscription) {\n                    if (teardown.closed || teardown._hasParent(this)) {\n                        return;\n                    }\n                    teardown._addParent(this);\n                }\n                (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);\n            }\n        }\n    };\n    Subscription.prototype._hasParent = function (parent) {\n        var _parentage = this._parentage;\n        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _parentage = this._parentage;\n        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    };\n    Subscription.prototype._removeParent = function (parent) {\n        var _parentage = this._parentage;\n        if (_parentage === parent) {\n            this._parentage = null;\n        }\n        else if (Array.isArray(_parentage)) {\n            arrRemove(_parentage, parent);\n        }\n    };\n    Subscription.prototype.remove = function (teardown) {\n        var _finalizers = this._finalizers;\n        _finalizers && arrRemove(_finalizers, teardown);\n        if (teardown instanceof Subscription) {\n            teardown._removeParent(this);\n        }\n    };\n    Subscription.EMPTY = (function () {\n        var empty = new Subscription();\n        empty.closed = true;\n        return empty;\n    })();\n    return Subscription;\n}());\nexport { Subscription };\nexport var EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n    return (value instanceof Subscription ||\n        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n}\nfunction execFinalizer(finalizer) {\n    if (isFunction(finalizer)) {\n        finalizer();\n    }\n    else {\n        finalizer.unsubscribe();\n    }\n}\n//# sourceMappingURL=Subscription.js.map","export var config = {\n    onUnhandledError: null,\n    onStoppedNotification: null,\n    Promise: undefined,\n    useDeprecatedSynchronousErrorHandling: false,\n    useDeprecatedNextContext: false,\n};\n//# sourceMappingURL=config.js.map","import { __read, __spreadArray } from \"tslib\";\nexport var timeoutProvider = {\n    setTimeout: function (handler, timeout) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var delegate = timeoutProvider.delegate;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) {\n            return delegate.setTimeout.apply(delegate, __spreadArray([handler, timeout], __read(args)));\n        }\n        return setTimeout.apply(void 0, __spreadArray([handler, timeout], __read(args)));\n    },\n    clearTimeout: function (handle) {\n        var delegate = timeoutProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=timeoutProvider.js.map","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n    timeoutProvider.setTimeout(function () {\n        var onUnhandledError = config.onUnhandledError;\n        if (onUnhandledError) {\n            onUnhandledError(err);\n        }\n        else {\n            throw err;\n        }\n    });\n}\n//# sourceMappingURL=reportUnhandledError.js.map","export function noop() { }\n//# sourceMappingURL=noop.js.map","import { config } from '../config';\nvar context = null;\nexport function errorContext(cb) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        var isRoot = !context;\n        if (isRoot) {\n            context = { errorThrown: false, error: null };\n        }\n        cb();\n        if (isRoot) {\n            var _a = context, errorThrown = _a.errorThrown, error = _a.error;\n            context = null;\n            if (errorThrown) {\n                throw error;\n            }\n        }\n    }\n    else {\n        cb();\n    }\n}\nexport function captureError(err) {\n    if (config.useDeprecatedSynchronousErrorHandling && context) {\n        context.errorThrown = true;\n        context.error = err;\n    }\n}\n//# sourceMappingURL=errorContext.js.map","import { __extends } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    function Subscriber(destination) {\n        var _this = _super.call(this) || this;\n        _this.isStopped = false;\n        if (destination) {\n            _this.destination = destination;\n            if (isSubscription(destination)) {\n                destination.add(_this);\n            }\n        }\n        else {\n            _this.destination = EMPTY_OBSERVER;\n        }\n        return _this;\n    }\n    Subscriber.create = function (next, error, complete) {\n        return new SafeSubscriber(next, error, complete);\n    };\n    Subscriber.prototype.next = function (value) {\n        if (this.isStopped) {\n            handleStoppedNotification(nextNotification(value), this);\n        }\n        else {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (this.isStopped) {\n            handleStoppedNotification(errorNotification(err), this);\n        }\n        else {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (this.isStopped) {\n            handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n        }\n        else {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.isStopped = true;\n            _super.prototype.unsubscribe.call(this);\n            this.destination = null;\n        }\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        try {\n            this.destination.error(err);\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    Subscriber.prototype._complete = function () {\n        try {\n            this.destination.complete();\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar _bind = Function.prototype.bind;\nfunction bind(fn, thisArg) {\n    return _bind.call(fn, thisArg);\n}\nvar ConsumerObserver = (function () {\n    function ConsumerObserver(partialObserver) {\n        this.partialObserver = partialObserver;\n    }\n    ConsumerObserver.prototype.next = function (value) {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.next) {\n            try {\n                partialObserver.next(value);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    };\n    ConsumerObserver.prototype.error = function (err) {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.error) {\n            try {\n                partialObserver.error(err);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n        else {\n            handleUnhandledError(err);\n        }\n    };\n    ConsumerObserver.prototype.complete = function () {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.complete) {\n            try {\n                partialObserver.complete();\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    };\n    return ConsumerObserver;\n}());\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        var partialObserver;\n        if (isFunction(observerOrNext) || !observerOrNext) {\n            partialObserver = {\n                next: (observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : undefined),\n                error: error !== null && error !== void 0 ? error : undefined,\n                complete: complete !== null && complete !== void 0 ? complete : undefined,\n            };\n        }\n        else {\n            var context_1;\n            if (_this && config.useDeprecatedNextContext) {\n                context_1 = Object.create(observerOrNext);\n                context_1.unsubscribe = function () { return _this.unsubscribe(); };\n                partialObserver = {\n                    next: observerOrNext.next && bind(observerOrNext.next, context_1),\n                    error: observerOrNext.error && bind(observerOrNext.error, context_1),\n                    complete: observerOrNext.complete && bind(observerOrNext.complete, context_1),\n                };\n            }\n            else {\n                partialObserver = observerOrNext;\n            }\n        }\n        _this.destination = new ConsumerObserver(partialObserver);\n        return _this;\n    }\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\nfunction handleUnhandledError(error) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        captureError(error);\n    }\n    else {\n        reportUnhandledError(error);\n    }\n}\nfunction defaultErrorHandler(err) {\n    throw err;\n}\nfunction handleStoppedNotification(notification, subscriber) {\n    var onStoppedNotification = config.onStoppedNotification;\n    onStoppedNotification && timeoutProvider.setTimeout(function () { return onStoppedNotification(notification, subscriber); });\n}\nexport var EMPTY_OBSERVER = {\n    closed: true,\n    next: noop,\n    error: defaultErrorHandler,\n    complete: noop,\n};\n//# sourceMappingURL=Subscriber.js.map","export var observable = (function () { return (typeof Symbol === 'function' && Symbol.observable) || '@@observable'; })();\n//# sourceMappingURL=observable.js.map","export function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map","import { identity } from './identity';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (fns.length === 0) {\n        return identity;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map","import { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\nvar Observable = (function () {\n    function Observable(subscribe) {\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var _this = this;\n        var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n        errorContext(function () {\n            var _a = _this, operator = _a.operator, source = _a.source;\n            subscriber.add(operator\n                ?\n                    operator.call(subscriber, source)\n                : source\n                    ?\n                        _this._subscribe(subscriber)\n                    :\n                        _this._trySubscribe(subscriber));\n        });\n        return subscriber;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.error(err);\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscriber = new SafeSubscriber({\n                next: function (value) {\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscriber.unsubscribe();\n                    }\n                },\n                error: reject,\n                complete: resolve,\n            });\n            _this.subscribe(subscriber);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var _a;\n        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return (value = x); }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    var _a;\n    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\nfunction isObserver(value) {\n    return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\nfunction isSubscriber(value) {\n    return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n//# sourceMappingURL=Observable.js.map","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return function (source) {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n//# sourceMappingURL=lift.js.map","import { __extends } from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nvar OperatorSubscriber = (function (_super) {\n    __extends(OperatorSubscriber, _super);\n    function OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        var _this = _super.call(this, destination) || this;\n        _this.onFinalize = onFinalize;\n        _this.shouldUnsubscribe = shouldUnsubscribe;\n        _this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : _super.prototype._next;\n        _this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._error;\n        _this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._complete;\n        return _this;\n    }\n    OperatorSubscriber.prototype.unsubscribe = function () {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            var closed_1 = this.closed;\n            _super.prototype.unsubscribe.call(this);\n            !closed_1 && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    };\n    return OperatorSubscriber;\n}(Subscriber));\nexport { OperatorSubscriber };\n//# sourceMappingURL=OperatorSubscriber.js.map","import { createErrorClass } from './createErrorClass';\nexport var ObjectUnsubscribedError = createErrorClass(function (_super) {\n    return function ObjectUnsubscribedErrorImpl() {\n        _super(this);\n        this.name = 'ObjectUnsubscribedError';\n        this.message = 'object unsubscribed';\n    };\n});\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","import { __extends, __values } from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.closed = false;\n        _this.currentObservers = null;\n        _this.observers = [];\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype._throwIfClosed = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    };\n    Subject.prototype.next = function (value) {\n        var _this = this;\n        errorContext(function () {\n            var e_1, _a;\n            _this._throwIfClosed();\n            if (!_this.isStopped) {\n                if (!_this.currentObservers) {\n                    _this.currentObservers = Array.from(_this.observers);\n                }\n                try {\n                    for (var _b = __values(_this.currentObservers), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var observer = _c.value;\n                        observer.next(value);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n        });\n    };\n    Subject.prototype.error = function (err) {\n        var _this = this;\n        errorContext(function () {\n            _this._throwIfClosed();\n            if (!_this.isStopped) {\n                _this.hasError = _this.isStopped = true;\n                _this.thrownError = err;\n                var observers = _this.observers;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    };\n    Subject.prototype.complete = function () {\n        var _this = this;\n        errorContext(function () {\n            _this._throwIfClosed();\n            if (!_this.isStopped) {\n                _this.isStopped = true;\n                var observers = _this.observers;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = this.closed = true;\n        this.observers = this.currentObservers = null;\n    };\n    Object.defineProperty(Subject.prototype, \"observed\", {\n        get: function () {\n            var _a;\n            return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Subject.prototype._trySubscribe = function (subscriber) {\n        this._throwIfClosed();\n        return _super.prototype._trySubscribe.call(this, subscriber);\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    };\n    Subject.prototype._innerSubscribe = function (subscriber) {\n        var _this = this;\n        var _a = this, hasError = _a.hasError, isStopped = _a.isStopped, observers = _a.observers;\n        if (hasError || isStopped) {\n            return EMPTY_SUBSCRIPTION;\n        }\n        this.currentObservers = null;\n        observers.push(subscriber);\n        return new Subscription(function () {\n            _this.currentObservers = null;\n            arrRemove(observers, subscriber);\n        });\n    };\n    Subject.prototype._checkFinalizedStatuses = function (subscriber) {\n        var _a = this, hasError = _a.hasError, thrownError = _a.thrownError, isStopped = _a.isStopped;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nexport { Subject };\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    };\n    return AnonymousSubject;\n}(Subject));\nexport { AnonymousSubject };\n//# sourceMappingURL=Subject.js.map","export var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n//# sourceMappingURL=isArrayLike.js.map","import { isFunction } from \"./isFunction\";\nexport function isPromise(value) {\n    return isFunction(value === null || value === void 0 ? void 0 : value.then);\n}\n//# sourceMappingURL=isPromise.js.map","import { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\nexport function isInteropObservable(input) {\n    return isFunction(input[Symbol_observable]);\n}\n//# sourceMappingURL=isInteropObservable.js.map","import { isFunction } from './isFunction';\nexport function isAsyncIterable(obj) {\n    return Symbol.asyncIterator && isFunction(obj === null || obj === void 0 ? void 0 : obj[Symbol.asyncIterator]);\n}\n//# sourceMappingURL=isAsyncIterable.js.map","export function createInvalidObservableTypeError(input) {\n    return new TypeError(\"You provided \" + (input !== null && typeof input === 'object' ? 'an invalid object' : \"'\" + input + \"'\") + \" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.\");\n}\n//# sourceMappingURL=throwUnobservableError.js.map","export function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport var iterator = getSymbolIterator();\n//# sourceMappingURL=iterator.js.map","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\nexport function isIterable(input) {\n    return isFunction(input === null || input === void 0 ? void 0 : input[Symbol_iterator]);\n}\n//# sourceMappingURL=isIterable.js.map","import { __asyncGenerator, __await, __generator } from \"tslib\";\nimport { isFunction } from './isFunction';\nexport function readableStreamLikeToAsyncGenerator(readableStream) {\n    return __asyncGenerator(this, arguments, function readableStreamLikeToAsyncGenerator_1() {\n        var reader, _a, value, done;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    reader = readableStream.getReader();\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, , 9, 10]);\n                    _b.label = 2;\n                case 2:\n                    if (!true) return [3, 8];\n                    return [4, __await(reader.read())];\n                case 3:\n                    _a = _b.sent(), value = _a.value, done = _a.done;\n                    if (!done) return [3, 5];\n                    return [4, __await(void 0)];\n                case 4: return [2, _b.sent()];\n                case 5: return [4, __await(value)];\n                case 6: return [4, _b.sent()];\n                case 7:\n                    _b.sent();\n                    return [3, 2];\n                case 8: return [3, 10];\n                case 9:\n                    reader.releaseLock();\n                    return [7];\n                case 10: return [2];\n            }\n        });\n    });\n}\nexport function isReadableStreamLike(obj) {\n    return isFunction(obj === null || obj === void 0 ? void 0 : obj.getReader);\n}\n//# sourceMappingURL=isReadableStreamLike.js.map","import { __asyncValues, __awaiter, __generator, __values } from \"tslib\";\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function innerFrom(input) {\n    if (input instanceof Observable) {\n        return input;\n    }\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return fromInteropObservable(input);\n        }\n        if (isArrayLike(input)) {\n            return fromArrayLike(input);\n        }\n        if (isPromise(input)) {\n            return fromPromise(input);\n        }\n        if (isAsyncIterable(input)) {\n            return fromAsyncIterable(input);\n        }\n        if (isIterable(input)) {\n            return fromIterable(input);\n        }\n        if (isReadableStreamLike(input)) {\n            return fromReadableStreamLike(input);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\nexport function fromInteropObservable(obj) {\n    return new Observable(function (subscriber) {\n        var obs = obj[Symbol_observable]();\n        if (isFunction(obs.subscribe)) {\n            return obs.subscribe(subscriber);\n        }\n        throw new TypeError('Provided object does not correctly implement Symbol.observable');\n    });\n}\nexport function fromArrayLike(array) {\n    return new Observable(function (subscriber) {\n        for (var i = 0; i < array.length && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        subscriber.complete();\n    });\n}\nexport function fromPromise(promise) {\n    return new Observable(function (subscriber) {\n        promise\n            .then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, reportUnhandledError);\n    });\n}\nexport function fromIterable(iterable) {\n    return new Observable(function (subscriber) {\n        var e_1, _a;\n        try {\n            for (var iterable_1 = __values(iterable), iterable_1_1 = iterable_1.next(); !iterable_1_1.done; iterable_1_1 = iterable_1.next()) {\n                var value = iterable_1_1.value;\n                subscriber.next(value);\n                if (subscriber.closed) {\n                    return;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) _a.call(iterable_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        subscriber.complete();\n    });\n}\nexport function fromAsyncIterable(asyncIterable) {\n    return new Observable(function (subscriber) {\n        process(asyncIterable, subscriber).catch(function (err) { return subscriber.error(err); });\n    });\n}\nexport function fromReadableStreamLike(readableStream) {\n    return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\nfunction process(asyncIterable, subscriber) {\n    var asyncIterable_1, asyncIterable_1_1;\n    var e_2, _a;\n    return __awaiter(this, void 0, void 0, function () {\n        var value, e_2_1;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _b.trys.push([0, 5, 6, 11]);\n                    asyncIterable_1 = __asyncValues(asyncIterable);\n                    _b.label = 1;\n                case 1: return [4, asyncIterable_1.next()];\n                case 2:\n                    if (!(asyncIterable_1_1 = _b.sent(), !asyncIterable_1_1.done)) return [3, 4];\n                    value = asyncIterable_1_1.value;\n                    subscriber.next(value);\n                    if (subscriber.closed) {\n                        return [2];\n                    }\n                    _b.label = 3;\n                case 3: return [3, 1];\n                case 4: return [3, 11];\n                case 5:\n                    e_2_1 = _b.sent();\n                    e_2 = { error: e_2_1 };\n                    return [3, 11];\n                case 6:\n                    _b.trys.push([6, , 9, 10]);\n                    if (!(asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return))) return [3, 8];\n                    return [4, _a.call(asyncIterable_1)];\n                case 7:\n                    _b.sent();\n                    _b.label = 8;\n                case 8: return [3, 10];\n                case 9:\n                    if (e_2) throw e_2.error;\n                    return [7];\n                case 10: return [7];\n                case 11:\n                    subscriber.complete();\n                    return [2];\n            }\n        });\n    });\n}\n//# sourceMappingURL=innerFrom.js.map","export function executeSchedule(parentSubscription, scheduler, work, delay, repeat) {\n    if (delay === void 0) { delay = 0; }\n    if (repeat === void 0) { repeat = false; }\n    var scheduleSubscription = scheduler.schedule(function () {\n        work();\n        if (repeat) {\n            parentSubscription.add(this.schedule(null, delay));\n        }\n        else {\n            this.unsubscribe();\n        }\n    }, delay);\n    parentSubscription.add(scheduleSubscription);\n    if (!repeat) {\n        return scheduleSubscription;\n    }\n}\n//# sourceMappingURL=executeSchedule.js.map","import { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operate(function (source, subscriber) {\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return executeSchedule(subscriber, scheduler, function () { return subscriber.next(value); }, delay); }, function () { return executeSchedule(subscriber, scheduler, function () { return subscriber.complete(); }, delay); }, function (err) { return executeSchedule(subscriber, scheduler, function () { return subscriber.error(err); }, delay); }));\n    });\n}\n//# sourceMappingURL=observeOn.js.map","import { operate } from '../util/lift';\nexport function subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operate(function (source, subscriber) {\n        subscriber.add(scheduler.schedule(function () { return source.subscribe(subscriber); }, delay));\n    });\n}\n//# sourceMappingURL=subscribeOn.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function scheduleObservable(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n//# sourceMappingURL=scheduleObservable.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function schedulePromise(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n//# sourceMappingURL=schedulePromise.js.map","import { Observable } from '../Observable';\nexport function scheduleArray(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var i = 0;\n        return scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n            }\n            else {\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    this.schedule();\n                }\n            }\n        });\n    });\n}\n//# sourceMappingURL=scheduleArray.js.map","import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleIterable(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var iterator;\n        executeSchedule(subscriber, scheduler, function () {\n            iterator = input[Symbol_iterator]();\n            executeSchedule(subscriber, scheduler, function () {\n                var _a;\n                var value;\n                var done;\n                try {\n                    (_a = iterator.next(), value = _a.value, done = _a.done);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                }\n            }, 0, true);\n        });\n        return function () { return isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return(); };\n    });\n}\n//# sourceMappingURL=scheduleIterable.js.map","import { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleAsyncIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable(function (subscriber) {\n        executeSchedule(subscriber, scheduler, function () {\n            var iterator = input[Symbol.asyncIterator]();\n            executeSchedule(subscriber, scheduler, function () {\n                iterator.next().then(function (result) {\n                    if (result.done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(result.value);\n                    }\n                });\n            }, 0, true);\n        });\n    });\n}\n//# sourceMappingURL=scheduleAsyncIterable.js.map","import { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nexport function scheduleReadableStreamLike(input, scheduler) {\n    return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n//# sourceMappingURL=scheduleReadableStreamLike.js.map","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        }\n        if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        }\n        if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        }\n        if (isAsyncIterable(input)) {\n            return scheduleAsyncIterable(input, scheduler);\n        }\n        if (isIterable(input)) {\n            return scheduleIterable(input, scheduler);\n        }\n        if (isReadableStreamLike(input)) {\n            return scheduleReadableStreamLike(input, scheduler);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\n//# sourceMappingURL=scheduled.js.map","import { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\nexport function from(input, scheduler) {\n    return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n//# sourceMappingURL=from.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n//# sourceMappingURL=map.js.map","import {\r\n  Args,\r\n  RemeshCommandAction,\r\n  RemeshDomain,\r\n  RemeshDomainDefinition,\r\n  RemeshEventAction,\r\n  Serializable,\r\n  SerializableObject,\r\n} from './remesh'\r\n\r\nimport type {\r\n  RemeshDomainStorage,\r\n  RemeshEntityStorage,\r\n  RemeshQueryStorage,\r\n  RemeshStateStorage,\r\n  RemeshStore,\r\n  RemeshStoreInspector,\r\n  RemeshStoreOptions,\r\n} from './store'\r\n\r\nexport type RemeshDomainStorageEventData<T extends RemeshDomainDefinition, U extends Args<Serializable>> = {\r\n  type: 'Domain::Created' | 'Domain::Discarded' | 'Domain::Reused'\r\n  storage: RemeshDomainStorage<T, U>\r\n}\r\n\r\nexport type RemeshStateStorageEventData<T> = {\r\n  type: 'State::Created' | 'State::Updated' | 'State::Discarded' | 'State::Reused'\r\n  storage: RemeshStateStorage<T>\r\n}\r\n\r\nexport type RemeshQueryStorageEventData<T extends Args<Serializable>, U> = {\r\n  type: 'Query::Created' | 'Query::Updated' | 'Query::Discarded' | 'Query::Reused'\r\n  storage: RemeshQueryStorage<T, U>\r\n}\r\n\r\nexport type RemeshEventEmittedEventData<T extends Args, U> = {\r\n  type: 'Event::Emitted'\r\n  action: RemeshEventAction<T, U>\r\n}\r\n\r\nexport type RemeshCommandReceivedEventData<T extends Args> = {\r\n  type: 'Command::Received'\r\n  action: RemeshCommandAction<T>\r\n}\r\n\r\nexport type RemeshEntityStorageEventData<T extends SerializableObject> = {\r\n  type: 'Entity::Created' | 'Entity::Updated' | 'Entity::Discarded' | 'Entity::Reused'\r\n  storage: RemeshEntityStorage<T>\r\n}\r\n\r\nexport const InspectorType = {\r\n  DomainCreated: 'Domain::Created',\r\n  DomainDiscarded: 'Domain::Discarded',\r\n  DomainReused: 'Domain::Reused',\r\n  StateCreated: 'State::Created',\r\n  StateUpdated: 'State::Updated',\r\n  StateDiscarded: 'State::Discarded',\r\n  StateReused: 'State::Reused',\r\n  EntityCreated: 'Entity::Created',\r\n  EntityUpdated: 'Entity::Updated',\r\n  EntityDiscarded: 'Entity::Discarded',\r\n  EntityReused: 'Entity::Reused',\r\n  QueryCreated: 'Query::Created',\r\n  QueryUpdated: 'Query::Updated',\r\n  QueryDiscarded: 'Query::Discarded',\r\n  QueryReused: 'Query::Reused',\r\n  EventEmitted: 'Event::Emitted',\r\n  CommandReceived: 'Command::Received',\r\n} as const\r\n\r\nexport const RemeshInspectorDomain = RemeshDomain({\r\n  name: 'RemeshInspectorDomain',\r\n  impl: (domain) => {\r\n    const RemeshDomainStorageEvent = domain.event<RemeshDomainStorageEventData<any, any>>({\r\n      name: 'RemeshDomainStorageEvent',\r\n    })\r\n\r\n    const RemeshDomainStorageCommand = domain.command({\r\n      name: 'RemeshDomainStorageCommand',\r\n      impl: ({}, event: RemeshDomainStorageEventData<any, any>) => {\r\n        return RemeshDomainStorageEvent(event)\r\n      },\r\n    })\r\n\r\n    const RemeshStateStorageEvent = domain.event<RemeshStateStorageEventData<any>>({\r\n      name: 'RemeshStateStorageEvent',\r\n    })\r\n\r\n    const RemeshStateStorageCommand = domain.command({\r\n      name: 'RemeshStateStorageCommand',\r\n      impl: ({}, event: RemeshStateStorageEventData<any>) => {\r\n        return RemeshStateStorageEvent(event)\r\n      },\r\n    })\r\n\r\n    const RemeshQueryStorageEvent = domain.event<RemeshQueryStorageEventData<any, any>>({\r\n      name: 'RemeshQueryStorageEvent',\r\n    })\r\n\r\n    const RemeshQueryStorageCommand = domain.command({\r\n      name: 'RemeshQueryStorageCommand',\r\n      impl: ({}, event: RemeshQueryStorageEventData<any, any>) => {\r\n        return RemeshQueryStorageEvent(event)\r\n      },\r\n    })\r\n\r\n    const RemeshEventEmittedEvent = domain.event<RemeshEventEmittedEventData<any, any>>({\r\n      name: 'RemeshEventEmittedEvent',\r\n    })\r\n\r\n    const RemeshEventEmittedCommand = domain.command({\r\n      name: 'RemeshEventEmittedCommand',\r\n      impl: ({}, event: RemeshEventEmittedEventData<any, any>) => {\r\n        return RemeshEventEmittedEvent(event)\r\n      },\r\n    })\r\n\r\n    const RemeshCommandReceivedEvent = domain.event<RemeshCommandReceivedEventData<any>>({\r\n      name: 'RemeshCommandReceivedEvent',\r\n    })\r\n\r\n    const RemeshCommandReceivedCommand = domain.command({\r\n      name: 'RemeshCommandReceivedCommand',\r\n      impl: ({}, event: RemeshCommandReceivedEventData<any>) => {\r\n        return RemeshCommandReceivedEvent(event)\r\n      },\r\n    })\r\n\r\n    const RemeshEntityStorageEvent = domain.event<RemeshEntityStorageEventData<any>>({\r\n      name: 'RemeshEntityStorageEvent',\r\n    })\r\n\r\n    const RemeshEntityStorageCommand = domain.command({\r\n      name: 'RemeshEntityStorageCommand',\r\n      impl: ({}, event: RemeshEntityStorageEventData<any>) => {\r\n        return RemeshEntityStorageEvent(event)\r\n      },\r\n    })\r\n\r\n    return {\r\n      command: {\r\n        RemeshDomainStorageCommand,\r\n        RemeshStateStorageCommand,\r\n        RemeshQueryStorageCommand,\r\n        RemeshEventEmittedCommand,\r\n        RemeshCommandReceivedCommand,\r\n        RemeshEntityStorageCommand,\r\n      },\r\n      event: {\r\n        RemeshDomainStorageEvent,\r\n        RemeshStateStorageEvent,\r\n        RemeshQueryStorageEvent,\r\n        RemeshEventEmittedEvent,\r\n        RemeshCommandReceivedEvent,\r\n        RemeshEntityStorageEvent,\r\n      },\r\n    }\r\n  },\r\n})\r\n\r\nexport type InspectInput = {\r\n  inspectable: boolean\r\n  owner?: {\r\n    Domain: {\r\n      inspectable: boolean\r\n    }\r\n  }\r\n}\r\n\r\nexport const isInspectable = (input: InspectInput): boolean => {\r\n  if (input.owner) {\r\n    return input.owner.Domain.inspectable && input.inspectable\r\n  }\r\n  return input.inspectable\r\n}\r\n\r\nconst initInspectors = (options: RemeshStoreOptions) => {\r\n  return (options.inspectors ?? [])\r\n    .filter((inspector): inspector is RemeshStoreInspector => !!inspector)\r\n    .map((inspector) => {\r\n      const { inspectors, ...rest } = options\r\n      return inspector(rest)\r\n    })\r\n}\r\n\r\nexport const createInspectorManager = (options: RemeshStoreOptions) => {\r\n  let inspectors: RemeshStore[] | null = null\r\n\r\n  const getInspectors = (): RemeshStore[] => {\r\n    if (!inspectors) {\r\n      inspectors = initInspectors(options)\r\n    }\r\n\r\n    return inspectors\r\n  }\r\n\r\n  const destroyInspectors = () => {\r\n    if (inspectors) {\r\n      for (const inspector of inspectors) {\r\n        inspector.discard()\r\n      }\r\n\r\n      inspectors = null\r\n    }\r\n  }\r\n\r\n  const inspectDomainStorage = <T extends RemeshDomainDefinition, U extends Args<Serializable>>(\r\n    type: RemeshDomainStorageEventData<T, U>['type'],\r\n    domainStorage: RemeshDomainStorage<T, U>,\r\n  ) => {\r\n    if (isInspectable(domainStorage.Domain)) {\r\n      for (const inspector of getInspectors()) {\r\n        const inspectorDomain = inspector.getDomain(RemeshInspectorDomain())\r\n\r\n        inspector.send(\r\n          inspectorDomain.command.RemeshDomainStorageCommand({\r\n            type,\r\n            storage: domainStorage,\r\n          }),\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const inspectStateStorage = <T>(\r\n    type: RemeshStateStorageEventData<T>['type'],\r\n    stateStorage: RemeshStateStorage<T>,\r\n  ) => {\r\n    if (isInspectable(stateStorage.State)) {\r\n      for (const inspector of getInspectors()) {\r\n        const inspectorDomain = inspector.getDomain(RemeshInspectorDomain())\r\n\r\n        inspector.send(\r\n          inspectorDomain.command.RemeshStateStorageCommand({\r\n            type,\r\n            storage: stateStorage,\r\n          }),\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const inspectQueryStorage = <T extends Args<Serializable>, U>(\r\n    type: RemeshQueryStorageEventData<T, U>['type'],\r\n    queryStorage: RemeshQueryStorage<T, U>,\r\n  ) => {\r\n    if (isInspectable(queryStorage.Query)) {\r\n      for (const inspector of getInspectors()) {\r\n        const inspectorDomain = inspector.getDomain(RemeshInspectorDomain())\r\n\r\n        inspector.send(\r\n          inspectorDomain.command.RemeshQueryStorageCommand({\r\n            type,\r\n            storage: queryStorage,\r\n          }),\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const inspectEventEmitted = <T extends Args, U>(\r\n    type: RemeshEventEmittedEventData<T, U>['type'],\r\n    eventAction: RemeshEventAction<T, U>,\r\n  ) => {\r\n    if (isInspectable(eventAction.Event)) {\r\n      for (const inspector of getInspectors()) {\r\n        const inspectorDomain = inspector.getDomain(RemeshInspectorDomain())\r\n\r\n        inspector.send(\r\n          inspectorDomain.command.RemeshEventEmittedCommand({\r\n            type,\r\n            action: eventAction,\r\n          }),\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const inspectCommandReceived = <T extends Args>(\r\n    type: RemeshCommandReceivedEventData<T>['type'],\r\n    commandAction: RemeshCommandAction<T>,\r\n  ) => {\r\n    if (isInspectable(commandAction.Command)) {\r\n      for (const inspector of getInspectors()) {\r\n        const inspectorDomain = inspector.getDomain(RemeshInspectorDomain())\r\n\r\n        inspector.send(\r\n          inspectorDomain.command.RemeshCommandReceivedCommand({\r\n            type,\r\n            action: commandAction,\r\n          }),\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const inspectEntityStorage = <T extends SerializableObject>(\r\n    type: RemeshEntityStorageEventData<T>['type'],\r\n    entityStorage: RemeshEntityStorage<T>,\r\n  ) => {\r\n    if (isInspectable(entityStorage.Entity)) {\r\n      for (const inspector of getInspectors()) {\r\n        const inspectorDomain = inspector.getDomain(RemeshInspectorDomain())\r\n\r\n        inspector.send(\r\n          inspectorDomain.command.RemeshEntityStorageCommand({\r\n            type,\r\n            storage: entityStorage,\r\n          }),\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    destroyInspectors,\r\n    inspectDomainStorage,\r\n    inspectStateStorage,\r\n    inspectQueryStorage,\r\n    inspectEntityStorage,\r\n    inspectEventEmitted,\r\n    inspectCommandReceived,\r\n  }\r\n}\r\n","import { from, Observable, Observer, Subject, Subscription } from 'rxjs'\r\n\r\nimport { map } from 'rxjs/operators'\r\n\r\nimport {\r\n  Args,\r\n  internalToOriginalEvent,\r\n  RemeshCommand,\r\n  RemeshCommandAction,\r\n  RemeshCommandContext,\r\n  RemeshCommandOutput,\r\n  RemeshDomain,\r\n  RemeshDomainAction,\r\n  RemeshDomainContext,\r\n  RemeshDomainDefinition,\r\n  RemeshDomainPreloadCommandContext,\r\n  RemeshDomainPreloadOptions,\r\n  RemeshEffect,\r\n  RemeshEffectContext,\r\n  RemeshAction,\r\n  RemeshEntity,\r\n  RemeshEntityItem,\r\n  RemeshEvent,\r\n  RemeshEventAction,\r\n  RemeshEventContext,\r\n  RemeshEventOptions,\r\n  RemeshExtern,\r\n  RemeshExternImpl,\r\n  RemeshInjectedContext,\r\n  RemeshQuery,\r\n  RemeshQueryAction,\r\n  RemeshQueryContext,\r\n  RemeshState,\r\n  RemeshStateItem,\r\n  RemeshSubscribeOnlyEvent,\r\n  Serializable,\r\n  SerializableObject,\r\n  toValidRemeshDomainDefinition,\r\n  VerifiedRemeshDomainDefinition,\r\n  RemeshDomainPreloadQueryContext,\r\n} from './remesh'\r\n\r\nimport { createInspectorManager, InspectorType } from './inspector'\r\n\r\nexport type PreloadedState = Record<string, Serializable>\r\n\r\nexport type RemeshStore = ReturnType<typeof RemeshStore>\r\n\r\nlet uid = 0\r\n\r\nexport type RemeshStateStorage<T> = {\r\n  id: number\r\n  type: 'RemeshStateStorage'\r\n  State: RemeshState<T>\r\n  key: string\r\n  currentState: T\r\n  downstreamSet: Set<RemeshQueryStorage<any, any>>\r\n}\r\n\r\nexport type RemeshEntityStorage<T extends SerializableObject> = {\r\n  id: number\r\n  type: 'RemeshEntityStorage'\r\n  Entity: RemeshEntity<T>\r\n  key: string\r\n  currentEntity: T | null\r\n  downstreamSet: Set<RemeshQueryStorage<any, any>>\r\n}\r\n\r\nexport type RemeshQueryStorage<T extends Args<Serializable>, U> = {\r\n  id: number\r\n  type: 'RemeshQueryStorage'\r\n  Query: RemeshQuery<T, U>\r\n  arg: T[0]\r\n  key: string\r\n  currentValue: U\r\n  upstreamSet: Set<RemeshQueryStorage<any, any> | RemeshStateStorage<any> | RemeshEntityStorage<any>>\r\n  downstreamSet: Set<RemeshQueryStorage<any, any>>\r\n  subject: Subject<U>\r\n  observable: Observable<U>\r\n  refCount: number\r\n  status: 'default' | 'wip' | 'updated'\r\n  wipUpstreamSet: Set<RemeshQueryStorage<any, any> | RemeshStateStorage<any> | RemeshEntityStorage<any>>\r\n}\r\n\r\nexport type RemeshEventStorage<T extends Args, U> = {\r\n  id: number\r\n  type: 'RemeshEventStorage'\r\n  Event: RemeshEvent<T, U>\r\n  subject: Subject<T[0]>\r\n  observable: Observable<U>\r\n  refCount: number\r\n}\r\n\r\nexport type RemeshDomainStorage<T extends RemeshDomainDefinition, U extends Args<Serializable>> = {\r\n  id: number\r\n  type: 'RemeshDomainStorage'\r\n  Domain: RemeshDomain<T, U>\r\n  key: string\r\n  arg: U[0]\r\n  domain: VerifiedRemeshDomainDefinition<T>\r\n  domainContext: RemeshDomainContext\r\n  domainAction: RemeshDomainAction<T, U>\r\n  upstreamSet: Set<RemeshDomainStorage<any, any>>\r\n  downstreamSet: Set<RemeshDomainStorage<any, any>>\r\n  preloadOptionsList: RemeshDomainPreloadOptions<any>[]\r\n  preloadedPromise?: Promise<void>\r\n  preloadedState: PreloadedState\r\n  effectList: RemeshEffect[]\r\n  effectMap: Map<RemeshEffect, Subscription>\r\n  stateMap: Map<string, RemeshStateStorage<any>>\r\n  entityMap: Map<string, RemeshEntityStorage<any>>\r\n  queryMap: Map<string, RemeshQueryStorage<any, any>>\r\n  eventMap: Map<RemeshEvent<any, any>, RemeshEventStorage<any, any>>\r\n  ignited: boolean\r\n  hasBeenPreloaded: boolean\r\n  isDiscarding: boolean\r\n}\r\n\r\nexport type RemeshExternStorage<T> = {\r\n  id: number\r\n  type: 'RemeshExternStorage'\r\n  Extern: RemeshExtern<T>\r\n  currentValue: T\r\n}\r\n\r\nexport type RemeshStoreInspector = typeof RemeshStore\r\n\r\nexport type RemeshStoreOptions = {\r\n  name?: string\r\n  externs?: RemeshExternImpl<any>[]\r\n  inspectors?: (RemeshStoreInspector | false | undefined | null)[]\r\n  preloadedState?: PreloadedState\r\n}\r\n\r\nexport const RemeshStore = (options?: RemeshStoreOptions) => {\r\n  const config = {\r\n    ...options,\r\n  }\r\n\r\n  const inspectorManager = createInspectorManager(config)\r\n\r\n  const pendingEmitSet = new Set<RemeshQueryStorage<any, any> | RemeshEventAction<any, any>>()\r\n  /**\r\n   * Leaf means that the query storage has no downstream query storages\r\n   */\r\n  const pendingLeafSet = new Set<RemeshQueryStorage<any, any>>()\r\n  const pendingClearSet = new Set<RemeshQueryStorage<any, any> | RemeshEntityStorage<any> | RemeshStateStorage<any>>()\r\n\r\n  const domainStorageMap = new Map<string, RemeshDomainStorage<any, any>>()\r\n\r\n  const externStorageWeakMap = new WeakMap<RemeshExtern<any>, RemeshExternStorage<any>>()\r\n\r\n  const getExternValue = <T>(Extern: RemeshExtern<T>): T => {\r\n    for (const externImpl of config.externs ?? []) {\r\n      if (externImpl.Extern === Extern) {\r\n        return externImpl.value\r\n      }\r\n    }\r\n    return Extern.default\r\n  }\r\n\r\n  const getExternStorage = <T>(Extern: RemeshExtern<T>): RemeshExternStorage<T> => {\r\n    const externStorage = externStorageWeakMap.get(Extern)\r\n\r\n    if (externStorage) {\r\n      return externStorage\r\n    }\r\n\r\n    const currentValue = getExternValue(Extern)\r\n\r\n    const currentExternStorage: RemeshExternStorage<T> = {\r\n      id: uid++,\r\n      type: 'RemeshExternStorage',\r\n      Extern,\r\n      currentValue,\r\n    }\r\n\r\n    externStorageWeakMap.set(Extern, currentExternStorage)\r\n\r\n    return currentExternStorage\r\n  }\r\n\r\n  const getExternCurrentValue = <T>(Extern: RemeshExtern<T>): T => {\r\n    return getExternStorage(Extern).currentValue\r\n  }\r\n\r\n  const storageKeyWeakMap = new WeakMap<\r\n    RemeshQueryAction<any, any> | RemeshStateItem<any> | RemeshDomainAction<any, any> | RemeshEntityItem<any>,\r\n    string\r\n  >()\r\n\r\n  const getStateStorageKey = <T>(stateItem: RemeshStateItem<T>): string => {\r\n    const key = storageKeyWeakMap.get(stateItem)\r\n\r\n    if (key) {\r\n      return key\r\n    }\r\n\r\n    const stateName = stateItem.State.stateName\r\n    const keyString = `State/${stateItem.State.stateId}/${stateName}:${stateItem.key ?? ''}`\r\n\r\n    storageKeyWeakMap.set(stateItem, keyString)\r\n\r\n    return keyString\r\n  }\r\n\r\n  const getQueryStorageKey = <T extends Args<Serializable>, U>(queryAction: RemeshQueryAction<T, U>): string => {\r\n    const key = storageKeyWeakMap.get(queryAction)\r\n\r\n    if (key) {\r\n      return key\r\n    }\r\n\r\n    const queryName = queryAction.Query.queryName\r\n    const argString = JSON.stringify(queryAction.arg) ?? ''\r\n    const keyString = `Query/${queryAction.Query.queryId}/${queryName}:${argString}`\r\n\r\n    storageKeyWeakMap.set(queryAction, keyString)\r\n\r\n    return keyString\r\n  }\r\n\r\n  const getDomainStorageKey = <T extends RemeshDomainDefinition, U extends Args<Serializable>>(\r\n    domainAction: RemeshDomainAction<T, U>,\r\n  ): string => {\r\n    const key = storageKeyWeakMap.get(domainAction)\r\n\r\n    if (key) {\r\n      return key\r\n    }\r\n\r\n    const domainName = domainAction.Domain.domainName\r\n    const argString = JSON.stringify(domainAction.arg) ?? ''\r\n    const keyString = `Domain/${domainAction.Domain.domainId}/${domainName}:${argString}`\r\n\r\n    storageKeyWeakMap.set(domainAction, keyString)\r\n\r\n    return keyString\r\n  }\r\n\r\n  const getEntityStorageKey = <T extends SerializableObject>(entityItem: RemeshEntityItem<T>): string => {\r\n    const key = storageKeyWeakMap.get(entityItem)\r\n\r\n    if (key) {\r\n      return key\r\n    }\r\n\r\n    const entityName = entityItem.Entity.entityName\r\n    const keyString = `Entity/${entityItem.Entity.entityId}/${entityName}:${entityItem.key}`\r\n\r\n    storageKeyWeakMap.set(entityItem, keyString)\r\n\r\n    return keyString\r\n  }\r\n\r\n  const getStorageKey = <T extends Args<Serializable>, S, U, E extends SerializableObject>(\r\n    input:\r\n      | RemeshStateItem<S>\r\n      | RemeshEntityItem<E>\r\n      | RemeshQueryAction<T, U>\r\n      | RemeshDomainAction<RemeshDomainDefinition, any>,\r\n  ): string => {\r\n    if (input.type === 'RemeshStateItem') {\r\n      return getStateStorageKey(input)\r\n    } else if (input.type === 'RemeshQueryAction') {\r\n      return getQueryStorageKey(input)\r\n    } else if (input.type === 'RemeshEntityItem') {\r\n      return getEntityStorageKey(input)\r\n    }\r\n    return getDomainStorageKey(input)\r\n  }\r\n\r\n  const stateStorageWeakMap = new WeakMap<RemeshStateItem<any>, RemeshStateStorage<any>>()\r\n\r\n  const getStateValue = <T>(State: RemeshState<T>) => {\r\n    if (typeof State.default === 'function') {\r\n      return (State.default as () => T)()\r\n    }\r\n    return State.default\r\n  }\r\n\r\n  const createStateStorage = <T>(stateItem: RemeshStateItem<T>): RemeshStateStorage<T> => {\r\n    const domainStorage = getDomainStorage(stateItem.State.owner)\r\n    const key = getStateStorageKey(stateItem)\r\n\r\n    const currentState = getStateValue(stateItem.State)\r\n\r\n    const stateStorage: RemeshStateStorage<T> = {\r\n      id: uid++,\r\n      type: 'RemeshStateStorage',\r\n      State: stateItem.State,\r\n      key,\r\n      currentState,\r\n      downstreamSet: new Set(),\r\n    }\r\n\r\n    domainStorage.stateMap.set(key, stateStorage)\r\n    stateStorageWeakMap.set(stateItem, stateStorage)\r\n\r\n    inspectorManager.inspectStateStorage(InspectorType.StateCreated, stateStorage)\r\n\r\n    return stateStorage\r\n  }\r\n\r\n  const restoreStateStorage = <T>(stateStorage: RemeshStateStorage<T>) => {\r\n    const domainStorage = getDomainStorage(stateStorage.State.owner)\r\n\r\n    if (domainStorage.stateMap.has(stateStorage.key)) {\r\n      return\r\n    }\r\n    stateStorage.currentState = getStateValue(stateStorage.State)\r\n    domainStorage.stateMap.set(stateStorage.key, stateStorage)\r\n    inspectorManager.inspectStateStorage(InspectorType.StateReused, stateStorage)\r\n  }\r\n\r\n  const getStateStorage = <T>(stateItem: RemeshStateItem<T>): RemeshStateStorage<T> => {\r\n    const domainStorage = getDomainStorage(stateItem.State.owner)\r\n    const key = getStateStorageKey(stateItem)\r\n    const stateStorage = domainStorage.stateMap.get(key)\r\n\r\n    if (stateStorage) {\r\n      return stateStorage as RemeshStateStorage<T>\r\n    }\r\n\r\n    const cachedStorage = stateStorageWeakMap.get(stateItem)\r\n\r\n    if (cachedStorage) {\r\n      restoreStateStorage(cachedStorage)\r\n      return cachedStorage\r\n    }\r\n\r\n    return createStateStorage(stateItem)\r\n  }\r\n\r\n  const entityStorageWeakMap = new WeakMap<RemeshEntityItem<any>, RemeshEntityStorage<any>>()\r\n\r\n  const hasBeenInjectedWeakMap = new WeakMap<RemeshEntity<any>, boolean>()\r\n\r\n  const injectEntitiesIfNeeded = <T extends SerializableObject>(Entity: RemeshEntity<T>) => {\r\n    if (!hasBeenInjectedWeakMap.get(Entity)) {\r\n      hasBeenInjectedWeakMap.set(Entity, true)\r\n      if (Entity.injectEntities) {\r\n        for (const entity of Entity.injectEntities) {\r\n          updateEntityItem(Entity(Entity.key(entity)), entity)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const createEntityStorage = <T extends SerializableObject>(\r\n    entityItem: RemeshEntityItem<T>,\r\n  ): RemeshEntityStorage<T> => {\r\n    const domainStorage = getDomainStorage(entityItem.Entity.owner)\r\n    const key = getStorageKey(entityItem)\r\n\r\n    const newEntityStorage: RemeshEntityStorage<T> = {\r\n      id: uid++,\r\n      type: 'RemeshEntityStorage',\r\n      Entity: entityItem.Entity,\r\n      key,\r\n      currentEntity: null,\r\n      downstreamSet: new Set(),\r\n    }\r\n\r\n    domainStorage.entityMap.set(key, newEntityStorage)\r\n    entityStorageWeakMap.set(entityItem, newEntityStorage)\r\n\r\n    injectEntitiesIfNeeded(entityItem.Entity)\r\n\r\n    inspectorManager.inspectEntityStorage(InspectorType.EntityCreated, newEntityStorage)\r\n\r\n    return newEntityStorage\r\n  }\r\n\r\n  const restoreEntityStorage = <T extends SerializableObject>(entityStorage: RemeshEntityStorage<T>) => {\r\n    const domainStorage = getDomainStorage(entityStorage.Entity.owner)\r\n\r\n    if (domainStorage.entityMap.has(entityStorage.key)) {\r\n      return\r\n    }\r\n\r\n    entityStorage.currentEntity = null\r\n\r\n    domainStorage.entityMap.set(entityStorage.key, entityStorage)\r\n    inspectorManager.inspectEntityStorage(InspectorType.EntityReused, entityStorage)\r\n  }\r\n\r\n  const getEntityStorage = <T extends SerializableObject>(entityItem: RemeshEntityItem<T>): RemeshEntityStorage<T> => {\r\n    const domainStorage = getDomainStorage(entityItem.Entity.owner)\r\n    const key = getStorageKey(entityItem)\r\n    const entityStorage = domainStorage.entityMap.get(key)\r\n\r\n    if (entityStorage) {\r\n      return entityStorage as RemeshEntityStorage<T>\r\n    }\r\n\r\n    const cachedStorage = entityStorageWeakMap.get(entityItem)\r\n\r\n    if (cachedStorage) {\r\n      restoreEntityStorage(cachedStorage)\r\n      return cachedStorage\r\n    }\r\n\r\n    return createEntityStorage(entityItem)\r\n  }\r\n\r\n  const eventStorageWeakMap = new WeakMap<RemeshEvent<any, any>, RemeshEventStorage<any, any>>()\r\n\r\n  const createEventStorage = <T extends Args, U>(Event: RemeshEvent<T, U>): RemeshEventStorage<T, U> => {\r\n    const domainStorage = getDomainStorage(Event.owner)\r\n\r\n    const eventContext: RemeshEventContext = {\r\n      get: remeshInjectedContext.get,\r\n    }\r\n\r\n    const subject = new Subject<T>()\r\n\r\n    const observable = subject.pipe(\r\n      map((arg) => {\r\n        if (Event.impl) {\r\n          return Event.impl(eventContext, arg)\r\n        }\r\n        return arg as unknown as U\r\n      }),\r\n    )\r\n    const cachedStorage = eventStorageWeakMap.get(Event)\r\n\r\n    const eventStorage = Object.assign(cachedStorage ?? {}, {\r\n      id: uid++,\r\n      type: 'RemeshEventStorage',\r\n      Event,\r\n      subject,\r\n      observable,\r\n      refCount: 0,\r\n    } as RemeshEventStorage<T, U>)\r\n\r\n    domainStorage.eventMap.set(Event, eventStorage)\r\n    eventStorageWeakMap.set(Event, eventStorage)\r\n\r\n    return eventStorage\r\n  }\r\n\r\n  const getEventStorage = <T extends Args, U>(Event: RemeshEvent<T, U>): RemeshEventStorage<T, U> => {\r\n    const domainStorage = getDomainStorage(Event.owner)\r\n    const eventStorage = domainStorage.eventMap.get(Event) ?? createEventStorage(Event)\r\n\r\n    return eventStorage as RemeshEventStorage<T, U>\r\n  }\r\n\r\n  const queryStorageWeakMap = new WeakMap<RemeshQueryAction<any, any>, RemeshQueryStorage<any, any>>()\r\n\r\n  const createQueryStorage = <T extends Args<Serializable>, U>(\r\n    queryAction: RemeshQueryAction<T, U>,\r\n  ): RemeshQueryStorage<T, U> => {\r\n    const domainStorage = getDomainStorage(queryAction.Query.owner)\r\n    const key = getQueryStorageKey(queryAction)\r\n\r\n    const subject = new Subject<U>()\r\n    const observable = subject.asObservable()\r\n    const upstreamSet: RemeshQueryStorage<T, U>['upstreamSet'] = new Set()\r\n\r\n    const currentQueryStorage = {\r\n      id: uid++,\r\n      type: 'RemeshQueryStorage',\r\n      Query: queryAction.Query,\r\n      arg: queryAction.arg,\r\n      key,\r\n      upstreamSet,\r\n      downstreamSet: new Set(),\r\n      subject,\r\n      observable,\r\n      refCount: 0,\r\n      status: 'default',\r\n      wipUpstreamSet: new Set(),\r\n    } as RemeshQueryStorage<T, U>\r\n\r\n    const { Query } = queryAction\r\n\r\n    const queryContext: RemeshQueryContext = {\r\n      get: (input: RemeshStateItem<any> | RemeshEntityItem<any> | RemeshQueryAction<any, any>) => {\r\n        if (currentQueryStorage.upstreamSet !== upstreamSet) {\r\n          return remeshInjectedContext.get(input)\r\n        }\r\n\r\n        if (input.type === 'RemeshStateItem') {\r\n          const upstreamStateStorage = getStateStorage(input)\r\n\r\n          currentQueryStorage.upstreamSet.add(upstreamStateStorage)\r\n          upstreamStateStorage.downstreamSet.add(currentQueryStorage)\r\n\r\n          return remeshInjectedContext.get(input)\r\n        }\r\n\r\n        if (input.type === 'RemeshEntityItem') {\r\n          const upstreamEntityStorage = getEntityStorage(input)\r\n\r\n          currentQueryStorage.upstreamSet.add(upstreamEntityStorage)\r\n          upstreamEntityStorage.downstreamSet.add(currentQueryStorage)\r\n\r\n          return remeshInjectedContext.get(input)\r\n        }\r\n\r\n        if (input.type === 'RemeshQueryAction') {\r\n          const upstreamQueryStorage = getQueryStorage(input)\r\n\r\n          currentQueryStorage.upstreamSet.add(upstreamQueryStorage)\r\n          upstreamQueryStorage.downstreamSet.add(currentQueryStorage)\r\n\r\n          return remeshInjectedContext.get(input)\r\n        }\r\n\r\n        return remeshInjectedContext.get(input)\r\n      },\r\n    }\r\n\r\n    const currentValue = Query.impl(queryContext, queryAction.arg)\r\n\r\n    currentQueryStorage.currentValue = currentValue\r\n\r\n    domainStorage.queryMap.set(key, currentQueryStorage)\r\n    queryStorageWeakMap.set(queryAction, currentQueryStorage)\r\n\r\n    inspectorManager.inspectQueryStorage(InspectorType.QueryCreated, currentQueryStorage)\r\n\r\n    return currentQueryStorage\r\n  }\r\n\r\n  const restoreQueryStorage = <T extends Args<Serializable>, U>(queryStorage: RemeshQueryStorage<T, U>) => {\r\n    const domainStorage = getDomainStorage(queryStorage.Query.owner)\r\n\r\n    if (domainStorage.queryMap.has(queryStorage.key)) {\r\n      return\r\n    }\r\n\r\n    const subject = new Subject<U>()\r\n    const observable = subject.asObservable()\r\n\r\n    queryStorage.status = 'default'\r\n    queryStorage.subject = subject\r\n    queryStorage.observable = observable\r\n    domainStorage.queryMap.set(queryStorage.key, queryStorage)\r\n\r\n    for (const upstream of queryStorage.upstreamSet) {\r\n      upstream.downstreamSet.add(queryStorage)\r\n      if (upstream.type === 'RemeshQueryStorage') {\r\n        restoreQueryStorage(upstream)\r\n      } else if (upstream.type === 'RemeshEntityStorage') {\r\n        restoreEntityStorage(upstream)\r\n      } else if (upstream.type === 'RemeshStateStorage') {\r\n        restoreStateStorage(upstream)\r\n      } else {\r\n        throw new Error(`Unknown upstream: ${upstream}`)\r\n      }\r\n    }\r\n\r\n    updateQueryStorage(queryStorage)\r\n    inspectorManager.inspectQueryStorage(InspectorType.QueryReused, queryStorage)\r\n  }\r\n\r\n  const getQueryStorage = <T extends Args<Serializable>, U>(\r\n    queryAction: RemeshQueryAction<T, U>,\r\n  ): RemeshQueryStorage<T, U> => {\r\n    const domainStorage = getDomainStorage(queryAction.Query.owner)\r\n    const key = getQueryStorageKey(queryAction)\r\n    const queryStorage = domainStorage.queryMap.get(key)\r\n\r\n    if (queryStorage) {\r\n      return queryStorage\r\n    }\r\n\r\n    const cachedStorage = queryStorageWeakMap.get(queryAction)\r\n\r\n    if (cachedStorage) {\r\n      restoreQueryStorage(cachedStorage)\r\n      return cachedStorage\r\n    }\r\n\r\n    return createQueryStorage(queryAction)\r\n  }\r\n\r\n  const domainStorageWeakMap = new WeakMap<RemeshDomainAction<any, any>, RemeshDomainStorage<any, any>>()\r\n\r\n  const createDomainStorage = <T extends RemeshDomainDefinition, U extends Args<Serializable>>(\r\n    domainAction: RemeshDomainAction<T, U>,\r\n  ): RemeshDomainStorage<T, U> => {\r\n    const key = getDomainStorageKey(domainAction)\r\n\r\n    const upstreamSet: RemeshDomainStorage<T, U>['upstreamSet'] = new Set()\r\n\r\n    const domainContext: RemeshDomainContext = {\r\n      state: (options) => {\r\n        const State = RemeshState(options)\r\n        State.owner = domainAction\r\n        return State\r\n      },\r\n      entity: (options) => {\r\n        const Entity = RemeshEntity(options)\r\n        Entity.owner = domainAction\r\n        return Entity\r\n      },\r\n      query: (options) => {\r\n        const Query = RemeshQuery(options)\r\n        Query.owner = domainAction\r\n        return Query\r\n      },\r\n      event: (options: Omit<RemeshEventOptions<any, any>, 'impl'> | RemeshEventOptions<any, any>) => {\r\n        const Event = RemeshEvent(options)\r\n        Event.owner = domainAction\r\n        return Event as RemeshEvent<any, any>\r\n      },\r\n      command: (options) => {\r\n        const Command = RemeshCommand(options)\r\n        Command.owner = domainAction\r\n        return Command\r\n      },\r\n      effect: (effect) => {\r\n        if (!currentDomainStorage.ignited) {\r\n          currentDomainStorage.effectList.push(effect)\r\n        }\r\n      },\r\n      preload: (preloadOptions) => {\r\n        if (!currentDomainStorage.ignited) {\r\n          currentDomainStorage.preloadOptionsList.push(preloadOptions)\r\n        }\r\n      },\r\n      getDomain: (upstreamDomainAction) => {\r\n        const upstreamDomainStorage = getDomainStorage(upstreamDomainAction)\r\n\r\n        upstreamSet.add(upstreamDomainStorage)\r\n        upstreamDomainStorage.downstreamSet.add(currentDomainStorage)\r\n\r\n        if (currentDomainStorage.ignited) {\r\n          igniteDomain(upstreamDomainAction)\r\n        }\r\n\r\n        return upstreamDomainStorage.domain\r\n      },\r\n      getExtern: (Extern) => {\r\n        return getExternCurrentValue(Extern)\r\n      },\r\n    }\r\n\r\n    const currentDomainStorage: RemeshDomainStorage<T, U> = {\r\n      id: uid++,\r\n      type: 'RemeshDomainStorage',\r\n      Domain: domainAction.Domain,\r\n      get domain() {\r\n        return domain\r\n      },\r\n      arg: domainAction.arg,\r\n      domainContext,\r\n      domainAction,\r\n      key,\r\n      upstreamSet,\r\n      downstreamSet: new Set(),\r\n      effectList: [],\r\n      stateMap: new Map(),\r\n      entityMap: new Map(),\r\n      queryMap: new Map(),\r\n      eventMap: new Map(),\r\n      effectMap: new Map(),\r\n      commandMap: new Map(),\r\n      preloadOptionsList: [],\r\n      preloadedState: {},\r\n      ignited: false,\r\n      hasBeenPreloaded: false,\r\n      isDiscarding: false,\r\n    }\r\n\r\n    const domain = toValidRemeshDomainDefinition(domainAction.Domain.impl(domainContext, domainAction.arg))\r\n\r\n    domainStorageMap.set(key, currentDomainStorage)\r\n    domainStorageWeakMap.set(domainAction, currentDomainStorage)\r\n\r\n    inspectorManager.inspectDomainStorage(InspectorType.DomainCreated, currentDomainStorage)\r\n\r\n    injectPreloadState(currentDomainStorage)\r\n\r\n    return currentDomainStorage\r\n  }\r\n\r\n  const injectPreloadState = <T extends RemeshDomainDefinition, U extends Args<Serializable>>(\r\n    domainStorage: RemeshDomainStorage<T, U>,\r\n  ) => {\r\n    if (!options?.preloadedState) {\r\n      return\r\n    }\r\n\r\n    const preloadCommandContext = {\r\n      get: remeshInjectedContext.get,\r\n    }\r\n\r\n    for (const preloadOptions of domainStorage.preloadOptionsList) {\r\n      if (Object.prototype.hasOwnProperty.call(options.preloadedState, preloadOptions.key)) {\r\n        const data = options.preloadedState[preloadOptions.key]\r\n        handleCommandOutput(preloadOptions.command(preloadCommandContext, data))\r\n      }\r\n    }\r\n  }\r\n\r\n  const getDomainStorage = <T extends RemeshDomainDefinition, U extends Args<Serializable>>(\r\n    domainAction: RemeshDomainAction<T, U>,\r\n  ): RemeshDomainStorage<T, U> => {\r\n    const key = getDomainStorageKey(domainAction)\r\n    const domainStorage = domainStorageMap.get(key)\r\n\r\n    if (domainStorage) {\r\n      return domainStorage\r\n    }\r\n\r\n    const cachedStorage = domainStorageWeakMap.get(domainAction)\r\n\r\n    if (cachedStorage) {\r\n      cachedStorage.ignited = false\r\n      cachedStorage.isDiscarding = false\r\n      domainStorageMap.set(cachedStorage.key, cachedStorage)\r\n\r\n      for (const upstreamDomainStorage of cachedStorage.upstreamSet) {\r\n        upstreamDomainStorage.downstreamSet.add(cachedStorage)\r\n      }\r\n\r\n      inspectorManager.inspectDomainStorage(InspectorType.DomainReused, cachedStorage)\r\n      return cachedStorage\r\n    }\r\n\r\n    return createDomainStorage(domainAction)\r\n  }\r\n\r\n  const clearQueryStorage = <T extends Args<Serializable>, U>(queryStorage: RemeshQueryStorage<T, U>) => {\r\n    const domainStorage = getDomainStorage(queryStorage.Query.owner)\r\n\r\n    if (!domainStorage.queryMap.has(queryStorage.key)) {\r\n      return\r\n    }\r\n\r\n    domainStorage.queryMap.delete(queryStorage.key)\r\n    queryStorage.subject.complete()\r\n    inspectorManager.inspectQueryStorage(InspectorType.QueryDiscarded, queryStorage)\r\n\r\n    for (const upstreamStorage of queryStorage.upstreamSet) {\r\n      if (!upstreamStorage.downstreamSet.has(queryStorage)) {\r\n        continue\r\n      }\r\n      upstreamStorage.downstreamSet.delete(queryStorage)\r\n\r\n      if (upstreamStorage.type === 'RemeshQueryStorage') {\r\n        clearQueryStorageIfNeeded(upstreamStorage)\r\n      } else if (upstreamStorage.type === 'RemeshEntityStorage') {\r\n        clearEntityStorageIfNeeded(upstreamStorage)\r\n      } else {\r\n        clearStateStorageIfNeeded(upstreamStorage)\r\n      }\r\n    }\r\n\r\n    clearDomainStorageIfNeeded(domainStorage)\r\n  }\r\n\r\n  const shouldClearQueryStorage = <T extends Args<Serializable>, U>(\r\n    queryStorage: RemeshQueryStorage<T, U>,\r\n  ): boolean => {\r\n    if (queryStorage.refCount > 0) {\r\n      return false\r\n    }\r\n\r\n    if (queryStorage.downstreamSet.size !== 0) {\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  const clearQueryStorageIfNeeded = <T extends Args<Serializable>, U>(queryStorage: RemeshQueryStorage<T, U>) => {\r\n    if (shouldClearQueryStorage(queryStorage)) {\r\n      clearQueryStorage(queryStorage)\r\n    }\r\n  }\r\n\r\n  const clearStateStorage = <T>(stateStorage: RemeshStateStorage<T>) => {\r\n    const domainStorage = getDomainStorage(stateStorage.State.owner)\r\n\r\n    if (!domainStorage.stateMap.has(stateStorage.key)) {\r\n      return\r\n    }\r\n\r\n    domainStorage.stateMap.delete(stateStorage.key)\r\n    stateStorage.downstreamSet.clear()\r\n    inspectorManager.inspectStateStorage(InspectorType.StateDiscarded, stateStorage)\r\n  }\r\n\r\n  const shouldClearStateStorage = <T>(stateStorage: RemeshStateStorage<T>) => {\r\n    if (stateStorage.downstreamSet.size !== 0) {\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  const clearStateStorageIfNeeded = <T>(stateStorage: RemeshStateStorage<T>) => {\r\n    if (shouldClearStateStorage(stateStorage)) {\r\n      clearStateStorage(stateStorage)\r\n    }\r\n  }\r\n\r\n  const shouldClearEntityStorage = <T extends SerializableObject>(entityStorage: RemeshEntityStorage<T>) => {\r\n    if (entityStorage.downstreamSet.size !== 0) {\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  const clearEntityStorageIfNeeded = <T extends SerializableObject>(entityStorage: RemeshEntityStorage<T>) => {\r\n    if (shouldClearEntityStorage(entityStorage)) {\r\n      clearEntityStorage(entityStorage)\r\n    }\r\n  }\r\n\r\n  const clearEntityStorage = <T extends SerializableObject>(entityStorage: RemeshEntityStorage<T>) => {\r\n    const domainStorage = getDomainStorage(entityStorage.Entity.owner)\r\n\r\n    if (!domainStorage.entityMap.has(entityStorage.key)) {\r\n      return\r\n    }\r\n\r\n    domainStorage.entityMap.delete(entityStorage.key)\r\n\r\n    entityStorage.downstreamSet.clear()\r\n    entityStorage.currentEntity = null\r\n    inspectorManager.inspectEntityStorage(InspectorType.EntityDiscarded, entityStorage)\r\n  }\r\n\r\n  const clearEventStorage = <T extends Args, U>(eventStorage: RemeshEventStorage<T, U>) => {\r\n    const domainStorage = getDomainStorage(eventStorage.Event.owner)\r\n\r\n    eventStorage.subject.complete()\r\n    domainStorage.eventMap.delete(eventStorage.Event)\r\n\r\n    clearDomainStorageIfNeeded(domainStorage)\r\n  }\r\n\r\n  const shouldClearEventStorage = <T extends Args, U>(eventStorage: RemeshEventStorage<T, U>): boolean => {\r\n    if (eventStorage.refCount > 0) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  const clearEventStorageIfNeeded = <T extends Args, U>(eventStorage: RemeshEventStorage<T, U>) => {\r\n    if (shouldClearEventStorage(eventStorage)) {\r\n      clearEventStorage(eventStorage)\r\n    }\r\n  }\r\n\r\n  const clearDomainStorage = <T extends RemeshDomainDefinition, U extends Args<Serializable>>(\r\n    domainStorage: RemeshDomainStorage<T, U>,\r\n  ) => {\r\n    if (domainStorage.isDiscarding) {\r\n      return\r\n    }\r\n\r\n    domainStorage.isDiscarding = true\r\n    domainStorage.ignited = false\r\n\r\n    for (const subscription of domainStorage.effectMap.values()) {\r\n      subscription.unsubscribe()\r\n    }\r\n\r\n    for (const eventStorage of domainStorage.eventMap.values()) {\r\n      clearEventStorage(eventStorage)\r\n    }\r\n\r\n    for (const queryStorage of domainStorage.queryMap.values()) {\r\n      clearQueryStorage(queryStorage)\r\n    }\r\n\r\n    for (const stateStorage of domainStorage.stateMap.values()) {\r\n      clearStateStorage(stateStorage)\r\n    }\r\n\r\n    for (const entityStorage of domainStorage.entityMap.values()) {\r\n      clearEntityStorage(entityStorage)\r\n    }\r\n\r\n    domainStorage.downstreamSet.clear()\r\n    domainStorage.stateMap.clear()\r\n    domainStorage.queryMap.clear()\r\n    domainStorage.eventMap.clear()\r\n    domainStorage.effectMap.clear()\r\n\r\n    domainStorageMap.delete(domainStorage.key)\r\n\r\n    inspectorManager.inspectDomainStorage(InspectorType.DomainDiscarded, domainStorage)\r\n\r\n    for (const upstreamDomainStorage of domainStorage.upstreamSet) {\r\n      if (!upstreamDomainStorage.downstreamSet.has(domainStorage)) {\r\n        continue\r\n      }\r\n      upstreamDomainStorage.downstreamSet.delete(domainStorage)\r\n      clearDomainStorageIfNeeded(upstreamDomainStorage)\r\n    }\r\n  }\r\n\r\n  const shouldClearDomainStorage = <T extends RemeshDomainDefinition, U extends Args<Serializable>>(\r\n    domainStorage: RemeshDomainStorage<T, U>,\r\n  ): boolean => {\r\n    if (domainStorage.isDiscarding) {\r\n      return false\r\n    }\r\n\r\n    if (domainStorage.downstreamSet.size !== 0) {\r\n      return false\r\n    }\r\n\r\n    /**\r\n     * we only check the refCount of queryStorage and eventStorage\r\n     * when their refCount is 0, it means there is no consumers outside of the domain\r\n     * so the domain resources can be cleared\r\n     */\r\n    for (const queryStorage of domainStorage.queryMap.values()) {\r\n      if (queryStorage.refCount > 0) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    for (const eventStorage of domainStorage.eventMap.values()) {\r\n      if (eventStorage.refCount > 0) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  const clearDomainStorageIfNeeded = <T extends RemeshDomainDefinition, U extends Args<Serializable>>(\r\n    domainStorage: RemeshDomainStorage<T, U>,\r\n  ) => {\r\n    if (shouldClearDomainStorage(domainStorage)) {\r\n      clearDomainStorage(domainStorage)\r\n    }\r\n  }\r\n\r\n  const getCurrentState = <T>(stateItem: RemeshStateItem<T>): T => {\r\n    const stateStorage = getStateStorage(stateItem)\r\n\r\n    return stateStorage.currentState\r\n  }\r\n\r\n  const getCurrentQueryValue = <T extends Args<Serializable>, U>(queryAction: RemeshQueryAction<T, U>): U => {\r\n    const queryStorage = getQueryStorage(queryAction)\r\n\r\n    updateWipQueryStorage(queryStorage)\r\n\r\n    const currentValue = queryStorage.currentValue\r\n\r\n    return currentValue\r\n  }\r\n\r\n  const getCurrentEntity = <T extends SerializableObject>(entityItem: RemeshEntityItem<T>): T => {\r\n    const entityStorage = getEntityStorage(entityItem)\r\n\r\n    if (entityStorage.currentEntity === null) {\r\n      throw new Error(`The ${entityStorage.key} of ${entityItem.Entity.entityName} is not created yet.`)\r\n    }\r\n\r\n    return entityStorage.currentEntity\r\n  }\r\n\r\n  const remeshInjectedContext: RemeshInjectedContext = {\r\n    get: (input: RemeshStateItem<any> | RemeshEntityItem<any> | RemeshQueryAction<any, any>) => {\r\n      if (input.type === 'RemeshStateItem') {\r\n        return getCurrentState(input)\r\n      }\r\n\r\n      if (input.type === 'RemeshQueryAction') {\r\n        return getCurrentQueryValue(input)\r\n      }\r\n\r\n      if (input.type === 'RemeshEntityItem') {\r\n        return getCurrentEntity(input)\r\n      }\r\n\r\n      throw new Error(`Unexpected input in ctx.get(..): ${input}`)\r\n    },\r\n    fromEvent: (Event) => {\r\n      if (Event.type === 'RemeshEvent') {\r\n        const eventStorage = getEventStorage(Event)\r\n        return eventStorage.observable\r\n      } else if (Event.type === 'RemeshSubscribeOnlyEvent') {\r\n        const OriginalEvent = internalToOriginalEvent(Event)\r\n        const eventStorage = getEventStorage(OriginalEvent)\r\n        return eventStorage.observable\r\n      }\r\n\r\n      throw new Error(`Unexpected input in fromEvent(..): ${Event}`)\r\n    },\r\n    fromQuery: (queryAction) => {\r\n      const queryStorage = getQueryStorage(queryAction)\r\n      return queryStorage.observable\r\n    },\r\n  }\r\n\r\n  const updateWipQueryStorage = <T extends Args<Serializable>, U>(queryStorage: RemeshQueryStorage<T, U>) => {\r\n    if (queryStorage.status !== 'wip') {\r\n      return\r\n    }\r\n\r\n    if (queryStorage.wipUpstreamSet.size !== 0) {\r\n      let shouldUpdate = false\r\n\r\n      for (const upstream of queryStorage.wipUpstreamSet) {\r\n        if (upstream.type === 'RemeshStateStorage') {\r\n          shouldUpdate = true\r\n        } else if (upstream.type === 'RemeshEntityStorage') {\r\n          shouldUpdate = true\r\n        } else if (upstream.type === 'RemeshQueryStorage') {\r\n          if (upstream.status === 'wip') {\r\n            updateWipQueryStorage(upstream)\r\n          }\r\n          if (upstream.status === 'updated') {\r\n            shouldUpdate = true\r\n          }\r\n        } else {\r\n          throw new Error(`Unexpected upstream: ${upstream}`)\r\n        }\r\n      }\r\n\r\n      queryStorage.wipUpstreamSet.clear()\r\n\r\n      if (!shouldUpdate) {\r\n        queryStorage.status = 'default'\r\n        return\r\n      }\r\n    }\r\n\r\n    const isUpdated = updateQueryStorage(queryStorage)\r\n\r\n    if (isUpdated) {\r\n      queryStorage.status = 'updated'\r\n    } else {\r\n      queryStorage.status = 'default'\r\n    }\r\n  }\r\n\r\n  const updateQueryStorage = <T extends Args<Serializable>, U>(queryStorage: RemeshQueryStorage<T, U>) => {\r\n    const { Query } = queryStorage\r\n\r\n    for (const upstream of queryStorage.upstreamSet) {\r\n      if (!upstream.downstreamSet.has(queryStorage)) {\r\n        continue\r\n      }\r\n      upstream.downstreamSet.delete(queryStorage)\r\n      if (upstream.downstreamSet.size === 0) {\r\n        pendingClearSet.add(upstream)\r\n      }\r\n    }\r\n\r\n    const upstreamSet: RemeshQueryStorage<T, U>['upstreamSet'] = new Set()\r\n\r\n    queryStorage.upstreamSet = upstreamSet\r\n\r\n    const queryContext: RemeshQueryContext = {\r\n      get: (input: RemeshStateItem<any> | RemeshEntityItem<any> | RemeshQueryAction<any, any>) => {\r\n        if (queryStorage.upstreamSet !== upstreamSet) {\r\n          return remeshInjectedContext.get(input)\r\n        }\r\n\r\n        if (input.type === 'RemeshStateItem') {\r\n          const upstreamStateStorage = getStateStorage(input)\r\n\r\n          queryStorage.upstreamSet.add(upstreamStateStorage)\r\n          upstreamStateStorage.downstreamSet.add(queryStorage)\r\n\r\n          return remeshInjectedContext.get(input)\r\n        }\r\n\r\n        if (input.type === 'RemeshEntityItem') {\r\n          const upstreamEntityStorage = getEntityStorage(input)\r\n\r\n          queryStorage.upstreamSet.add(upstreamEntityStorage)\r\n          upstreamEntityStorage.downstreamSet.add(queryStorage)\r\n\r\n          return remeshInjectedContext.get(input)\r\n        }\r\n\r\n        if (input.type === 'RemeshQueryAction') {\r\n          const upstreamQueryStorage = getQueryStorage(input)\r\n\r\n          queryStorage.upstreamSet.add(upstreamQueryStorage)\r\n          upstreamQueryStorage.downstreamSet.add(queryStorage)\r\n\r\n          return remeshInjectedContext.get(input)\r\n        }\r\n\r\n        return remeshInjectedContext.get(input)\r\n      },\r\n    }\r\n\r\n    const newValue = Query.impl(queryContext, queryStorage.arg)\r\n\r\n    const isEqual = Query.compare(queryStorage.currentValue, newValue)\r\n\r\n    if (isEqual) {\r\n      return false\r\n    }\r\n\r\n    queryStorage.currentValue = newValue\r\n    pendingEmitSet.add(queryStorage)\r\n\r\n    inspectorManager.inspectQueryStorage(InspectorType.QueryUpdated, queryStorage)\r\n\r\n    return true\r\n  }\r\n\r\n  const clearPendingStorageSetIfNeeded = () => {\r\n    if (pendingClearSet.size === 0) {\r\n      return\r\n    }\r\n\r\n    const storageList = [...pendingClearSet]\r\n\r\n    pendingClearSet.clear()\r\n\r\n    for (const storage of storageList) {\r\n      if (storage.type === 'RemeshQueryStorage') {\r\n        clearQueryStorageIfNeeded(storage)\r\n      } else if (storage.type === 'RemeshStateStorage') {\r\n        clearStateStorageIfNeeded(storage)\r\n      } else {\r\n        clearEntityStorageIfNeeded(storage)\r\n      }\r\n    }\r\n\r\n    clearPendingStorageSetIfNeeded()\r\n  }\r\n\r\n  const clearPendingEmitSetIfNeeded = () => {\r\n    if (pendingEmitSet.size === 0) {\r\n      return\r\n    }\r\n\r\n    const list = [...pendingEmitSet]\r\n\r\n    pendingEmitSet.clear()\r\n\r\n    for (const item of list) {\r\n      if (!pendingEmitSet.has(item)) {\r\n        if (item.type === 'RemeshQueryStorage') {\r\n          item.subject.next(item.currentValue)\r\n        } else if (item.type === 'RemeshEventAction') {\r\n          emitEvent(item)\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * recursively consuming dynamic set until it become empty.\r\n     */\r\n    clearPendingEmitSetIfNeeded()\r\n  }\r\n\r\n  const mark = <T extends Args<Serializable>, U>(queryStorage: RemeshQueryStorage<T, U>) => {\r\n    queryStorage.status = 'wip'\r\n\r\n    if (queryStorage.downstreamSet.size > 0) {\r\n      for (const downstream of queryStorage.downstreamSet) {\r\n        if (!downstream.wipUpstreamSet.has(queryStorage)) {\r\n          downstream.wipUpstreamSet.add(queryStorage)\r\n          mark(downstream)\r\n        }\r\n      }\r\n    } else {\r\n      pendingLeafSet.add(queryStorage)\r\n    }\r\n  }\r\n\r\n  const clearPendingLeafSetIfNeeded = () => {\r\n    if (pendingLeafSet.size === 0) {\r\n      return\r\n    }\r\n\r\n    const queryStorageList = [...pendingLeafSet]\r\n\r\n    pendingLeafSet.clear()\r\n\r\n    for (const queryStorage of queryStorageList) {\r\n      updateWipQueryStorage(queryStorage)\r\n    }\r\n\r\n    /**\r\n     * recursively consuming dynamic set until it become empty.\r\n     */\r\n    clearPendingLeafSetIfNeeded()\r\n  }\r\n\r\n  const commit = () => {\r\n    clearPendingLeafSetIfNeeded()\r\n    clearPendingStorageSetIfNeeded()\r\n    clearPendingEmitSetIfNeeded()\r\n  }\r\n\r\n  const updateStateItem = <T>(stateItem: RemeshStateItem<T>, newState: T) => {\r\n    const stateStorage = getStateStorage(stateItem)\r\n\r\n    const isEqual = stateItem.State.compare(stateStorage.currentState, newState)\r\n\r\n    if (isEqual) {\r\n      return\r\n    }\r\n\r\n    stateStorage.currentState = newState\r\n\r\n    inspectorManager.inspectStateStorage(InspectorType.StateUpdated, stateStorage)\r\n\r\n    for (const downstream of stateStorage.downstreamSet) {\r\n      downstream.wipUpstreamSet.add(stateStorage)\r\n      mark(downstream)\r\n    }\r\n  }\r\n\r\n  const updateEntityItem = <T extends SerializableObject>(entityItem: RemeshEntityItem<T>, newEntity: T) => {\r\n    const entityStorage = getEntityStorage(entityItem)\r\n    const Entity = entityItem.Entity\r\n    const key = Entity.key(newEntity)\r\n\r\n    if (key !== entityItem.key) {\r\n      throw new Error(`Entity key mismatch: ${entityItem.key} !== ${key}`)\r\n    }\r\n\r\n    if (entityStorage.currentEntity === null) {\r\n      entityStorage.currentEntity = newEntity\r\n      return\r\n    }\r\n\r\n    const isEqual = entityItem.Entity.compare(entityStorage.currentEntity, newEntity)\r\n\r\n    if (isEqual) {\r\n      return\r\n    }\r\n\r\n    entityStorage.currentEntity = newEntity\r\n\r\n    inspectorManager.inspectEntityStorage(InspectorType.EntityUpdated, entityStorage)\r\n\r\n    for (const downstream of entityStorage.downstreamSet) {\r\n      downstream.wipUpstreamSet.add(entityStorage)\r\n      mark(downstream)\r\n    }\r\n  }\r\n\r\n  const emitEvent = <T extends Args, U>(eventAction: RemeshEventAction<T, U>) => {\r\n    const { Event, arg } = eventAction\r\n    const eventStorage = getEventStorage(Event)\r\n\r\n    inspectorManager.inspectEventEmitted(InspectorType.EventEmitted, eventAction)\r\n\r\n    eventStorage.subject.next(arg)\r\n  }\r\n\r\n  const commandContext: RemeshCommandContext = {\r\n    get: remeshInjectedContext.get,\r\n  }\r\n\r\n  const handleCommandAction = <T extends Args>(commandAction: RemeshCommandAction<T>) => {\r\n    inspectorManager.inspectCommandReceived(InspectorType.CommandReceived, commandAction)\r\n\r\n    const { Command, arg } = commandAction\r\n\r\n    const fn = Command.impl as (context: RemeshCommandContext, arg: T[0]) => RemeshCommandOutput\r\n\r\n    handleCommandOutput(fn(commandContext, arg))\r\n  }\r\n\r\n  const handleCommandOutput = (output: RemeshCommandOutput) => {\r\n    if (!output) {\r\n      return\r\n    }\r\n\r\n    if (Array.isArray(output)) {\r\n      for (const item of output) {\r\n        handleCommandOutput(item)\r\n      }\r\n    } else if (output.type === 'RemeshCommandAction') {\r\n      handleCommandAction(output)\r\n    } else if (output.type === 'RemeshStateItemUpdatePayload') {\r\n      updateStateItem(output.stateItem, output.value)\r\n    } else if (output.type === 'RemeshEntityItemUpdatePayload') {\r\n      updateEntityItem(output.entityItem, output.value)\r\n    } else if (output.type === 'RemeshEventAction') {\r\n      pendingEmitSet.add(output)\r\n    }\r\n  }\r\n\r\n  const subscribeQuery = <T extends Args<Serializable>, U>(\r\n    queryAction: RemeshQueryAction<T, U>,\r\n    subscriber: ((data: U) => unknown) | Partial<Observer<U>>,\r\n  ): Subscription => {\r\n    const queryStorage = getQueryStorage(queryAction)\r\n\r\n    const observable = new Observable<U>((subscriber) => {\r\n      const subscription = queryStorage.subject.subscribe(subscriber)\r\n      queryStorage.refCount += 1\r\n\r\n      return () => {\r\n        queryStorage.refCount -= 1\r\n        subscription.unsubscribe()\r\n        if (queryStorage.refCount === 0) {\r\n          clearQueryStorageIfNeeded(queryStorage)\r\n        }\r\n      }\r\n    })\r\n\r\n    if (typeof subscriber === 'function') {\r\n      return observable.subscribe(subscriber)\r\n    }\r\n\r\n    return observable.subscribe(subscriber)\r\n  }\r\n\r\n  const subscribeEvent = <T extends Args, U>(\r\n    Event: RemeshEvent<T, U> | RemeshSubscribeOnlyEvent<T, U>,\r\n    subscriber: (event: U) => unknown,\r\n  ): Subscription => {\r\n    if (Event.type === 'RemeshEvent') {\r\n      const eventStorage = getEventStorage(Event)\r\n\r\n      const observable = new Observable<U>((subscriber) => {\r\n        const subscription = eventStorage.observable.subscribe(subscriber)\r\n        eventStorage.refCount += 1\r\n        return () => {\r\n          eventStorage.refCount -= 1\r\n          subscription.unsubscribe()\r\n          if (eventStorage.refCount === 0) {\r\n            clearEventStorageIfNeeded(eventStorage)\r\n          }\r\n        }\r\n      })\r\n\r\n      const subscription = observable.subscribe(subscriber)\r\n\r\n      return subscription\r\n    } else if (Event.type === 'RemeshSubscribeOnlyEvent') {\r\n      const OriginalEvent = internalToOriginalEvent(Event)\r\n      return subscribeEvent(OriginalEvent, subscriber)\r\n    }\r\n\r\n    throw new Error(`Unknown event type of ${Event}`)\r\n  }\r\n\r\n  const getDomain = <T extends RemeshDomainDefinition, U extends Args<Serializable>>(\r\n    domainAction: RemeshDomainAction<T, U>,\r\n  ) => {\r\n    const domainStorage = getDomainStorage(domainAction)\r\n    return domainStorage.domain\r\n  }\r\n\r\n  const effectContext: RemeshEffectContext = {\r\n    get: remeshInjectedContext.get,\r\n    fromEvent: remeshInjectedContext.fromEvent,\r\n    fromQuery: remeshInjectedContext.fromQuery,\r\n  }\r\n\r\n  const handleEffectOutput = (output: RemeshAction) => {\r\n    handleCommandOutput(output)\r\n    commit()\r\n  }\r\n\r\n  const igniteDomain = <T extends RemeshDomainDefinition, U extends Args<Serializable>>(\r\n    domainAction: RemeshDomainAction<T, U>,\r\n  ) => {\r\n    const domainStorage = getDomainStorage(domainAction)\r\n\r\n    if (domainStorage.ignited) {\r\n      return\r\n    }\r\n\r\n    domainStorage.ignited = true\r\n\r\n    for (const upstreamDomainStorage of domainStorage.upstreamSet) {\r\n      igniteDomain(upstreamDomainStorage.domainAction)\r\n    }\r\n\r\n    for (const effect of domainStorage.effectList) {\r\n      const effectResult = effect.impl(effectContext)\r\n      if (effectResult === null) {\r\n        continue\r\n      }\r\n      const subscription = from(effectResult).subscribe(handleEffectOutput)\r\n      domainStorage.effectMap.set(effect, subscription)\r\n    }\r\n  }\r\n\r\n  const discardDomain = <T extends RemeshDomainDefinition, U extends Args<Serializable>>(\r\n    domainAction: RemeshDomainAction<T, U>,\r\n  ) => {\r\n    const domainStorage = getDomainStorage(domainAction)\r\n\r\n    clearDomainStorage(domainStorage)\r\n  }\r\n\r\n  const discard = () => {\r\n    inspectorManager.destroyInspectors()\r\n\r\n    for (const domainStorage of domainStorageMap.values()) {\r\n      clearDomainStorage(domainStorage)\r\n    }\r\n    domainStorageMap.clear()\r\n    pendingEmitSet.clear()\r\n  }\r\n\r\n  const preload = <T extends RemeshDomainDefinition, U extends Args<Serializable>>(\r\n    domainAction: RemeshDomainAction<T, U>,\r\n  ) => {\r\n    const domainStorage = getDomainStorage(domainAction)\r\n\r\n    if (domainStorage.ignited) {\r\n      throw new Error(`Domain ${domainAction.Domain.domainName} was ignited before preloading`)\r\n    }\r\n\r\n    if (domainStorage.preloadedPromise) {\r\n      return domainStorage.preloadedPromise\r\n    }\r\n\r\n    const preloadedPromise = preloadDomain(domainAction)\r\n\r\n    domainStorage.preloadedPromise = preloadedPromise\r\n\r\n    return preloadedPromise\r\n  }\r\n\r\n  const domainPreloadCommandContext: RemeshDomainPreloadCommandContext = {\r\n    get: remeshInjectedContext.get,\r\n  }\r\n\r\n  const domainPreloadQueryContext: RemeshDomainPreloadQueryContext = {\r\n    get: remeshInjectedContext.get,\r\n  }\r\n\r\n  const preloadDomain = async <T extends RemeshDomainDefinition, U extends Args<Serializable>>(\r\n    domainAction: RemeshDomainAction<T, U>,\r\n  ) => {\r\n    const domainStorage = getDomainStorage(domainAction)\r\n\r\n    if (domainStorage.hasBeenPreloaded) {\r\n      return\r\n    }\r\n\r\n    domainStorage.hasBeenPreloaded = true\r\n\r\n    await Promise.all(\r\n      Array.from(domainStorage.upstreamSet).map((upstreamDomainStorage) => {\r\n        return preload(upstreamDomainStorage.domainAction)\r\n      }),\r\n    )\r\n\r\n    await Promise.all(\r\n      domainStorage.preloadOptionsList.map(async (preloadOptions) => {\r\n        const data = await preloadOptions.query(domainPreloadQueryContext)\r\n\r\n        if (Object.prototype.hasOwnProperty.call(domainStorage.preloadedState, preloadOptions.key)) {\r\n          throw new Error(`Duplicate key ${preloadOptions.key}`)\r\n        }\r\n\r\n        domainStorage.preloadedState[preloadOptions.key] = data\r\n\r\n        const commandOutput = preloadOptions.command(domainPreloadCommandContext, data)\r\n        handleCommandOutput(commandOutput)\r\n      }),\r\n    )\r\n  }\r\n\r\n  const getPreloadedState = () => {\r\n    const preloadedState = {} as PreloadedState\r\n\r\n    for (const domainStorage of domainStorageMap.values()) {\r\n      Object.assign(preloadedState, domainStorage.preloadedState)\r\n    }\r\n\r\n    return preloadedState\r\n  }\r\n\r\n  const getDomainPreloadedState = <T extends RemeshDomainDefinition, U extends Args<Serializable>>(\r\n    domainAction: RemeshDomainAction<T, U>,\r\n  ): PreloadedState => {\r\n    const domainStorage = getDomainStorage(domainAction)\r\n\r\n    return domainStorage.preloadedState\r\n  }\r\n\r\n  const send = (output: RemeshAction) => {\r\n    handleCommandOutput(output)\r\n    commit()\r\n  }\r\n\r\n  return {\r\n    name: config.name,\r\n    getDomain,\r\n    igniteDomain,\r\n    discardDomain,\r\n    query: getCurrentQueryValue,\r\n    send,\r\n    discard,\r\n    preload,\r\n    getPreloadedState,\r\n    getDomainPreloadedState,\r\n    subscribeQuery,\r\n    subscribeEvent,\r\n    getKey: getStorageKey,\r\n  }\r\n}\r\n","import {\r\n  RemeshDomain,\r\n  RemeshExtern,\r\n  RemeshState,\r\n  RemeshEntity,\r\n  RemeshQuery,\r\n  RemeshEvent,\r\n  RemeshCommand,\r\n  RemeshModule,\r\n} from './remesh'\r\n\r\nimport { RemeshStore } from './store'\r\n\r\nexport * from './remesh'\r\nexport * from './store'\r\nexport * from './inspector'\r\nexport * from './type'\r\n\r\nexport const Remesh = {\r\n  domain: RemeshDomain,\r\n  extern: RemeshExtern,\r\n  store: RemeshStore,\r\n  state: RemeshState,\r\n  entity: RemeshEntity,\r\n  query: RemeshQuery,\r\n  command: RemeshCommand,\r\n  event: RemeshEvent,\r\n  module: RemeshModule,\r\n}\r\n","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","import { useEffect, useRef, useContext, createContext, ReactNode, useCallback, useMemo } from 'react'\r\n\r\nimport { useSyncExternalStore } from 'use-sync-external-store/shim'\r\n\r\nimport {\r\n  RemeshDomainDefinition,\r\n  RemeshQueryAction,\r\n  RemeshEvent,\r\n  RemeshDomainAction,\r\n  RemeshStore,\r\n  Serializable,\r\n  RemeshStoreOptions,\r\n  Args,\r\n  RemeshSubscribeOnlyEvent,\r\n} from 'remesh'\r\n\r\nexport type RemeshReactContext = {\r\n  remeshStore: RemeshStore\r\n}\r\n\r\nexport const RemeshReactContext = createContext<RemeshReactContext | null>(null)\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  RemeshReactContext.displayName = 'Remesh'\r\n}\r\n\r\nexport const useRemeshReactContext = () => {\r\n  const context = useContext(RemeshReactContext)\r\n\r\n  if (context === null) {\r\n    throw new Error(`You may forget to add <RemeshRoot />`)\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nexport const useRemeshStore = (): RemeshStore => {\r\n  const context = useRemeshReactContext()\r\n  return context.remeshStore\r\n}\r\n\r\nexport type RemeshRootProps =\r\n  | {\r\n      children: ReactNode\r\n      store?: RemeshStore\r\n    }\r\n  | {\r\n      children: ReactNode\r\n      store?: never\r\n      options: RemeshStoreOptions\r\n    }\r\n\r\nexport const RemeshRoot = (props: RemeshRootProps) => {\r\n  const storeRef = useRef<RemeshStore | undefined>(props.store)\r\n\r\n  if (!storeRef.current) {\r\n    storeRef.current = RemeshStore('options' in props ? props.options : {})\r\n  }\r\n\r\n  const store = storeRef.current\r\n\r\n  const contextValue: RemeshReactContext = useMemo(() => {\r\n    return {\r\n      remeshStore: store,\r\n    }\r\n  }, [store])\r\n\r\n  // @ts-ignore unexpected type error TS2786: 'RemeshReactContext.Provider' cannot be used as a JSX component.\r\n  return <RemeshReactContext.Provider value={contextValue}>{props.children}</RemeshReactContext.Provider>\r\n}\r\n\r\nexport const useRemeshQuery = function <T extends Args<Serializable>, U>(queryAction: RemeshQueryAction<T, U>): U {\r\n  const store = useRemeshStore()\r\n\r\n  const triggerRef = useRef<(() => void) | null>(null)\r\n\r\n  const subscribe = useCallback((triggerUpdate: () => void) => {\r\n    triggerRef.current = triggerUpdate\r\n    return () => {\r\n      triggerRef.current = null\r\n    }\r\n  }, [])\r\n\r\n  const getSnapshot = useCallback(() => {\r\n    const snapshot = store.query(queryAction)\r\n    return snapshot\r\n  }, [store, queryAction])\r\n\r\n  const state = useSyncExternalStore(subscribe, getSnapshot, getSnapshot)\r\n\r\n  const subscriptionRef = useRef<{ unsubscribe: () => void } | null>(null)\r\n\r\n  const queryKey = store.getKey(queryAction)\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      subscriptionRef.current?.unsubscribe()\r\n      subscriptionRef.current = null\r\n    }\r\n  }, [store, queryKey])\r\n\r\n  useEffect(() => {\r\n    if (subscriptionRef.current !== null) {\r\n      return\r\n    }\r\n    subscriptionRef.current = store.subscribeQuery(queryAction, () => {\r\n      triggerRef.current?.()\r\n    })\r\n  }, [store, queryAction])\r\n\r\n  return state\r\n}\r\n\r\nexport const useRemeshEvent = function <T extends Args, U>(\r\n  Event: RemeshEvent<T, U> | RemeshSubscribeOnlyEvent<T, U>,\r\n  callback: (data: U) => unknown,\r\n) {\r\n  const store = useRemeshStore()\r\n  const callbackRef = useRef(callback)\r\n\r\n  useEffect(() => {\r\n    callbackRef.current = callback\r\n  })\r\n\r\n  useEffect(() => {\r\n    const subscription = store.subscribeEvent(Event, (data) => {\r\n      callbackRef.current(data)\r\n    })\r\n    return () => {\r\n      subscription.unsubscribe()\r\n    }\r\n  }, [Event, store])\r\n}\r\n\r\nexport const useRemeshSend = function () {\r\n  const store = useRemeshStore()\r\n\r\n  return store.send\r\n}\r\n\r\nexport const useRemeshDomain = function <T extends RemeshDomainDefinition, U extends Args<Serializable>>(\r\n  domainAction: RemeshDomainAction<T, U>,\r\n) {\r\n  const store = useRemeshStore()\r\n  const domain = store.getDomain(domainAction)\r\n\r\n  useEffect(() => {\r\n    store.igniteDomain(domainAction)\r\n  }, [store, domainAction])\r\n\r\n  return domain\r\n}\r\n"],"names":["shallowequal","objA","objB","compare","compareContext","ret","keysA","keysB","bHasOwnProperty","idx","key","valueA","valueB","isObject","o","isPlainObject","ctor","prot","eventUid","RemeshEvent","options","eventId","Event","arg","DefaultDomain","_a","toRemeshSubscribeOnlyEvent","eventToSubscribeOnlyEventWeakMap","subscribeOnlyEventToEventWeakMap","event","subscribeOnlyEvent","newSubscribeOnlyEvent","internalToOriginalEvent","stateUid","defaultCompare","prev","curr","shallowEqual","RemeshState","stateId","cacheForNullary","State","stateItem","newState","_b","entityUid","RemeshEntity","entityId","Entity","entityItem","newEntity","queryUid","RemeshQuery","queryId","Query","action","commandUid","RemeshCommand","commandId","Command","externUid","RemeshExtern","Extern","value","toValidRemeshDomainDefinition","domainDefinition","result","eventRecord","RemeshModule","module","domainUid","RemeshDomain","Domain","extendStatics","d","b","p","__extends","__","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","reject","fulfilled","step","e","rejected","__generator","body","_","t","f","y","g","verb","n","op","__values","s","m","i","__read","r","ar","error","__spreadArray","to","from","pack","l","__await","v","__asyncGenerator","q","a","resume","settle","fulfill","__asyncValues","isFunction","createErrorClass","createImpl","_super","instance","ctorFunc","UnsubscriptionError","errors","err","arrRemove","arr","item","index","Subscription","initialTeardown","e_1","e_2","_parentage","_parentage_1","_parentage_1_1","parent_1","e_1_1","initialFinalizer","_finalizers","_finalizers_1","_finalizers_1_1","finalizer","execFinalizer","e_2_1","teardown","parent","empty","EMPTY_SUBSCRIPTION","isSubscription","config","timeoutProvider","handler","timeout","args","_i","delegate","handle","reportUnhandledError","onUnhandledError","noop","context","errorContext","cb","isRoot","errorThrown","Subscriber","destination","_this","EMPTY_OBSERVER","next","complete","SafeSubscriber","_bind","bind","fn","ConsumerObserver","partialObserver","handleUnhandledError","observerOrNext","context_1","defaultErrorHandler","observable","identity","x","pipeFromArray","fns","input","Observable","subscribe","operator","subscriber","isSubscriber","source","sink","promiseCtor","getPromiseCtor","Symbol_observable","operations","isObserver","hasLift","operate","init","liftedSource","createOperatorSubscriber","onNext","onComplete","onError","onFinalize","OperatorSubscriber","shouldUnsubscribe","closed_1","ObjectUnsubscribedError","Subject","subject","AnonymousSubject","_c","observer","observers","hasError","isStopped","thrownError","isArrayLike","isPromise","isInteropObservable","isAsyncIterable","obj","createInvalidObservableTypeError","getSymbolIterator","iterator","isIterable","Symbol_iterator","readableStreamLikeToAsyncGenerator","readableStream","reader","done","isReadableStreamLike","innerFrom","fromInteropObservable","fromArrayLike","fromPromise","fromAsyncIterable","fromIterable","fromReadableStreamLike","obs","array","promise","iterable","iterable_1","iterable_1_1","asyncIterable","process","asyncIterable_1","asyncIterable_1_1","executeSchedule","parentSubscription","scheduler","work","delay","repeat","scheduleSubscription","observeOn","subscribeOn","scheduleObservable","schedulePromise","scheduleArray","scheduleIterable","scheduleAsyncIterable","scheduleReadableStreamLike","scheduled","map","project","InspectorType","RemeshInspectorDomain","domain","RemeshDomainStorageEvent","RemeshDomainStorageCommand","RemeshStateStorageEvent","RemeshStateStorageCommand","RemeshQueryStorageEvent","RemeshQueryStorageCommand","RemeshEventEmittedEvent","RemeshEventEmittedCommand","RemeshCommandReceivedEvent","RemeshCommandReceivedCommand","RemeshEntityStorageEvent","RemeshEntityStorageCommand","isInspectable","initInspectors","inspector","inspectors","rest","createInspectorManager","getInspectors","type","domainStorage","inspectorDomain","stateStorage","queryStorage","entityStorage","eventAction","commandAction","uid","RemeshStore","inspectorManager","pendingEmitSet","pendingLeafSet","pendingClearSet","domainStorageMap","externStorageWeakMap","getExternValue","externImpl","getExternStorage","externStorage","currentValue","currentExternStorage","getExternCurrentValue","storageKeyWeakMap","getStateStorageKey","stateName","keyString","getQueryStorageKey","queryAction","queryName","argString","getDomainStorageKey","domainAction","domainName","getEntityStorageKey","entityName","getStorageKey","stateStorageWeakMap","getStateValue","createStateStorage","getDomainStorage","currentState","restoreStateStorage","getStateStorage","cachedStorage","entityStorageWeakMap","hasBeenInjectedWeakMap","injectEntitiesIfNeeded","entity","updateEntityItem","createEntityStorage","newEntityStorage","restoreEntityStorage","getEntityStorage","eventStorageWeakMap","createEventStorage","eventContext","remeshInjectedContext","eventStorage","getEventStorage","queryStorageWeakMap","createQueryStorage","upstreamSet","currentQueryStorage","queryContext","upstreamStateStorage","upstreamEntityStorage","upstreamQueryStorage","getQueryStorage","restoreQueryStorage","upstream","updateQueryStorage","domainStorageWeakMap","createDomainStorage","domainContext","effect","currentDomainStorage","preloadOptions","upstreamDomainAction","upstreamDomainStorage","igniteDomain","injectPreloadState","preloadCommandContext","data","handleCommandOutput","clearQueryStorage","upstreamStorage","clearQueryStorageIfNeeded","clearEntityStorageIfNeeded","clearStateStorageIfNeeded","clearDomainStorageIfNeeded","shouldClearQueryStorage","clearStateStorage","shouldClearStateStorage","shouldClearEntityStorage","clearEntityStorage","clearEventStorage","shouldClearEventStorage","clearEventStorageIfNeeded","clearDomainStorage","subscription","shouldClearDomainStorage","getCurrentState","getCurrentQueryValue","updateWipQueryStorage","getCurrentEntity","OriginalEvent","shouldUpdate","newValue","clearPendingStorageSetIfNeeded","storageList","storage","clearPendingEmitSetIfNeeded","list","emitEvent","mark","downstream","clearPendingLeafSetIfNeeded","queryStorageList","commit","updateStateItem","commandContext","handleCommandAction","output","subscribeQuery","subscribeEvent","getDomain","effectContext","handleEffectOutput","effectResult","discardDomain","discard","preload","preloadedPromise","preloadDomain","domainPreloadCommandContext","domainPreloadQueryContext","commandOutput","getPreloadedState","preloadedState","getDomainPreloadedState","send","Remesh","require$$0","h","k","c","u","useSyncExternalStoreShim_production_min","shimModule","RemeshReactContext","createContext","useRemeshReactContext","useContext","Error","useRemeshStore","remeshStore","RemeshRoot","props","storeRef","useRef","store","current","contextValue","useMemo","_jsx","children","useRemeshQuery","triggerRef","useCallback","triggerUpdate","getSnapshot","query","state","useSyncExternalStore","subscriptionRef","queryKey","getKey","useEffect","unsubscribe","useRemeshEvent","callback","callbackRef","useRemeshSend","useRemeshDomain"],"mappings":"0DAEAA,GAAiB,SAAsBC,EAAMC,EAAMC,EAASC,EAAgB,CAC1E,IAAIC,EAAMF,EAAUA,EAAQ,KAAKC,EAAgBH,EAAMC,CAAI,EAAI,OAE/D,GAAIG,IAAQ,OACV,MAAO,CAAC,CAACA,EAGX,GAAIJ,IAASC,EACX,MAAO,GAGT,GAAI,OAAOD,GAAS,UAAY,CAACA,GAAQ,OAAOC,GAAS,UAAY,CAACA,EACpE,MAAO,GAGT,IAAII,EAAQ,OAAO,KAAKL,CAAI,EACxBM,EAAQ,OAAO,KAAKL,CAAI,EAE5B,GAAII,EAAM,SAAWC,EAAM,OACzB,MAAO,GAMT,QAHIC,EAAkB,OAAO,UAAU,eAAe,KAAKN,CAAI,EAGtDO,EAAM,EAAGA,EAAMH,EAAM,OAAQG,IAAO,CAC3C,IAAIC,EAAMJ,EAAMG,GAEhB,GAAI,CAACD,EAAgBE,CAAG,EACtB,MAAO,GAGT,IAAIC,EAASV,EAAKS,GACdE,EAASV,EAAKQ,GAIlB,GAFAL,EAAMF,EAAUA,EAAQ,KAAKC,EAAgBO,EAAQC,EAAQF,CAAG,EAAI,OAEhEL,IAAQ,IAAUA,IAAQ,QAAUM,IAAWC,EACjD,MAAO,EAEV,CAED,MAAO,EACT,EC7CA;AAAA;AAAA;AAAA;AAAA;AAAA,GAOA,SAASC,GAASC,EAAG,CACnB,OAAO,OAAO,UAAU,SAAS,KAAKA,CAAC,IAAM,iBAC/C,CAEA,SAASC,GAAcD,EAAG,CACxB,IAAIE,EAAKC,EAET,OAAIJ,GAASC,CAAC,IAAM,GAAc,IAGlCE,EAAOF,EAAE,YACLE,IAAS,OAAkB,IAG/BC,EAAOD,EAAK,UACR,EAAAH,GAASI,CAAI,IAAM,IAGnBA,EAAK,eAAe,eAAe,IAAM,KAM/C,CC0BA,IAAIC,GAAW,EAIR,SAASC,GACdC,EACmB,OACnB,MAAMC,EAAUH,KAEVI,EAAUC,IACP,CACL,KAAM,oBACN,IAAAA,EACA,MAAAD,CAAA,GAIJ,OAAAA,EAAM,KAAO,cACbA,EAAM,QAAUD,EAChBC,EAAM,UAAYF,EAAQ,KAC1BE,EAAM,MAAQE,IACdF,EAAM,YAAc,gBAAiBF,IAAUK,EAAAL,EAAQ,cAAR,KAAAK,EAA8B,GAC7EH,EAAM,qBAAuB,IACpBI,GAA2BJ,CAAK,EAGrC,SAAUF,IACZE,EAAM,KAAOF,EAAQ,MAGhBE,CACT,CAkBA,MAAMK,OAAuC,QACvCC,OAAuC,QAEhCF,GAAoCG,GAA+D,CACxG,MAAAC,EAAqBH,GAAiC,IAAIE,CAAK,EAErE,GAAIC,EACK,OAAAA,EAGT,MAAMC,EAAwB,CAC5B,KAAM,2BACN,QAASF,EAAM,QACf,UAAWA,EAAM,SAAA,EAGc,OAAAF,GAAA,IAAIE,EAAOE,CAAqB,EAEhCH,GAAA,IAAIG,EAAuBF,CAAK,EAE1DE,CACT,EAEaC,GACXF,GACsB,CAChB,MAAAD,EAAQD,GAAiC,IAAIE,CAAkB,EAErE,GAAID,EACK,OAAAA,EAGT,MAAM,IAAI,MAAM,sBAAsBC,EAAmB,6CAA6C,CACxG,EAoCA,IAAIG,GAAW,EAEF,MAAAC,GAAiB,CAAIC,EAASC,IACrCrB,GAAcoB,CAAI,GAAKpB,GAAcqB,CAAI,GAIzC,MAAM,QAAQD,CAAI,GAAK,MAAM,QAAQC,CAAI,EACpCC,GAAaF,EAAMC,CAAI,EAGzBD,IAASC,EAGLE,GAAkBlB,GAAmD,SAChF,MAAMmB,EAAUN,KAIhB,IAAIO,EAAkB,KAEhB,MAAAC,EAAU/B,GAAQ,CAClB,GAAAA,IAAQ,QAAa8B,EAChB,OAAAA,EAGT,MAAME,EAAuB,CAC3B,KAAM,kBACN,IAAAhC,EACA,MAAA+B,EACA,IAAME,IACG,CACL,KAAM,+BACN,IAAAjC,EACA,MAAOiC,EACP,UAAAD,CAAA,EAEJ,EAGF,OAAIhC,IAAQ,SACQ8B,EAAAE,GAGbA,CAAA,EAGT,OAAAD,EAAM,KAAO,cACbA,EAAM,QAAUF,EAChBE,EAAM,UAAYrB,EAAQ,KAC1BqB,EAAM,QAAUrB,EAAQ,QAClBqB,EAAA,SAAUhB,EAAAL,EAAQ,UAAR,KAAAK,EAAmBS,GACnCO,EAAM,MAAQjB,IACRiB,EAAA,aAAcG,EAAAxB,EAAQ,cAAR,KAAAwB,EAAuB,GAEpCH,CACT,EAmCA,IAAII,GAAY,EAEH,MAAAC,GAA8C1B,GAAqD,SAC9G,MAAM2B,EAAWF,KAIjB,IAAIL,EAAkB,KAEhB,MAAAQ,EAAWtC,GAAQ,CACnB,GAAAA,IAAQ,QAAa8B,EAChB,OAAAA,EAGT,MAAMS,EAAyB,CAC7B,KAAM,mBACN,IAAK,GAAGvC,IACR,OAAAsC,EACA,IAAME,IACG,CACL,KAAM,gCACN,IAAAxC,EACA,MAAOwC,EACP,WAAAD,CAAA,EAEJ,EAGF,OAAIvC,IAAQ,SACQ8B,EAAAS,GAGbA,CAAA,EAGT,OAAAD,EAAO,KAAO,eACdA,EAAO,SAAWD,EAClBC,EAAO,WAAa5B,EAAQ,KAC5B4B,EAAO,IAAM5B,EAAQ,IACrB4B,EAAO,eAAiB5B,EAAQ,eAChC4B,EAAO,MAAQxB,IACRwB,EAAA,aAAcvB,EAAAL,EAAQ,cAAR,KAAAK,EAAuB,GACrCuB,EAAA,SAAUJ,EAAAxB,EAAQ,UAAR,KAAAwB,EAAmBV,GAE7Bc,CACT,EA8BA,IAAIG,GAAW,EACF,MAAAC,GAAgDhC,GAAyD,SACpH,MAAMiC,EAAUF,KAKhB,IAAIX,EAAkD,KAEhD,MAAAc,EAAU/B,GAAc,CACxB,GAAAA,IAAQ,QAAaiB,EAChB,OAAAA,EAGT,MAAMe,EAAkC,CACtC,KAAM,oBACN,MAAAD,EACA,IAAA/B,CAAA,EAGF,OAAIA,IAAQ,SACQiB,EAAAe,GAGbA,CAAA,EAGT,OAAAD,EAAM,KAAO,cACbA,EAAM,QAAUD,EAChBC,EAAM,UAAYlC,EAAQ,KAC1BkC,EAAM,KAAOlC,EAAQ,KACfkC,EAAA,SAAU7B,EAAAL,EAAQ,UAAR,KAAAK,EAAmBS,GACnCoB,EAAM,MAAQ9B,IACR8B,EAAA,aAAcV,EAAAxB,EAAQ,cAAR,KAAAwB,EAAuB,GAEpCU,CACT,EAoCA,IAAIE,GAAa,EAEJ,MAAAC,GAAsCrC,GAAuD,OACxG,MAAMsC,EAAYF,KAEZG,EAAYpC,IACT,CACL,KAAM,sBACN,IAAAA,EACA,QAAAoC,CAAA,GAIJ,OAAAA,EAAQ,KAAO,gBACfA,EAAQ,UAAYD,EACpBC,EAAQ,YAAcvC,EAAQ,KAC9BuC,EAAQ,KAAOvC,EAAQ,KACvBuC,EAAQ,MAAQnC,IACRmC,EAAA,aAAclC,EAAAL,EAAQ,cAAR,KAAAK,EAAuB,GAEtCkC,CACT,EAmBA,IAAIC,GAAY,EACH,MAAAC,GAAmBzC,GAAqD,CACnF,MAAM0C,EAA0B,CAC9B,KAAM,eACN,SAAUF,KACV,QAASxC,EAAQ,QACjB,KAAO2C,IACE,CACL,KAAM,mBACN,OAAAD,EACA,MAAAC,CAAA,EAEJ,EAGK,OAAAD,CACT,EA8FaE,GACXC,GACsC,CACtC,MAAMC,EAAS,CAAA,EAEf,GAAID,EAAiB,MAAO,CAC1B,MAAME,EAAc,CAAA,EAET,UAAAzD,KAAOuD,EAAiB,MAAO,CAClC,MAAApC,EAAQoC,EAAiB,MAAMvD,GACjCmB,EAAM,OAAS,2BACjBsC,EAAYzD,GAAOmB,EAEPsC,EAAAzD,GAAOgB,GAA2BG,CAAK,CAEvD,CAEAqC,EAAO,MAAQC,CACjB,CAEA,OAAIF,EAAiB,QACnBC,EAAO,MAAQD,EAAiB,OAG9BA,EAAiB,UACnBC,EAAO,QAAUD,EAAiB,SAG7BC,CACT,EAEaE,GACXC,GAIOL,GAA8BK,CAAM,EAwB7C,IAAIC,GAAY,EACH,MAAAC,GACXnD,GACuB,OAIvB,IAAIoB,EAAmD,KAEjD,MAAAgC,EAA+BjD,GAAc,CAC7C,GAAAA,IAAQ,QAAaiB,EAChB,OAAAA,EAGT,MAAM0B,EAAmC,CACvC,KAAM,qBACN,OAAAM,EACA,IAAAjD,CAAA,EAGF,OAAIA,IAAQ,SACQiB,EAAA0B,GAGbA,CAAA,EAGT,OAAAM,EAAO,KAAO,eACdA,EAAO,SAAWF,KAClBE,EAAO,WAAapD,EAAQ,KAC5BoD,EAAO,KAAOpD,EAAQ,KACfoD,EAAA,aAAc/C,EAAAL,EAAQ,cAAR,KAAAK,EAAuB,GAErC+C,CACT,EAEahD,EAAsC+C,GAAa,CAC9D,KAAM,gBACN,KAAM,KACG,GAEX,CAAC,ECxoBD,IAAIE,GAAgB,SAASC,EAAGC,EAAG,CAC/B,OAAAF,GAAgB,OAAO,gBAClB,CAAE,UAAW,CAAA,aAAgB,OAAS,SAAUC,EAAGC,EAAG,CAAED,EAAE,UAAYC,CAAE,GACzE,SAAUD,EAAGC,EAAG,CAAE,QAASC,KAAKD,EAAO,OAAO,UAAU,eAAe,KAAKA,EAAGC,CAAC,IAAGF,EAAEE,GAAKD,EAAEC,KACzFH,GAAcC,EAAGC,CAAC,CAC7B,EAEO,SAASE,EAAUH,EAAGC,EAAG,CAC5B,GAAI,OAAOA,GAAM,YAAcA,IAAM,KACjC,MAAM,IAAI,UAAU,uBAAyB,OAAOA,CAAC,EAAI,+BAA+B,EAC5FF,GAAcC,EAAGC,CAAC,EAClB,SAASG,GAAK,CAAE,KAAK,YAAcJ,CAAI,CACvCA,EAAE,UAAYC,IAAM,KAAO,OAAO,OAAOA,CAAC,GAAKG,EAAG,UAAYH,EAAE,UAAW,IAAIG,EACnF,CAwCO,SAASC,GAAUC,EAASC,EAAYC,EAAGC,EAAW,CACzD,SAASC,EAAMrB,EAAO,CAAE,OAAOA,aAAiBmB,EAAInB,EAAQ,IAAImB,EAAE,SAAUG,EAAS,CAAEA,EAAQtB,CAAK,CAAE,CAAE,CAAI,CAC5G,OAAO,IAAKmB,IAAMA,EAAI,UAAU,SAAUG,EAASC,EAAQ,CACvD,SAASC,EAAUxB,EAAO,CAAE,GAAI,CAAEyB,EAAKL,EAAU,KAAKpB,CAAK,CAAC,CAAE,OAAU0B,EAAP,CAAYH,EAAOG,CAAC,EAAM,CAC3F,SAASC,EAAS3B,EAAO,CAAE,GAAI,CAAEyB,EAAKL,EAAU,MAASpB,CAAK,CAAC,CAAI,OAAQ0B,EAAP,CAAYH,EAAOG,CAAC,EAAM,CAC9F,SAASD,EAAKtB,EAAQ,CAAEA,EAAO,KAAOmB,EAAQnB,EAAO,KAAK,EAAIkB,EAAMlB,EAAO,KAAK,EAAE,KAAKqB,EAAWG,CAAQ,CAAI,CAC9GF,GAAML,EAAYA,EAAU,MAAMH,EAASC,GAAc,CAAE,CAAA,GAAG,KAAI,CAAE,CAC5E,CAAK,CACL,CAEO,SAASU,GAAYX,EAASY,EAAM,CACvC,IAAIC,EAAI,CAAE,MAAO,EAAG,KAAM,UAAW,CAAE,GAAIC,EAAE,GAAK,EAAG,MAAMA,EAAE,GAAI,OAAOA,EAAE,EAAK,EAAE,KAAM,CAAE,EAAE,IAAK,CAAA,CAAI,EAAEC,EAAGC,EAAGF,EAAGG,EAC/G,OAAOA,EAAI,CAAE,KAAMC,EAAK,CAAC,EAAG,MAASA,EAAK,CAAC,EAAG,OAAUA,EAAK,CAAC,CAAG,EAAE,OAAO,QAAW,aAAeD,EAAE,OAAO,UAAY,UAAW,CAAE,OAAO,IAAO,GAAGA,EACvJ,SAASC,EAAKC,EAAG,CAAE,OAAO,SAAU,EAAG,CAAE,OAAOX,EAAK,CAACW,EAAG,CAAC,CAAC,CAAI,CAAG,CAClE,SAASX,EAAKY,EAAI,CACd,GAAIL,EAAG,MAAM,IAAI,UAAU,iCAAiC,EAC5D,KAAOF,GAAG,GAAI,CACV,GAAIE,EAAI,EAAGC,IAAMF,EAAIM,EAAG,GAAK,EAAIJ,EAAE,OAAYI,EAAG,GAAKJ,EAAE,SAAcF,EAAIE,EAAE,SAAcF,EAAE,KAAKE,CAAC,EAAG,GAAKA,EAAE,OAAS,EAAEF,EAAIA,EAAE,KAAKE,EAAGI,EAAG,EAAE,GAAG,KAAM,OAAON,EAE3J,OADIE,EAAI,EAAGF,IAAGM,EAAK,CAACA,EAAG,GAAK,EAAGN,EAAE,KAAK,GAC9BM,EAAG,QACF,OAAQ,GAAGN,EAAIM,EAAI,UACnB,GAAG,OAAAP,EAAE,QAAgB,CAAE,MAAOO,EAAG,GAAI,KAAM,EAAK,MAChD,GAAGP,EAAE,QAASG,EAAII,EAAG,GAAIA,EAAK,CAAC,CAAC,EAAG,aACnC,GAAGA,EAAKP,EAAE,IAAI,MAAOA,EAAE,KAAK,IAAG,EAAI,iBAEpC,GAAMC,EAAID,EAAE,KAAM,EAAAC,EAAIA,EAAE,OAAS,GAAKA,EAAEA,EAAE,OAAS,MAAQM,EAAG,KAAO,GAAKA,EAAG,KAAO,GAAI,CAAEP,EAAI,EAAG,QAAW,CAC5G,GAAIO,EAAG,KAAO,IAAM,CAACN,GAAMM,EAAG,GAAKN,EAAE,IAAMM,EAAG,GAAKN,EAAE,IAAM,CAAED,EAAE,MAAQO,EAAG,GAAI,KAAQ,CACtF,GAAIA,EAAG,KAAO,GAAKP,EAAE,MAAQC,EAAE,GAAI,CAAED,EAAE,MAAQC,EAAE,GAAIA,EAAIM,EAAI,KAAQ,CACrE,GAAIN,GAAKD,EAAE,MAAQC,EAAE,GAAI,CAAED,EAAE,MAAQC,EAAE,GAAID,EAAE,IAAI,KAAKO,CAAE,EAAG,KAAQ,CAC/DN,EAAE,IAAID,EAAE,IAAI,IAAG,EACnBA,EAAE,KAAK,IAAK,EAAE,SAEtBO,EAAKR,EAAK,KAAKZ,EAASa,CAAC,CAC5B,OAAQJ,EAAP,CAAYW,EAAK,CAAC,EAAGX,CAAC,EAAGO,EAAI,CAAE,QAAW,CAAED,EAAID,EAAI,CAAI,CAC1D,GAAIM,EAAG,GAAK,EAAG,MAAMA,EAAG,GAAI,MAAO,CAAE,MAAOA,EAAG,GAAKA,EAAG,GAAK,OAAQ,KAAM,GAC7E,CACL,CAkBO,SAASC,EAASvF,EAAG,CACxB,IAAIwF,EAAI,OAAO,QAAW,YAAc,OAAO,SAAUC,EAAID,GAAKxF,EAAEwF,GAAIE,EAAI,EAC5E,GAAID,EAAG,OAAOA,EAAE,KAAKzF,CAAC,EACtB,GAAIA,GAAK,OAAOA,EAAE,QAAW,SAAU,MAAO,CAC1C,KAAM,UAAY,CACd,OAAIA,GAAK0F,GAAK1F,EAAE,SAAQA,EAAI,QACrB,CAAE,MAAOA,GAAKA,EAAE0F,KAAM,KAAM,CAAC1F,EACvC,CACT,EACI,MAAM,IAAI,UAAUwF,EAAI,0BAA4B,iCAAiC,CACzF,CAEO,SAASG,EAAO3F,EAAG,EAAG,CACzB,IAAIyF,EAAI,OAAO,QAAW,YAAczF,EAAE,OAAO,UACjD,GAAI,CAACyF,EAAG,OAAOzF,EACf,IAAI0F,EAAID,EAAE,KAAKzF,CAAC,EAAG4F,EAAGC,EAAK,CAAE,EAAElB,EAC/B,GAAI,CACA,MAAQ,IAAM,QAAU,KAAM,IAAM,EAAEiB,EAAIF,EAAE,KAAM,GAAE,MAAMG,EAAG,KAAKD,EAAE,KAAK,CAC5E,OACME,EAAP,CAAgBnB,EAAI,CAAE,MAAOmB,CAAO,CAAG,QAC/B,CACJ,GAAI,CACIF,GAAK,CAACA,EAAE,OAASH,EAAIC,EAAE,SAAYD,EAAE,KAAKC,CAAC,CAClD,QACO,CAAE,GAAIf,EAAG,MAAMA,EAAE,KAAQ,CACpC,CACD,OAAOkB,CACX,CAkBO,SAASE,EAAcC,EAAIC,EAAMC,EAAM,CAC1C,GAAIA,GAAQ,UAAU,SAAW,EAAG,QAASR,EAAI,EAAGS,EAAIF,EAAK,OAAQJ,EAAIH,EAAIS,EAAGT,KACxEG,GAAM,EAAEH,KAAKO,MACRJ,IAAIA,EAAK,MAAM,UAAU,MAAM,KAAKI,EAAM,EAAGP,CAAC,GACnDG,EAAGH,GAAKO,EAAKP,IAGrB,OAAOM,EAAG,OAAOH,GAAM,MAAM,UAAU,MAAM,KAAKI,CAAI,CAAC,CAC3D,CAEO,SAASG,EAAQC,EAAG,CACvB,OAAO,gBAAgBD,GAAW,KAAK,EAAIC,EAAG,MAAQ,IAAID,EAAQC,CAAC,CACvE,CAEO,SAASC,GAAiBpC,EAASC,EAAYE,EAAW,CAC7D,GAAI,CAAC,OAAO,cAAe,MAAM,IAAI,UAAU,sCAAsC,EACrF,IAAIc,EAAId,EAAU,MAAMH,EAASC,GAAc,CAAA,CAAE,EAAGuB,EAAGa,EAAI,GAC3D,OAAOb,EAAI,CAAA,EAAIN,EAAK,MAAM,EAAGA,EAAK,OAAO,EAAGA,EAAK,QAAQ,EAAGM,EAAE,OAAO,eAAiB,UAAY,CAAE,OAAO,IAAO,EAAEA,EACpH,SAASN,EAAKC,EAAG,CAAMF,EAAEE,KAAIK,EAAEL,GAAK,SAAUgB,EAAG,CAAE,OAAO,IAAI,QAAQ,SAAUG,EAAG3C,EAAG,CAAE0C,EAAE,KAAK,CAAClB,EAAGgB,EAAGG,EAAG3C,CAAC,CAAC,EAAI,GAAK4C,EAAOpB,EAAGgB,CAAC,CAAE,CAAE,CAAI,EAAG,CAC1I,SAASI,EAAOpB,EAAGgB,EAAG,CAAE,GAAI,CAAE3B,EAAKS,EAAEE,GAAGgB,CAAC,CAAC,CAAE,OAAU1B,EAAP,CAAY+B,EAAOH,EAAE,GAAG,GAAI5B,CAAC,EAAM,CAClF,SAASD,EAAKkB,EAAG,CAAEA,EAAE,iBAAiBQ,EAAU,QAAQ,QAAQR,EAAE,MAAM,CAAC,EAAE,KAAKe,EAASnC,CAAM,EAAIkC,EAAOH,EAAE,GAAG,GAAIX,CAAC,CAAI,CACxH,SAASe,EAAQ1D,EAAO,CAAEwD,EAAO,OAAQxD,CAAK,CAAI,CAClD,SAASuB,EAAOvB,EAAO,CAAEwD,EAAO,QAASxD,CAAK,CAAI,CAClD,SAASyD,EAAOzB,EAAGoB,EAAG,CAAMpB,EAAEoB,CAAC,EAAGE,EAAE,MAAK,EAAIA,EAAE,QAAQE,EAAOF,EAAE,GAAG,GAAIA,EAAE,GAAG,EAAE,CAAI,CACtF,CAQO,SAASK,GAAc5G,EAAG,CAC7B,GAAI,CAAC,OAAO,cAAe,MAAM,IAAI,UAAU,sCAAsC,EACrF,IAAIyF,EAAIzF,EAAE,OAAO,eAAgB0F,EACjC,OAAOD,EAAIA,EAAE,KAAKzF,CAAC,GAAKA,EAAI,OAAOuF,GAAa,WAAaA,EAASvF,CAAC,EAAIA,EAAE,OAAO,UAAS,EAAI0F,EAAI,CAAE,EAAEN,EAAK,MAAM,EAAGA,EAAK,OAAO,EAAGA,EAAK,QAAQ,EAAGM,EAAE,OAAO,eAAiB,UAAY,CAAE,OAAO,IAAK,EAAIA,GAC9M,SAASN,EAAKC,EAAG,CAAEK,EAAEL,GAAKrF,EAAEqF,IAAM,SAAUgB,EAAG,CAAE,OAAO,IAAI,QAAQ,SAAU9B,EAASC,EAAQ,CAAE6B,EAAIrG,EAAEqF,GAAGgB,CAAC,EAAGK,EAAOnC,EAASC,EAAQ6B,EAAE,KAAMA,EAAE,KAAK,CAAE,CAAE,CAAI,CAAG,CAChK,SAASK,EAAOnC,EAASC,EAAQZ,EAAGyC,EAAG,CAAE,QAAQ,QAAQA,CAAC,EAAE,KAAK,SAASA,EAAG,CAAE9B,EAAQ,CAAE,MAAO8B,EAAG,KAAMzC,CAAC,CAAE,CAAE,EAAIY,CAAM,CAAI,CAChI,CC9MO,SAASqC,EAAW5D,EAAO,CAC9B,OAAO,OAAOA,GAAU,UAC5B,CCFO,SAAS6D,GAAiBC,EAAY,CACzC,IAAIC,EAAS,SAAUC,EAAU,CAC7B,MAAM,KAAKA,CAAQ,EACnBA,EAAS,MAAQ,IAAI,MAAK,EAAG,KACrC,EACQC,EAAWH,EAAWC,CAAM,EAChC,OAAAE,EAAS,UAAY,OAAO,OAAO,MAAM,SAAS,EAClDA,EAAS,UAAU,YAAcA,EAC1BA,CACX,CCRO,IAAIC,GAAsBL,GAAiB,SAAUE,EAAQ,CAChE,OAAO,SAAiCI,EAAQ,CAC5CJ,EAAO,IAAI,EACX,KAAK,QAAUI,EACTA,EAAO,OAAS;AAAA,EAA8CA,EAAO,IAAI,SAAUC,EAAK3B,EAAG,CAAE,OAAOA,EAAI,EAAI,KAAO2B,EAAI,SAAU,EAAG,EAAE,KAAK;AAAA,GAAM,EACjJ,GACN,KAAK,KAAO,sBACZ,KAAK,OAASD,CACtB,CACA,CAAC,ECVM,SAASE,GAAUC,EAAKC,EAAM,CACjC,GAAID,EAAK,CACL,IAAIE,EAAQF,EAAI,QAAQC,CAAI,EAC5B,GAAKC,GAASF,EAAI,OAAOE,EAAO,CAAC,CACpC,CACL,CCDG,IAACC,EAAgB,UAAY,CAC5B,SAASA,EAAaC,EAAiB,CACnC,KAAK,gBAAkBA,EACvB,KAAK,OAAS,GACd,KAAK,WAAa,KAClB,KAAK,YAAc,IACtB,CACD,OAAAD,EAAa,UAAU,YAAc,UAAY,CAC7C,IAAIE,EAAKjH,EAAIkH,EAAK/F,EACdsF,EACJ,GAAI,CAAC,KAAK,OAAQ,CACd,KAAK,OAAS,GACd,IAAIU,EAAa,KAAK,WACtB,GAAIA,EAEA,GADA,KAAK,WAAa,KACd,MAAM,QAAQA,CAAU,EACxB,GAAI,CACA,QAASC,EAAexC,EAASuC,CAAU,EAAGE,EAAiBD,EAAa,KAAI,EAAI,CAACC,EAAe,KAAMA,EAAiBD,EAAa,KAAI,EAAI,CAC5I,IAAIE,EAAWD,EAAe,MAC9BC,EAAS,OAAO,IAAI,CACvB,CACJ,OACMC,EAAP,CAAgBN,EAAM,CAAE,MAAOM,CAAO,CAAG,QACjC,CACJ,GAAI,CACIF,GAAkB,CAACA,EAAe,OAASrH,EAAKoH,EAAa,SAASpH,EAAG,KAAKoH,CAAY,CACjG,QACO,CAAE,GAAIH,EAAK,MAAMA,EAAI,KAAQ,CACxC,MAGDE,EAAW,OAAO,IAAI,EAG9B,IAAIK,EAAmB,KAAK,gBAC5B,GAAItB,EAAWsB,CAAgB,EAC3B,GAAI,CACAA,GACH,OACMxD,EAAP,CACIyC,EAASzC,aAAawC,GAAsBxC,EAAE,OAAS,CAACA,CAAC,CAC5D,CAEL,IAAIyD,EAAc,KAAK,YACvB,GAAIA,EAAa,CACb,KAAK,YAAc,KACnB,GAAI,CACA,QAASC,EAAgB9C,EAAS6C,CAAW,EAAGE,EAAkBD,EAAc,KAAI,EAAI,CAACC,EAAgB,KAAMA,EAAkBD,EAAc,KAAI,EAAI,CACnJ,IAAIE,EAAYD,EAAgB,MAChC,GAAI,CACAE,GAAcD,CAAS,CAC1B,OACMlB,EAAP,CACID,EAASA,GAAW,KAA4BA,EAAS,GACrDC,aAAeF,GACfC,EAASrB,EAAcA,EAAc,CAAA,EAAIJ,EAAOyB,CAAM,CAAC,EAAGzB,EAAO0B,EAAI,MAAM,CAAC,EAG5ED,EAAO,KAAKC,CAAG,CAEtB,CACJ,CACJ,OACMoB,EAAP,CAAgBZ,EAAM,CAAE,MAAOY,CAAO,CAAG,QACjC,CACJ,GAAI,CACIH,GAAmB,CAACA,EAAgB,OAASxG,EAAKuG,EAAc,SAASvG,EAAG,KAAKuG,CAAa,CACrG,QACO,CAAE,GAAIR,EAAK,MAAMA,EAAI,KAAQ,CACxC,CACJ,CACD,GAAIT,EACA,MAAM,IAAID,GAAoBC,CAAM,CAE3C,CACT,EACIM,EAAa,UAAU,IAAM,SAAUgB,EAAU,CAC7C,IAAI/H,EACJ,GAAI+H,GAAYA,IAAa,KACzB,GAAI,KAAK,OACLF,GAAcE,CAAQ,MAErB,CACD,GAAIA,aAAoBhB,EAAc,CAClC,GAAIgB,EAAS,QAAUA,EAAS,WAAW,IAAI,EAC3C,OAEJA,EAAS,WAAW,IAAI,CAC3B,EACA,KAAK,aAAe/H,EAAK,KAAK,eAAiB,MAAQA,IAAO,OAASA,EAAK,CAAE,GAAE,KAAK+H,CAAQ,CACjG,CAEb,EACIhB,EAAa,UAAU,WAAa,SAAUiB,EAAQ,CAClD,IAAIb,EAAa,KAAK,WACtB,OAAOA,IAAea,GAAW,MAAM,QAAQb,CAAU,GAAKA,EAAW,SAASa,CAAM,CAChG,EACIjB,EAAa,UAAU,WAAa,SAAUiB,EAAQ,CAClD,IAAIb,EAAa,KAAK,WACtB,KAAK,WAAa,MAAM,QAAQA,CAAU,GAAKA,EAAW,KAAKa,CAAM,EAAGb,GAAcA,EAAa,CAACA,EAAYa,CAAM,EAAIA,CAClI,EACIjB,EAAa,UAAU,cAAgB,SAAUiB,EAAQ,CACrD,IAAIb,EAAa,KAAK,WAClBA,IAAea,EACf,KAAK,WAAa,KAEb,MAAM,QAAQb,CAAU,GAC7BR,GAAUQ,EAAYa,CAAM,CAExC,EACIjB,EAAa,UAAU,OAAS,SAAUgB,EAAU,CAChD,IAAIN,EAAc,KAAK,YACvBA,GAAed,GAAUc,EAAaM,CAAQ,EAC1CA,aAAoBhB,GACpBgB,EAAS,cAAc,IAAI,CAEvC,EACIhB,EAAa,MAAS,UAAY,CAC9B,IAAIkB,EAAQ,IAAIlB,EAChB,OAAAkB,EAAM,OAAS,GACRA,CACf,IACWlB,CACX,IAEWmB,GAAqBnB,EAAa,MACtC,SAASoB,GAAe7F,EAAO,CAClC,OAAQA,aAAiByE,GACpBzE,GAAS,WAAYA,GAAS4D,EAAW5D,EAAM,MAAM,GAAK4D,EAAW5D,EAAM,GAAG,GAAK4D,EAAW5D,EAAM,WAAW,CACxH,CACA,SAASuF,GAAcD,EAAW,CAC1B1B,EAAW0B,CAAS,EACpBA,IAGAA,EAAU,YAAW,CAE7B,CC7IO,IAAIQ,EAAS,CAChB,iBAAkB,KAClB,sBAAuB,KACvB,QAAS,OACT,sCAAuC,GACvC,yBAA0B,EAC9B,ECLWC,GAAkB,CACzB,WAAY,SAAUC,EAASC,EAAS,CAEpC,QADIC,EAAO,CAAA,EACFC,EAAK,EAAGA,EAAK,UAAU,OAAQA,IACpCD,EAAKC,EAAK,GAAK,UAAUA,GAE7B,IAAIC,EAAWL,GAAgB,SAC/B,OAAIK,GAAa,MAAuCA,EAAS,WACtDA,EAAS,WAAW,MAAMA,EAAUtD,EAAc,CAACkD,EAASC,CAAO,EAAGvD,EAAOwD,CAAI,CAAC,CAAC,EAEvF,WAAW,MAAM,OAAQpD,EAAc,CAACkD,EAASC,CAAO,EAAGvD,EAAOwD,CAAI,CAAC,CAAC,CAClF,EACD,aAAc,SAAUG,EAAQ,CAC5B,IAAID,EAAWL,GAAgB,SAC/B,QAASK,GAAa,KAA8B,OAASA,EAAS,eAAiB,cAAcC,CAAM,CAC9G,EACD,SAAU,MACd,EChBO,SAASC,GAAqBlC,EAAK,CACtC2B,GAAgB,WAAW,UAAY,CACnC,IAAIQ,EAAmBT,EAAO,iBAC9B,GAAIS,EACAA,EAAiBnC,CAAG,MAGpB,OAAMA,CAElB,CAAK,CACL,CCZO,SAASoC,IAAO,CAAA,CCCvB,IAAIC,EAAU,KACP,SAASC,EAAaC,EAAI,CAC7B,GAAIb,EAAO,sCAAuC,CAC9C,IAAIc,EAAS,CAACH,EAKd,GAJIG,IACAH,EAAU,CAAE,YAAa,GAAO,MAAO,IAAI,GAE/CE,IACIC,EAAQ,CACR,IAAIlJ,EAAK+I,EAASI,EAAcnJ,EAAG,YAAamF,EAAQnF,EAAG,MAE3D,GADA+I,EAAU,KACNI,EACA,MAAMhE,CAEb,CACJ,MAEG8D,GAER,CCXA,IAAIG,GAAc,SAAU/C,EAAQ,CAChCjD,EAAUgG,EAAY/C,CAAM,EAC5B,SAAS+C,EAAWC,EAAa,CAC7B,IAAIC,EAAQjD,EAAO,KAAK,IAAI,GAAK,KACjC,OAAAiD,EAAM,UAAY,GACdD,GACAC,EAAM,YAAcD,EAChBlB,GAAekB,CAAW,GAC1BA,EAAY,IAAIC,CAAK,GAIzBA,EAAM,YAAcC,GAEjBD,CACV,CACD,OAAAF,EAAW,OAAS,SAAUI,EAAMrE,EAAOsE,EAAU,CACjD,OAAO,IAAIC,GAAeF,EAAMrE,EAAOsE,CAAQ,CACvD,EACIL,EAAW,UAAU,KAAO,SAAU9G,EAAO,CACrC,KAAK,WAIL,KAAK,MAAMA,CAAK,CAE5B,EACI8G,EAAW,UAAU,MAAQ,SAAU1C,EAAK,CACpC,KAAK,YAIL,KAAK,UAAY,GACjB,KAAK,OAAOA,CAAG,EAE3B,EACI0C,EAAW,UAAU,SAAW,UAAY,CACpC,KAAK,YAIL,KAAK,UAAY,GACjB,KAAK,UAAS,EAE1B,EACIA,EAAW,UAAU,YAAc,UAAY,CACtC,KAAK,SACN,KAAK,UAAY,GACjB/C,EAAO,UAAU,YAAY,KAAK,IAAI,EACtC,KAAK,YAAc,KAE/B,EACI+C,EAAW,UAAU,MAAQ,SAAU9G,EAAO,CAC1C,KAAK,YAAY,KAAKA,CAAK,CACnC,EACI8G,EAAW,UAAU,OAAS,SAAU1C,EAAK,CACzC,GAAI,CACA,KAAK,YAAY,MAAMA,CAAG,CAC7B,QACO,CACJ,KAAK,YAAW,CACnB,CACT,EACI0C,EAAW,UAAU,UAAY,UAAY,CACzC,GAAI,CACA,KAAK,YAAY,UACpB,QACO,CACJ,KAAK,YAAW,CACnB,CACT,EACWA,CACX,EAAErC,CAAY,EAEV4C,GAAQ,SAAS,UAAU,KAC/B,SAASC,GAAKC,EAAItG,EAAS,CACvB,OAAOoG,GAAM,KAAKE,EAAItG,CAAO,CACjC,CACA,IAAIuG,GAAoB,UAAY,CAChC,SAASA,EAAiBC,EAAiB,CACvC,KAAK,gBAAkBA,CAC1B,CACD,OAAAD,EAAiB,UAAU,KAAO,SAAUxH,EAAO,CAC/C,IAAIyH,EAAkB,KAAK,gBAC3B,GAAIA,EAAgB,KAChB,GAAI,CACAA,EAAgB,KAAKzH,CAAK,CAC7B,OACM6C,EAAP,CACI6E,EAAqB7E,CAAK,CAC7B,CAEb,EACI2E,EAAiB,UAAU,MAAQ,SAAUpD,EAAK,CAC9C,IAAIqD,EAAkB,KAAK,gBAC3B,GAAIA,EAAgB,MAChB,GAAI,CACAA,EAAgB,MAAMrD,CAAG,CAC5B,OACMvB,EAAP,CACI6E,EAAqB7E,CAAK,CAC7B,MAGD6E,EAAqBtD,CAAG,CAEpC,EACIoD,EAAiB,UAAU,SAAW,UAAY,CAC9C,IAAIC,EAAkB,KAAK,gBAC3B,GAAIA,EAAgB,SAChB,GAAI,CACAA,EAAgB,SAAQ,CAC3B,OACM5E,EAAP,CACI6E,EAAqB7E,CAAK,CAC7B,CAEb,EACW2E,CACX,EAAC,EACGJ,GAAkB,SAAUrD,EAAQ,CACpCjD,EAAUsG,EAAgBrD,CAAM,EAChC,SAASqD,EAAeO,EAAgB9E,EAAOsE,EAAU,CACrD,IAAIH,EAAQjD,EAAO,KAAK,IAAI,GAAK,KAC7B0D,EACJ,GAAI7D,EAAW+D,CAAc,GAAK,CAACA,EAC/BF,EAAkB,CACd,KAAOE,GAAmB,KAAoCA,EAAiB,OAC/E,MAAO9E,GAAU,KAA2BA,EAAQ,OACpD,SAAUsE,GAAa,KAA8BA,EAAW,MAChF,MAEa,CACD,IAAIS,EACAZ,GAASlB,EAAO,0BAChB8B,EAAY,OAAO,OAAOD,CAAc,EACxCC,EAAU,YAAc,UAAY,CAAE,OAAOZ,EAAM,YAAa,GAChES,EAAkB,CACd,KAAME,EAAe,MAAQL,GAAKK,EAAe,KAAMC,CAAS,EAChE,MAAOD,EAAe,OAASL,GAAKK,EAAe,MAAOC,CAAS,EACnE,SAAUD,EAAe,UAAYL,GAAKK,EAAe,SAAUC,CAAS,CAChG,GAGgBH,EAAkBE,CAEzB,CACD,OAAAX,EAAM,YAAc,IAAIQ,GAAiBC,CAAe,EACjDT,CACV,CACD,OAAOI,CACX,EAAEN,EAAU,EAEZ,SAASY,EAAqB7E,EAAO,CAK7ByD,GAAqBzD,CAAK,CAElC,CACA,SAASgF,GAAoBzD,EAAK,CAC9B,MAAMA,CACV,CAKO,IAAI6C,GAAiB,CACxB,OAAQ,GACR,KAAMT,GACN,MAAOqB,GACP,SAAUrB,EACd,ECtLWsB,GAAc,UAAY,CAAE,OAAQ,OAAO,QAAW,YAAc,OAAO,YAAe,gBAAoB,ECAlH,SAASC,GAASC,EAAG,CACxB,OAAOA,CACX,CCMO,SAASC,GAAcC,EAAK,CAC/B,OAAIA,EAAI,SAAW,EACRH,GAEPG,EAAI,SAAW,EACRA,EAAI,GAER,SAAeC,EAAO,CACzB,OAAOD,EAAI,OAAO,SAAU9J,EAAMmJ,EAAI,CAAE,OAAOA,EAAGnJ,CAAI,CAAI,EAAE+J,CAAK,CACzE,CACA,CCXG,IAACC,EAAc,UAAY,CAC1B,SAASA,EAAWC,EAAW,CACvBA,IACA,KAAK,WAAaA,EAEzB,CACD,OAAAD,EAAW,UAAU,KAAO,SAAUE,EAAU,CAC5C,IAAIR,EAAa,IAAIM,EACrB,OAAAN,EAAW,OAAS,KACpBA,EAAW,SAAWQ,EACfR,CACf,EACIM,EAAW,UAAU,UAAY,SAAUT,EAAgB9E,EAAOsE,EAAU,CACxE,IAAIH,EAAQ,KACRuB,EAAaC,GAAab,CAAc,EAAIA,EAAiB,IAAIP,GAAeO,EAAgB9E,EAAOsE,CAAQ,EACnH,OAAAT,EAAa,UAAY,CACrB,IAAIhJ,EAAKsJ,EAAOsB,EAAW5K,EAAG,SAAU+K,EAAS/K,EAAG,OACpD6K,EAAW,IAAID,EAEPA,EAAS,KAAKC,EAAYE,CAAM,EAClCA,EAEMzB,EAAM,WAAWuB,CAAU,EAE3BvB,EAAM,cAAcuB,CAAU,CAAC,CACvD,CAAS,EACMA,CACf,EACIH,EAAW,UAAU,cAAgB,SAAUM,EAAM,CACjD,GAAI,CACA,OAAO,KAAK,WAAWA,CAAI,CAC9B,OACMtE,EAAP,CACIsE,EAAK,MAAMtE,CAAG,CACjB,CACT,EACIgE,EAAW,UAAU,QAAU,SAAUlB,EAAMyB,EAAa,CACxD,IAAI3B,EAAQ,KACZ,OAAA2B,EAAcC,GAAeD,CAAW,EACjC,IAAIA,EAAY,SAAUrH,EAASC,EAAQ,CAC9C,IAAIgH,EAAa,IAAInB,GAAe,CAChC,KAAM,SAAUpH,EAAO,CACnB,GAAI,CACAkH,EAAKlH,CAAK,CACb,OACMoE,EAAP,CACI7C,EAAO6C,CAAG,EACVmE,EAAW,YAAW,CACzB,CACJ,EACD,MAAOhH,EACP,SAAUD,CAC1B,CAAa,EACD0F,EAAM,UAAUuB,CAAU,CACtC,CAAS,CACT,EACIH,EAAW,UAAU,WAAa,SAAUG,EAAY,CACpD,IAAI7K,EACJ,OAAQA,EAAK,KAAK,UAAY,MAAQA,IAAO,OAAS,OAASA,EAAG,UAAU6K,CAAU,CAC9F,EACIH,EAAW,UAAUS,IAAqB,UAAY,CAClD,OAAO,IACf,EACIT,EAAW,UAAU,KAAO,UAAY,CAEpC,QADIU,EAAa,CAAA,EACR3C,EAAK,EAAGA,EAAK,UAAU,OAAQA,IACpC2C,EAAW3C,GAAM,UAAUA,GAE/B,OAAO8B,GAAca,CAAU,EAAE,IAAI,CAC7C,EACIV,EAAW,UAAU,UAAY,SAAUO,EAAa,CACpD,IAAI3B,EAAQ,KACZ,OAAA2B,EAAcC,GAAeD,CAAW,EACjC,IAAIA,EAAY,SAAUrH,EAASC,EAAQ,CAC9C,IAAIvB,EACJgH,EAAM,UAAU,SAAUgB,EAAG,CAAE,OAAQhI,EAAQgI,CAAK,EAAE,SAAU5D,EAAK,CAAE,OAAO7C,EAAO6C,CAAG,GAAM,UAAY,CAAE,OAAO9C,EAAQtB,CAAK,CAAE,CAAE,CAChJ,CAAS,CACT,EACIoI,EAAW,OAAS,SAAUC,EAAW,CACrC,OAAO,IAAID,EAAWC,CAAS,CACvC,EACWD,CACX,IAEA,SAASQ,GAAeD,EAAa,CACjC,IAAIjL,EACJ,OAAQA,EAAKiL,GAAgB,KAAiCA,EAAc7C,EAAO,WAAa,MAAQpI,IAAO,OAASA,EAAK,OACjI,CACA,SAASqL,GAAW/I,EAAO,CACvB,OAAOA,GAAS4D,EAAW5D,EAAM,IAAI,GAAK4D,EAAW5D,EAAM,KAAK,GAAK4D,EAAW5D,EAAM,QAAQ,CAClG,CACA,SAASwI,GAAaxI,EAAO,CACzB,OAAQA,GAASA,aAAiB8G,IAAgBiC,GAAW/I,CAAK,GAAK6F,GAAe7F,CAAK,CAC/F,CCnGO,SAASgJ,GAAQP,EAAQ,CAC5B,OAAO7E,EAAW6E,GAAW,KAA4B,OAASA,EAAO,IAAI,CACjF,CACO,SAASQ,GAAQC,EAAM,CAC1B,OAAO,SAAUT,EAAQ,CACrB,GAAIO,GAAQP,CAAM,EACd,OAAOA,EAAO,KAAK,SAAUU,EAAc,CACvC,GAAI,CACA,OAAOD,EAAKC,EAAc,IAAI,CACjC,OACM/E,EAAP,CACI,KAAK,MAAMA,CAAG,CACjB,CACjB,CAAa,EAEL,MAAM,IAAI,UAAU,wCAAwC,CACpE,CACA,CChBO,SAASgF,GAAyBrC,EAAasC,EAAQC,EAAYC,EAASC,EAAY,CAC3F,OAAO,IAAIC,GAAmB1C,EAAasC,EAAQC,EAAYC,EAASC,CAAU,CACtF,CACA,IAAIC,GAAsB,SAAU1F,EAAQ,CACxCjD,EAAU2I,EAAoB1F,CAAM,EACpC,SAAS0F,EAAmB1C,EAAasC,EAAQC,EAAYC,EAASC,EAAYE,EAAmB,CACjG,IAAI1C,EAAQjD,EAAO,KAAK,KAAMgD,CAAW,GAAK,KAC9C,OAAAC,EAAM,WAAawC,EACnBxC,EAAM,kBAAoB0C,EAC1B1C,EAAM,MAAQqC,EACR,SAAUrJ,EAAO,CACf,GAAI,CACAqJ,EAAOrJ,CAAK,CACf,OACMoE,EAAP,CACI2C,EAAY,MAAM3C,CAAG,CACxB,CACJ,EACCL,EAAO,UAAU,MACvBiD,EAAM,OAASuC,EACT,SAAUnF,EAAK,CACb,GAAI,CACAmF,EAAQnF,CAAG,CACd,OACMA,EAAP,CACI2C,EAAY,MAAM3C,CAAG,CACxB,QACO,CACJ,KAAK,YAAW,CACnB,CACJ,EACCL,EAAO,UAAU,OACvBiD,EAAM,UAAYsC,EACZ,UAAY,CACV,GAAI,CACAA,GACH,OACMlF,EAAP,CACI2C,EAAY,MAAM3C,CAAG,CACxB,QACO,CACJ,KAAK,YAAW,CACnB,CACJ,EACCL,EAAO,UAAU,UAChBiD,CACV,CACD,OAAAyC,EAAmB,UAAU,YAAc,UAAY,CACnD,IAAI/L,EACJ,GAAI,CAAC,KAAK,mBAAqB,KAAK,kBAAiB,EAAI,CACrD,IAAIiM,EAAW,KAAK,OACpB5F,EAAO,UAAU,YAAY,KAAK,IAAI,EACtC,CAAC4F,KAAcjM,EAAK,KAAK,cAAgB,MAAQA,IAAO,QAAkBA,EAAG,KAAK,IAAI,EACzF,CACT,EACW+L,CACX,EAAE3C,EAAU,ECzDD8C,GAA0B/F,GAAiB,SAAUE,EAAQ,CACpE,OAAO,UAAuC,CAC1CA,EAAO,IAAI,EACX,KAAK,KAAO,0BACZ,KAAK,QAAU,qBACvB,CACA,CAAC,ECDG8F,EAAW,SAAU9F,EAAQ,CAC7BjD,EAAU+I,EAAS9F,CAAM,EACzB,SAAS8F,GAAU,CACf,IAAI7C,EAAQjD,EAAO,KAAK,IAAI,GAAK,KACjC,OAAAiD,EAAM,OAAS,GACfA,EAAM,iBAAmB,KACzBA,EAAM,UAAY,GAClBA,EAAM,UAAY,GAClBA,EAAM,SAAW,GACjBA,EAAM,YAAc,KACbA,CACV,CACD,OAAA6C,EAAQ,UAAU,KAAO,SAAUvB,EAAU,CACzC,IAAIwB,EAAU,IAAIC,GAAiB,KAAM,IAAI,EAC7C,OAAAD,EAAQ,SAAWxB,EACZwB,CACf,EACID,EAAQ,UAAU,eAAiB,UAAY,CAC3C,GAAI,KAAK,OACL,MAAM,IAAID,EAEtB,EACIC,EAAQ,UAAU,KAAO,SAAU7J,EAAO,CACtC,IAAIgH,EAAQ,KACZN,EAAa,UAAY,CACrB,IAAI/B,EAAKjH,EAET,GADAsJ,EAAM,eAAc,EAChB,CAACA,EAAM,UAAW,CACbA,EAAM,mBACPA,EAAM,iBAAmB,MAAM,KAAKA,EAAM,SAAS,GAEvD,GAAI,CACA,QAASnI,EAAKyD,EAAS0E,EAAM,gBAAgB,EAAGgD,EAAKnL,EAAG,KAAM,EAAE,CAACmL,EAAG,KAAMA,EAAKnL,EAAG,OAAQ,CACtF,IAAIoL,EAAWD,EAAG,MAClBC,EAAS,KAAKjK,CAAK,CACtB,CACJ,OACMiF,EAAP,CAAgBN,EAAM,CAAE,MAAOM,CAAO,CAAG,QACjC,CACJ,GAAI,CACI+E,GAAM,CAACA,EAAG,OAAStM,EAAKmB,EAAG,SAASnB,EAAG,KAAKmB,CAAE,CACrD,QACO,CAAE,GAAI8F,EAAK,MAAMA,EAAI,KAAQ,CACxC,CACJ,CACb,CAAS,CACT,EACIkF,EAAQ,UAAU,MAAQ,SAAUzF,EAAK,CACrC,IAAI4C,EAAQ,KACZN,EAAa,UAAY,CAErB,GADAM,EAAM,eAAc,EAChB,CAACA,EAAM,UAAW,CAClBA,EAAM,SAAWA,EAAM,UAAY,GACnCA,EAAM,YAAc5C,EAEpB,QADI8F,EAAYlD,EAAM,UACfkD,EAAU,QACbA,EAAU,MAAK,EAAG,MAAM9F,CAAG,CAElC,CACb,CAAS,CACT,EACIyF,EAAQ,UAAU,SAAW,UAAY,CACrC,IAAI7C,EAAQ,KACZN,EAAa,UAAY,CAErB,GADAM,EAAM,eAAc,EAChB,CAACA,EAAM,UAAW,CAClBA,EAAM,UAAY,GAElB,QADIkD,EAAYlD,EAAM,UACfkD,EAAU,QACbA,EAAU,QAAQ,UAEzB,CACb,CAAS,CACT,EACIL,EAAQ,UAAU,YAAc,UAAY,CACxC,KAAK,UAAY,KAAK,OAAS,GAC/B,KAAK,UAAY,KAAK,iBAAmB,IACjD,EACI,OAAO,eAAeA,EAAQ,UAAW,WAAY,CACjD,IAAK,UAAY,CACb,IAAInM,EACJ,QAASA,EAAK,KAAK,aAAe,MAAQA,IAAO,OAAS,OAASA,EAAG,QAAU,CACnF,EACD,WAAY,GACZ,aAAc,EACtB,CAAK,EACDmM,EAAQ,UAAU,cAAgB,SAAUtB,EAAY,CACpD,YAAK,eAAc,EACZxE,EAAO,UAAU,cAAc,KAAK,KAAMwE,CAAU,CACnE,EACIsB,EAAQ,UAAU,WAAa,SAAUtB,EAAY,CACjD,YAAK,eAAc,EACnB,KAAK,wBAAwBA,CAAU,EAChC,KAAK,gBAAgBA,CAAU,CAC9C,EACIsB,EAAQ,UAAU,gBAAkB,SAAUtB,EAAY,CACtD,IAAIvB,EAAQ,KACRtJ,EAAK,KAAMyM,EAAWzM,EAAG,SAAU0M,EAAY1M,EAAG,UAAWwM,EAAYxM,EAAG,UAChF,OAAIyM,GAAYC,EACLxE,IAEX,KAAK,iBAAmB,KACxBsE,EAAU,KAAK3B,CAAU,EAClB,IAAI9D,EAAa,UAAY,CAChCuC,EAAM,iBAAmB,KACzB3C,GAAU6F,EAAW3B,CAAU,CAC3C,CAAS,EACT,EACIsB,EAAQ,UAAU,wBAA0B,SAAUtB,EAAY,CAC9D,IAAI7K,EAAK,KAAMyM,EAAWzM,EAAG,SAAU2M,EAAc3M,EAAG,YAAa0M,EAAY1M,EAAG,UAChFyM,EACA5B,EAAW,MAAM8B,CAAW,EAEvBD,GACL7B,EAAW,SAAQ,CAE/B,EACIsB,EAAQ,UAAU,aAAe,UAAY,CACzC,IAAI/B,EAAa,IAAIM,EACrB,OAAAN,EAAW,OAAS,KACbA,CACf,EACI+B,EAAQ,OAAS,SAAU9C,EAAa0B,EAAQ,CAC5C,OAAO,IAAIsB,GAAiBhD,EAAa0B,CAAM,CACvD,EACWoB,CACX,EAAEzB,CAAU,EAER2B,GAAoB,SAAUhG,EAAQ,CACtCjD,EAAUiJ,EAAkBhG,CAAM,EAClC,SAASgG,EAAiBhD,EAAa0B,EAAQ,CAC3C,IAAIzB,EAAQjD,EAAO,KAAK,IAAI,GAAK,KACjC,OAAAiD,EAAM,YAAcD,EACpBC,EAAM,OAASyB,EACRzB,CACV,CACD,OAAA+C,EAAiB,UAAU,KAAO,SAAU/J,EAAO,CAC/C,IAAItC,EAAImB,GACPA,GAAMnB,EAAK,KAAK,eAAiB,MAAQA,IAAO,OAAS,OAASA,EAAG,QAAU,MAAQmB,IAAO,QAAkBA,EAAG,KAAKnB,EAAIsC,CAAK,CAC1I,EACI+J,EAAiB,UAAU,MAAQ,SAAU3F,EAAK,CAC9C,IAAI1G,EAAImB,GACPA,GAAMnB,EAAK,KAAK,eAAiB,MAAQA,IAAO,OAAS,OAASA,EAAG,SAAW,MAAQmB,IAAO,QAAkBA,EAAG,KAAKnB,EAAI0G,CAAG,CACzI,EACI2F,EAAiB,UAAU,SAAW,UAAY,CAC9C,IAAIrM,EAAImB,GACPA,GAAMnB,EAAK,KAAK,eAAiB,MAAQA,IAAO,OAAS,OAASA,EAAG,YAAc,MAAQmB,IAAO,QAAkBA,EAAG,KAAKnB,CAAE,CACvI,EACIqM,EAAiB,UAAU,WAAa,SAAUxB,EAAY,CAC1D,IAAI7K,EAAImB,EACR,OAAQA,GAAMnB,EAAK,KAAK,UAAY,MAAQA,IAAO,OAAS,OAASA,EAAG,UAAU6K,CAAU,KAAO,MAAQ1J,IAAO,OAASA,EAAK+G,EACxI,EACWmE,CACX,EAAEF,CAAO,EC/JES,GAAe,SAAUtC,EAAG,CAAE,OAAOA,GAAK,OAAOA,EAAE,QAAW,UAAY,OAAOA,GAAM,UAAW,ECCtG,SAASuC,GAAUvK,EAAO,CAC7B,OAAO4D,EAAW5D,GAAU,KAA2B,OAASA,EAAM,IAAI,CAC9E,CCDO,SAASwK,GAAoBrC,EAAO,CACvC,OAAOvE,EAAWuE,EAAMU,GAAkB,CAC9C,CCHO,SAAS4B,GAAgBC,EAAK,CACjC,OAAO,OAAO,eAAiB9G,EAAW8G,GAAQ,KAAyB,OAASA,EAAI,OAAO,cAAc,CACjH,CCHO,SAASC,GAAiCxC,EAAO,CACpD,OAAO,IAAI,UAAU,iBAAmBA,IAAU,MAAQ,OAAOA,GAAU,SAAW,oBAAsB,IAAMA,EAAQ,KAAO,0HAA0H,CAC/P,CCFO,SAASyC,IAAoB,CAChC,OAAI,OAAO,QAAW,YAAc,CAAC,OAAO,SACjC,aAEJ,OAAO,QAClB,CACO,IAAIC,GAAWD,GAAmB,ECJlC,SAASE,GAAW3C,EAAO,CAC9B,OAAOvE,EAAWuE,GAAU,KAA2B,OAASA,EAAM4C,GAAgB,CAC1F,CCFO,SAASC,GAAmCC,EAAgB,CAC/D,OAAO5H,GAAiB,KAAM,UAAW,UAAgD,CACrF,IAAI6H,EAAQxN,EAAIsC,EAAOmL,EACvB,OAAOvJ,GAAY,KAAM,SAAU/C,EAAI,CACnC,OAAQA,EAAG,WACF,GACDqM,EAASD,EAAe,YACxBpM,EAAG,MAAQ,MACV,GACDA,EAAG,KAAK,KAAK,CAAC,EAAC,CAAI,EAAG,EAAE,CAAC,EACzBA,EAAG,MAAQ,MACV,GAED,MAAO,CAAC,EAAGsE,EAAQ+H,EAAO,KAAI,CAAE,CAAC,MAChC,GAED,OADAxN,EAAKmB,EAAG,KAAI,EAAImB,EAAQtC,EAAG,MAAOyN,EAAOzN,EAAG,KACvCyN,EACE,CAAC,EAAGhI,EAAQ,MAAM,CAAC,EADR,CAAC,EAAG,CAAC,MAEtB,GAAG,MAAO,CAAC,EAAGtE,EAAG,KAAM,CAAA,MACvB,GAAG,MAAO,CAAC,EAAGsE,EAAQnD,CAAK,CAAC,MAC5B,GAAG,MAAO,CAAC,EAAGnB,EAAG,KAAM,CAAA,MACvB,GACD,OAAAA,EAAG,KAAI,EACA,CAAC,EAAG,CAAC,MACX,GAAG,MAAO,CAAC,EAAG,EAAE,MAChB,GACD,OAAAqM,EAAO,YAAW,EACX,CAAC,CAAC,MACR,IAAI,MAAO,CAAC,CAAC,EAElC,CAAS,CACT,CAAK,CACL,CACO,SAASE,GAAqBV,EAAK,CACtC,OAAO9G,EAAW8G,GAAQ,KAAyB,OAASA,EAAI,SAAS,CAC7E,CCzBO,SAASW,GAAUlD,EAAO,CAC7B,GAAIA,aAAiBC,EACjB,OAAOD,EAEX,GAAIA,GAAS,KAAM,CACf,GAAIqC,GAAoBrC,CAAK,EACzB,OAAOmD,GAAsBnD,CAAK,EAEtC,GAAImC,GAAYnC,CAAK,EACjB,OAAOoD,GAAcpD,CAAK,EAE9B,GAAIoC,GAAUpC,CAAK,EACf,OAAOqD,GAAYrD,CAAK,EAE5B,GAAIsC,GAAgBtC,CAAK,EACrB,OAAOsD,GAAkBtD,CAAK,EAElC,GAAI2C,GAAW3C,CAAK,EAChB,OAAOuD,GAAavD,CAAK,EAE7B,GAAIiD,GAAqBjD,CAAK,EAC1B,OAAOwD,GAAuBxD,CAAK,CAE1C,CACD,MAAMwC,GAAiCxC,CAAK,CAChD,CACO,SAASmD,GAAsBZ,EAAK,CACvC,OAAO,IAAItC,EAAW,SAAUG,EAAY,CACxC,IAAIqD,EAAMlB,EAAI7B,MACd,GAAIjF,EAAWgI,EAAI,SAAS,EACxB,OAAOA,EAAI,UAAUrD,CAAU,EAEnC,MAAM,IAAI,UAAU,gEAAgE,CAC5F,CAAK,CACL,CACO,SAASgD,GAAcM,EAAO,CACjC,OAAO,IAAIzD,EAAW,SAAUG,EAAY,CACxC,QAAS9F,EAAI,EAAGA,EAAIoJ,EAAM,QAAU,CAACtD,EAAW,OAAQ9F,IACpD8F,EAAW,KAAKsD,EAAMpJ,EAAE,EAE5B8F,EAAW,SAAQ,CAC3B,CAAK,CACL,CACO,SAASiD,GAAYM,EAAS,CACjC,OAAO,IAAI1D,EAAW,SAAUG,EAAY,CACxCuD,EACK,KAAK,SAAU9L,EAAO,CAClBuI,EAAW,SACZA,EAAW,KAAKvI,CAAK,EACrBuI,EAAW,SAAQ,EAEnC,EAAW,SAAUnE,EAAK,CAAE,OAAOmE,EAAW,MAAMnE,CAAG,EAAI,EAC9C,KAAK,KAAMkC,EAAoB,CAC5C,CAAK,CACL,CACO,SAASoF,GAAaK,EAAU,CACnC,OAAO,IAAI3D,EAAW,SAAUG,EAAY,CACxC,IAAI5D,EAAKjH,EACT,GAAI,CACA,QAASsO,EAAa1J,EAASyJ,CAAQ,EAAGE,EAAeD,EAAW,KAAI,EAAI,CAACC,EAAa,KAAMA,EAAeD,EAAW,KAAI,EAAI,CAC9H,IAAIhM,EAAQiM,EAAa,MAEzB,GADA1D,EAAW,KAAKvI,CAAK,EACjBuI,EAAW,OACX,MAEP,CACJ,OACMtD,EAAP,CAAgBN,EAAM,CAAE,MAAOM,CAAO,CAAG,QACjC,CACJ,GAAI,CACIgH,GAAgB,CAACA,EAAa,OAASvO,EAAKsO,EAAW,SAAStO,EAAG,KAAKsO,CAAU,CACzF,QACO,CAAE,GAAIrH,EAAK,MAAMA,EAAI,KAAQ,CACxC,CACD4D,EAAW,SAAQ,CAC3B,CAAK,CACL,CACO,SAASkD,GAAkBS,EAAe,CAC7C,OAAO,IAAI9D,EAAW,SAAUG,EAAY,CACxC4D,GAAQD,EAAe3D,CAAU,EAAE,MAAM,SAAUnE,EAAK,CAAE,OAAOmE,EAAW,MAAMnE,CAAG,CAAI,CAAA,CACjG,CAAK,CACL,CACO,SAASuH,GAAuBV,EAAgB,CACnD,OAAOQ,GAAkBT,GAAmCC,CAAc,CAAC,CAC/E,CACA,SAASkB,GAAQD,EAAe3D,EAAY,CACxC,IAAI6D,EAAiBC,EACjBzH,EAAKlH,EACT,OAAOsD,GAAU,KAAM,OAAQ,OAAQ,UAAY,CAC/C,IAAIhB,EAAOwF,EACX,OAAO5D,GAAY,KAAM,SAAU/C,EAAI,CACnC,OAAQA,EAAG,WACF,GACDA,EAAG,KAAK,KAAK,CAAC,EAAG,EAAG,EAAG,EAAE,CAAC,EAC1BuN,EAAkBzI,GAAcuI,CAAa,EAC7CrN,EAAG,MAAQ,MACV,GAAG,MAAO,CAAC,EAAGuN,EAAgB,KAAM,CAAA,MACpC,GACD,GAAMC,EAAoBxN,EAAG,OAAQ,EAACwN,EAAkB,KAAO,MAAO,CAAC,EAAG,CAAC,EAG3E,GAFArM,EAAQqM,EAAkB,MAC1B9D,EAAW,KAAKvI,CAAK,EACjBuI,EAAW,OACX,MAAO,CAAC,CAAC,EAEb1J,EAAG,MAAQ,MACV,GAAG,MAAO,CAAC,EAAG,CAAC,MACf,GAAG,MAAO,CAAC,EAAG,EAAE,MAChB,GACD,OAAA2G,EAAQ3G,EAAG,OACX+F,EAAM,CAAE,MAAOY,GACR,CAAC,EAAG,EAAE,MACZ,GAED,OADA3G,EAAG,KAAK,KAAK,CAAC,EAAC,CAAI,EAAG,EAAE,CAAC,EACnBwN,GAAqB,CAACA,EAAkB,OAAS3O,EAAK0O,EAAgB,QACrE,CAAC,EAAG1O,EAAG,KAAK0O,CAAe,CAAC,EAD0D,CAAC,EAAG,CAAC,MAEjG,GACDvN,EAAG,KAAI,EACPA,EAAG,MAAQ,MACV,GAAG,MAAO,CAAC,EAAG,EAAE,MAChB,GACD,GAAI+F,EAAK,MAAMA,EAAI,MACnB,MAAO,CAAC,CAAC,MACR,IAAI,MAAO,CAAC,CAAC,MACb,IACD,OAAA2D,EAAW,SAAQ,EACZ,CAAC,CAAC,EAE7B,CAAS,CACT,CAAK,CACL,CC7IO,SAAS+D,EAAgBC,EAAoBC,EAAWC,EAAMC,EAAOC,EAAQ,CAC5ED,IAAU,SAAUA,EAAQ,GAC5BC,IAAW,SAAUA,EAAS,IAClC,IAAIC,EAAuBJ,EAAU,SAAS,UAAY,CACtDC,IACIE,EACAJ,EAAmB,IAAI,KAAK,SAAS,KAAMG,CAAK,CAAC,EAGjD,KAAK,YAAW,CAEvB,EAAEA,CAAK,EAER,GADAH,EAAmB,IAAIK,CAAoB,EACvC,CAACD,EACD,OAAOC,CAEf,CCbO,SAASC,GAAUL,EAAWE,EAAO,CACxC,OAAIA,IAAU,SAAUA,EAAQ,GACzBzD,GAAQ,SAAUR,EAAQF,EAAY,CACzCE,EAAO,UAAUW,GAAyBb,EAAY,SAAUvI,EAAO,CAAE,OAAOsM,EAAgB/D,EAAYiE,EAAW,UAAY,CAAE,OAAOjE,EAAW,KAAKvI,CAAK,GAAM0M,CAAK,CAAE,EAAI,UAAY,CAAE,OAAOJ,EAAgB/D,EAAYiE,EAAW,UAAY,CAAE,OAAOjE,EAAW,SAAQ,CAAK,EAAEmE,CAAK,GAAM,SAAUtI,EAAK,CAAE,OAAOkI,EAAgB/D,EAAYiE,EAAW,UAAY,CAAE,OAAOjE,EAAW,MAAMnE,CAAG,CAAE,EAAIsI,CAAK,CAAI,CAAA,CAAC,CACxa,CAAK,CACL,CCPO,SAASI,GAAYN,EAAWE,EAAO,CAC1C,OAAIA,IAAU,SAAUA,EAAQ,GACzBzD,GAAQ,SAAUR,EAAQF,EAAY,CACzCA,EAAW,IAAIiE,EAAU,SAAS,UAAY,CAAE,OAAO/D,EAAO,UAAUF,CAAU,GAAMmE,CAAK,CAAC,CACtG,CAAK,CACL,CCHO,SAASK,GAAmB5E,EAAOqE,EAAW,CACjD,OAAOnB,GAAUlD,CAAK,EAAE,KAAK2E,GAAYN,CAAS,EAAGK,GAAUL,CAAS,CAAC,CAC7E,CCFO,SAASQ,GAAgB7E,EAAOqE,EAAW,CAC9C,OAAOnB,GAAUlD,CAAK,EAAE,KAAK2E,GAAYN,CAAS,EAAGK,GAAUL,CAAS,CAAC,CAC7E,CCJO,SAASS,GAAc9E,EAAOqE,EAAW,CAC5C,OAAO,IAAIpE,EAAW,SAAUG,EAAY,CACxC,IAAI9F,EAAI,EACR,OAAO+J,EAAU,SAAS,UAAY,CAC9B/J,IAAM0F,EAAM,OACZI,EAAW,SAAQ,GAGnBA,EAAW,KAAKJ,EAAM1F,IAAI,EACrB8F,EAAW,QACZ,KAAK,SAAQ,EAGjC,CAAS,CACT,CAAK,CACL,CCZO,SAAS2E,GAAiB/E,EAAOqE,EAAW,CAC/C,OAAO,IAAIpE,EAAW,SAAUG,EAAY,CACxC,IAAIsC,EACJ,OAAAyB,EAAgB/D,EAAYiE,EAAW,UAAY,CAC/C3B,EAAW1C,EAAM4C,MACjBuB,EAAgB/D,EAAYiE,EAAW,UAAY,CAC/C,IAAI9O,EACAsC,EACAmL,EACJ,GAAI,CACCzN,EAAKmN,EAAS,OAAQ7K,EAAQtC,EAAG,MAAOyN,EAAOzN,EAAG,IACtD,OACM0G,EAAP,CACImE,EAAW,MAAMnE,CAAG,EACpB,MACH,CACG+G,EACA5C,EAAW,SAAQ,EAGnBA,EAAW,KAAKvI,CAAK,CAEzC,EAAe,EAAG,EAAI,CACtB,CAAS,EACM,UAAY,CAAE,OAAO4D,EAAWiH,GAAa,KAA8B,OAASA,EAAS,MAAM,GAAKA,EAAS,OAAQ,EACxI,CAAK,CACL,CC5BO,SAASsC,GAAsBhF,EAAOqE,EAAW,CACpD,GAAI,CAACrE,EACD,MAAM,IAAI,MAAM,yBAAyB,EAE7C,OAAO,IAAIC,EAAW,SAAUG,EAAY,CACxC+D,EAAgB/D,EAAYiE,EAAW,UAAY,CAC/C,IAAI3B,EAAW1C,EAAM,OAAO,eAAc,EAC1CmE,EAAgB/D,EAAYiE,EAAW,UAAY,CAC/C3B,EAAS,KAAI,EAAG,KAAK,SAAU1K,EAAQ,CAC/BA,EAAO,KACPoI,EAAW,SAAQ,EAGnBA,EAAW,KAAKpI,EAAO,KAAK,CAEpD,CAAiB,CACjB,EAAe,EAAG,EAAI,CACtB,CAAS,CACT,CAAK,CACL,CCnBO,SAASiN,GAA2BjF,EAAOqE,EAAW,CACzD,OAAOW,GAAsBnC,GAAmC7C,CAAK,EAAGqE,CAAS,CACrF,CCSO,SAASa,GAAUlF,EAAOqE,EAAW,CACxC,GAAIrE,GAAS,KAAM,CACf,GAAIqC,GAAoBrC,CAAK,EACzB,OAAO4E,GAAmB5E,EAAOqE,CAAS,EAE9C,GAAIlC,GAAYnC,CAAK,EACjB,OAAO8E,GAAc9E,EAAOqE,CAAS,EAEzC,GAAIjC,GAAUpC,CAAK,EACf,OAAO6E,GAAgB7E,EAAOqE,CAAS,EAE3C,GAAI/B,GAAgBtC,CAAK,EACrB,OAAOgF,GAAsBhF,EAAOqE,CAAS,EAEjD,GAAI1B,GAAW3C,CAAK,EAChB,OAAO+E,GAAiB/E,EAAOqE,CAAS,EAE5C,GAAIpB,GAAqBjD,CAAK,EAC1B,OAAOiF,GAA2BjF,EAAOqE,CAAS,CAEzD,CACD,MAAM7B,GAAiCxC,CAAK,CAChD,CCjCO,SAASnF,GAAKmF,EAAOqE,EAAW,CACnC,OAAOA,EAAYa,GAAUlF,EAAOqE,CAAS,EAAInB,GAAUlD,CAAK,CACpE,CCFO,SAASmF,GAAIC,EAAStM,EAAS,CAClC,OAAOgI,GAAQ,SAAUR,EAAQF,EAAY,CACzC,IAAI/D,EAAQ,EACZiE,EAAO,UAAUW,GAAyBb,EAAY,SAAUvI,EAAO,CACnEuI,EAAW,KAAKgF,EAAQ,KAAKtM,EAASjB,EAAOwE,GAAO,CAAC,CACxD,CAAA,CAAC,CACV,CAAK,CACL,CCyCO,MAAMgJ,EAAgB,CAC3B,cAAe,kBACf,gBAAiB,oBACjB,aAAc,iBACd,aAAc,iBACd,aAAc,iBACd,eAAgB,mBAChB,YAAa,gBACb,cAAe,kBACf,cAAe,kBACf,gBAAiB,oBACjB,aAAc,iBACd,aAAc,iBACd,aAAc,iBACd,eAAgB,mBAChB,YAAa,gBACb,aAAc,iBACd,gBAAiB,mBACnB,EAEaC,EAAwBjN,GAAa,CAChD,KAAM,wBACN,KAAOkN,GAAW,CACV,MAAAC,EAA2BD,EAAO,MAA8C,CACpF,KAAM,0BAAA,CACP,EAEKE,EAA6BF,EAAO,QAAQ,CAChD,KAAM,6BACN,KAAM,CAAC,CAAC,EAAG5P,IACF6P,EAAyB7P,CAAK,CACvC,CACD,EAEK+P,EAA0BH,EAAO,MAAwC,CAC7E,KAAM,yBAAA,CACP,EAEKI,EAA4BJ,EAAO,QAAQ,CAC/C,KAAM,4BACN,KAAM,CAAC,CAAC,EAAG5P,IACF+P,EAAwB/P,CAAK,CACtC,CACD,EAEKiQ,EAA0BL,EAAO,MAA6C,CAClF,KAAM,yBAAA,CACP,EAEKM,EAA4BN,EAAO,QAAQ,CAC/C,KAAM,4BACN,KAAM,CAAC,CAAC,EAAG5P,IACFiQ,EAAwBjQ,CAAK,CACtC,CACD,EAEKmQ,EAA0BP,EAAO,MAA6C,CAClF,KAAM,yBAAA,CACP,EAEKQ,EAA4BR,EAAO,QAAQ,CAC/C,KAAM,4BACN,KAAM,CAAC,CAAC,EAAG5P,IACFmQ,EAAwBnQ,CAAK,CACtC,CACD,EAEKqQ,EAA6BT,EAAO,MAA2C,CACnF,KAAM,4BAAA,CACP,EAEKU,EAA+BV,EAAO,QAAQ,CAClD,KAAM,+BACN,KAAM,CAAC,CAAC,EAAG5P,IACFqQ,EAA2BrQ,CAAK,CACzC,CACD,EAEKuQ,EAA2BX,EAAO,MAAyC,CAC/E,KAAM,0BAAA,CACP,EAEKY,EAA6BZ,EAAO,QAAQ,CAChD,KAAM,6BACN,KAAM,CAAC,CAAC,EAAG5P,IACFuQ,EAAyBvQ,CAAK,CACvC,CACD,EAEM,MAAA,CACL,QAAS,CACP,2BAAA8P,EACA,0BAAAE,EACA,0BAAAE,EACA,0BAAAE,EACA,6BAAAE,EACA,2BAAAE,CACF,EACA,MAAO,CACL,yBAAAX,EACA,wBAAAE,EACA,wBAAAE,EACA,wBAAAE,EACA,2BAAAE,EACA,yBAAAE,CACF,CAAA,CAEJ,CACF,CAAC,EAWYE,EAAiBpG,GACxBA,EAAM,MACDA,EAAM,MAAM,OAAO,aAAeA,EAAM,YAE1CA,EAAM,YAGTqG,GAAkBnR,GAAgC,OACtD,QAAQK,EAAAL,EAAQ,aAAR,KAAAK,EAAsB,CAAA,GAC3B,OAAQ+Q,GAAiD,CAAC,CAACA,CAAS,EACpE,IAAKA,GAAc,CACZ,KAAA,CAAE,WAAAC,KAAeC,CAAA,EAAStR,EAChC,OAAOoR,EAAUE,CAAI,CAAA,CACtB,CACL,EAEaC,GAA0BvR,GAAgC,CACrE,IAAIqR,EAAmC,KAEvC,MAAMG,EAAgB,KACfH,IACHA,EAAaF,GAAenR,CAAO,GAG9BqR,GAyHF,MAAA,CACL,kBAvHwB,IAAM,CAC9B,GAAIA,EAAY,CACd,UAAWD,KAAaC,EACtBD,EAAU,QAAQ,EAGPC,EAAA,IACf,CAAA,EAiHA,qBA9G2B,CAC3BI,EACAC,IACG,CACC,GAAAR,EAAcQ,EAAc,MAAM,EACzB,UAAAN,KAAaI,IAAiB,CACvC,MAAMG,EAAkBP,EAAU,UAAUhB,EAAuB,CAAA,EAEzDgB,EAAA,KACRO,EAAgB,QAAQ,2BAA2B,CACjD,KAAAF,EACA,QAASC,CAAA,CACV,CAAA,CAEL,CACF,EAgGA,oBA7F0B,CAC1BD,EACAG,IACG,CACC,GAAAV,EAAcU,EAAa,KAAK,EACvB,UAAAR,KAAaI,IAAiB,CACvC,MAAMG,EAAkBP,EAAU,UAAUhB,EAAuB,CAAA,EAEzDgB,EAAA,KACRO,EAAgB,QAAQ,0BAA0B,CAChD,KAAAF,EACA,QAASG,CAAA,CACV,CAAA,CAEL,CACF,EA+EA,oBA5E0B,CAC1BH,EACAI,IACG,CACC,GAAAX,EAAcW,EAAa,KAAK,EACvB,UAAAT,KAAaI,IAAiB,CACvC,MAAMG,EAAkBP,EAAU,UAAUhB,EAAuB,CAAA,EAEzDgB,EAAA,KACRO,EAAgB,QAAQ,0BAA0B,CAChD,KAAAF,EACA,QAASI,CAAA,CACV,CAAA,CAEL,CACF,EA8DA,qBAvB2B,CAC3BJ,EACAK,IACG,CACC,GAAAZ,EAAcY,EAAc,MAAM,EACzB,UAAAV,KAAaI,IAAiB,CACvC,MAAMG,EAAkBP,EAAU,UAAUhB,EAAuB,CAAA,EAEzDgB,EAAA,KACRO,EAAgB,QAAQ,2BAA2B,CACjD,KAAAF,EACA,QAASK,CAAA,CACV,CAAA,CAEL,CACF,EASA,oBA5D0B,CAC1BL,EACAM,IACG,CACC,GAAAb,EAAca,EAAY,KAAK,EACtB,UAAAX,KAAaI,IAAiB,CACvC,MAAMG,EAAkBP,EAAU,UAAUhB,EAAuB,CAAA,EAEzDgB,EAAA,KACRO,EAAgB,QAAQ,0BAA0B,CAChD,KAAAF,EACA,OAAQM,CAAA,CACT,CAAA,CAEL,CACF,EA8CA,uBA3C6B,CAC7BN,EACAO,IACG,CACC,GAAAd,EAAcc,EAAc,OAAO,EAC1B,UAAAZ,KAAaI,IAAiB,CACvC,MAAMG,EAAkBP,EAAU,UAAUhB,EAAuB,CAAA,EAEzDgB,EAAA,KACRO,EAAgB,QAAQ,6BAA6B,CACnD,KAAAF,EACA,OAAQO,CAAA,CACT,CAAA,CAEL,CACF,CA4BA,CAEJ,ECnRA,IAAIC,EAAM,EAsFG,MAAAC,GAAelS,GAAiC,CAC3D,MAAMyI,EAAS,CACb,GAAGzI,CAAA,EAGCmS,EAAmBZ,GAAuB9I,CAAM,EAEhD2J,MAAqB,IAIrBC,MAAqB,IACrBC,MAAsB,IAEtBC,MAAuB,IAEvBC,MAA2B,QAE3BC,EAAqB/P,GAA+B,OACxD,UAAWgQ,KAAcrS,EAAAoI,EAAO,UAAP,KAAApI,EAAkB,CAAA,EACrC,GAAAqS,EAAW,SAAWhQ,EACxB,OAAOgQ,EAAW,MAGtB,OAAOhQ,EAAO,OAAA,EAGViQ,EAAuBjQ,GAAoD,CACzE,MAAAkQ,EAAgBJ,EAAqB,IAAI9P,CAAM,EAErD,GAAIkQ,EACK,OAAAA,EAGH,MAAAC,EAAeJ,EAAe/P,CAAM,EAEpCoQ,EAA+C,CACnD,GAAIb,IACJ,KAAM,sBACN,OAAAvP,EACA,aAAAmQ,CAAA,EAGmB,OAAAL,EAAA,IAAI9P,EAAQoQ,CAAoB,EAE9CA,CAAA,EAGHC,EAA4BrQ,GACzBiQ,EAAiBjQ,CAAM,EAAE,aAG5BsQ,MAAwB,QAKxBC,EAAyB3R,GAA0C,OACjE,MAAAhC,EAAM0T,EAAkB,IAAI1R,CAAS,EAE3C,GAAIhC,EACK,OAAAA,EAGH,MAAA4T,EAAY5R,EAAU,MAAM,UAC5B6R,EAAY,SAAS7R,EAAU,MAAM,WAAW4R,MAAa7S,EAAAiB,EAAU,MAAV,KAAAjB,EAAiB,KAElE,OAAA2S,EAAA,IAAI1R,EAAW6R,CAAS,EAEnCA,CAAA,EAGHC,EAAuDC,GAAiD,OACtG,MAAA/T,EAAM0T,EAAkB,IAAIK,CAAW,EAE7C,GAAI/T,EACK,OAAAA,EAGH,MAAAgU,EAAYD,EAAY,MAAM,UAC9BE,GAAYlT,EAAA,KAAK,UAAUgT,EAAY,GAAG,IAA9B,KAAAhT,EAAmC,GAC/C8S,EAAY,SAASE,EAAY,MAAM,WAAWC,KAAaC,IAEnD,OAAAP,EAAA,IAAIK,EAAaF,CAAS,EAErCA,CAAA,EAGHK,EACJC,GACW,OACL,MAAAnU,EAAM0T,EAAkB,IAAIS,CAAY,EAE9C,GAAInU,EACK,OAAAA,EAGH,MAAAoU,EAAaD,EAAa,OAAO,WACjCF,GAAYlT,EAAA,KAAK,UAAUoT,EAAa,GAAG,IAA/B,KAAApT,EAAoC,GAChD8S,EAAY,UAAUM,EAAa,OAAO,YAAYC,KAAcH,IAExD,OAAAP,EAAA,IAAIS,EAAcN,CAAS,EAEtCA,CAAA,EAGHQ,EAAqD9R,GAA4C,CAC/F,MAAAvC,EAAM0T,EAAkB,IAAInR,CAAU,EAE5C,GAAIvC,EACK,OAAAA,EAGH,MAAAsU,EAAa/R,EAAW,OAAO,WAC/BsR,EAAY,UAAUtR,EAAW,OAAO,YAAY+R,KAAc/R,EAAW,MAEjE,OAAAmR,EAAA,IAAInR,EAAYsR,CAAS,EAEpCA,CAAA,EAGHU,GACJ/I,GAMIA,EAAM,OAAS,kBACVmI,EAAmBnI,CAAK,EACtBA,EAAM,OAAS,oBACjBsI,EAAmBtI,CAAK,EACtBA,EAAM,OAAS,mBACjB6I,EAAoB7I,CAAK,EAE3B0I,EAAoB1I,CAAK,EAG5BgJ,OAA0B,QAE1BC,GAAoB1S,GACpB,OAAOA,EAAM,SAAY,WACnBA,EAAM,UAETA,EAAM,QAGT2S,GAAyB1S,GAAyD,CACtF,MAAMoQ,EAAgBuC,EAAiB3S,EAAU,MAAM,KAAK,EACtDhC,EAAM2T,EAAmB3R,CAAS,EAElC4S,EAAeH,GAAczS,EAAU,KAAK,EAE5CsQ,EAAsC,CAC1C,GAAIK,IACJ,KAAM,qBACN,MAAO3Q,EAAU,MACjB,IAAAhC,EACA,aAAA4U,EACA,kBAAmB,GAAI,EAGX,OAAAxC,EAAA,SAAS,IAAIpS,EAAKsS,CAAY,EACxBkC,GAAA,IAAIxS,EAAWsQ,CAAY,EAE9BO,EAAA,oBAAoBhC,EAAc,aAAcyB,CAAY,EAEtEA,CAAA,EAGHuC,GAA0BvC,GAAwC,CACtE,MAAMF,EAAgBuC,EAAiBrC,EAAa,MAAM,KAAK,EAE3DF,EAAc,SAAS,IAAIE,EAAa,GAAG,IAGlCA,EAAA,aAAemC,GAAcnC,EAAa,KAAK,EAC5DF,EAAc,SAAS,IAAIE,EAAa,IAAKA,CAAY,EACxCO,EAAA,oBAAoBhC,EAAc,YAAayB,CAAY,EAAA,EAGxEwC,EAAsB9S,GAAyD,CACnF,MAAMoQ,EAAgBuC,EAAiB3S,EAAU,MAAM,KAAK,EACtDhC,EAAM2T,EAAmB3R,CAAS,EAClCsQ,EAAeF,EAAc,SAAS,IAAIpS,CAAG,EAEnD,GAAIsS,EACK,OAAAA,EAGH,MAAAyC,EAAgBP,GAAoB,IAAIxS,CAAS,EAEvD,OAAI+S,GACFF,GAAoBE,CAAa,EAC1BA,GAGFL,GAAmB1S,CAAS,CAAA,EAG/BgT,OAA2B,QAE3BC,OAA6B,QAE7BC,GAAwD5S,GAA4B,CACxF,GAAI,CAAC2S,GAAuB,IAAI3S,CAAM,IACb2S,GAAA,IAAI3S,EAAQ,EAAI,EACnCA,EAAO,gBACE,UAAA6S,KAAU7S,EAAO,eAC1B8S,GAAiB9S,EAAOA,EAAO,IAAI6S,CAAM,CAAC,EAAGA,CAAM,CAGzD,EAGIE,GACJ9S,GAC2B,CAC3B,MAAM6P,EAAgBuC,EAAiBpS,EAAW,OAAO,KAAK,EACxDvC,EAAMuU,GAAchS,CAAU,EAE9B+S,EAA2C,CAC/C,GAAI3C,IACJ,KAAM,sBACN,OAAQpQ,EAAW,OACnB,IAAAvC,EACA,cAAe,KACf,kBAAmB,GAAI,EAGX,OAAAoS,EAAA,UAAU,IAAIpS,EAAKsV,CAAgB,EAC5BN,GAAA,IAAIzS,EAAY+S,CAAgB,EAErDJ,GAAuB3S,EAAW,MAAM,EAEvBsQ,EAAA,qBAAqBhC,EAAc,cAAeyE,CAAgB,EAE5EA,CAAA,EAGHC,GAAsD/C,GAA0C,CACpG,MAAMJ,EAAgBuC,EAAiBnC,EAAc,OAAO,KAAK,EAE7DJ,EAAc,UAAU,IAAII,EAAc,GAAG,IAIjDA,EAAc,cAAgB,KAE9BJ,EAAc,UAAU,IAAII,EAAc,IAAKA,CAAa,EAC3CK,EAAA,qBAAqBhC,EAAc,aAAc2B,CAAa,EAAA,EAG3EgD,EAAkDjT,GAA4D,CAClH,MAAM6P,EAAgBuC,EAAiBpS,EAAW,OAAO,KAAK,EACxDvC,EAAMuU,GAAchS,CAAU,EAC9BiQ,EAAgBJ,EAAc,UAAU,IAAIpS,CAAG,EAErD,GAAIwS,EACK,OAAAA,EAGH,MAAAuC,EAAgBC,GAAqB,IAAIzS,CAAU,EAEzD,OAAIwS,GACFQ,GAAqBR,CAAa,EAC3BA,GAGFM,GAAoB9S,CAAU,CAAA,EAGjCkT,OAA0B,QAE1BC,GAAyC9U,GAAuD,CAC9F,MAAAwR,EAAgBuC,EAAiB/T,EAAM,KAAK,EAE5C+U,EAAmC,CACvC,IAAKC,EAAsB,GAAA,EAGvBzI,EAAU,IAAID,EAEd/B,EAAagC,EAAQ,KACzBwD,GAAK9P,GACCD,EAAM,KACDA,EAAM,KAAK+U,EAAc9U,CAAG,EAE9BA,CACR,CAAA,EAEGkU,EAAgBU,GAAoB,IAAI7U,CAAK,EAE7CiV,EAAe,OAAO,OAAOd,GAAA,KAAAA,EAAiB,CAAA,EAAI,CACtD,GAAIpC,IACJ,KAAM,qBACN,MAAA/R,EACA,QAAAuM,EACA,WAAAhC,EACA,SAAU,CAAA,CACiB,EAEf,OAAAiH,EAAA,SAAS,IAAIxR,EAAOiV,CAAY,EAC1BJ,GAAA,IAAI7U,EAAOiV,CAAY,EAEpCA,CAAA,EAGHC,EAAsClV,GAAuD,OAI1F,OAFcG,EADC4T,EAAiB/T,EAAM,KAAK,EACf,SAAS,IAAIA,CAAK,IAAhC,KAAAG,EAAqC2U,GAAmB9U,CAAK,CAE3E,EAGHmV,OAA0B,QAE1BC,GACJjC,GAC6B,CAC7B,MAAM3B,EAAgBuC,EAAiBZ,EAAY,MAAM,KAAK,EACxD/T,EAAM8T,EAAmBC,CAAW,EAEpC5G,EAAU,IAAID,EACd/B,EAAagC,EAAQ,eACrB8I,MAA2D,IAE3DC,EAAsB,CAC1B,GAAIvD,IACJ,KAAM,qBACN,MAAOoB,EAAY,MACnB,IAAKA,EAAY,IACjB,IAAA/T,EACA,YAAAiW,EACA,kBAAmB,IACnB,QAAA9I,EACA,WAAAhC,EACA,SAAU,EACV,OAAQ,UACR,mBAAoB,GAAI,EAGpB,CAAE,MAAAvI,CAAU,EAAAmR,EAEZoC,GAAmC,CACvC,IAAM3K,GAAsF,CACtF,GAAA0K,EAAoB,cAAgBD,EAC/B,OAAAL,EAAsB,IAAIpK,CAAK,EAGpC,GAAAA,EAAM,OAAS,kBAAmB,CAC9B,MAAA4K,EAAuBtB,EAAgBtJ,CAAK,EAE9B,OAAA0K,EAAA,YAAY,IAAIE,CAAoB,EACnCA,EAAA,cAAc,IAAIF,CAAmB,EAEnDN,EAAsB,IAAIpK,CAAK,CACxC,CAEI,GAAAA,EAAM,OAAS,mBAAoB,CAC/B,MAAA6K,EAAwBb,EAAiBhK,CAAK,EAEhC,OAAA0K,EAAA,YAAY,IAAIG,CAAqB,EACnCA,EAAA,cAAc,IAAIH,CAAmB,EAEpDN,EAAsB,IAAIpK,CAAK,CACxC,CAEI,GAAAA,EAAM,OAAS,oBAAqB,CAChC,MAAA8K,EAAuBC,EAAgB/K,CAAK,EAE9B,OAAA0K,EAAA,YAAY,IAAII,CAAoB,EACnCA,EAAA,cAAc,IAAIJ,CAAmB,EAEnDN,EAAsB,IAAIpK,CAAK,CACxC,CAEO,OAAAoK,EAAsB,IAAIpK,CAAK,CACxC,CAAA,EAGI+H,GAAe3Q,EAAM,KAAKuT,GAAcpC,EAAY,GAAG,EAE7D,OAAAmC,EAAoB,aAAe3C,GAErBnB,EAAA,SAAS,IAAIpS,EAAKkW,CAAmB,EAC/BH,GAAA,IAAIhC,EAAamC,CAAmB,EAEvCrD,EAAA,oBAAoBhC,EAAc,aAAcqF,CAAmB,EAE7EA,CAAA,EAGHM,GAAwDjE,GAA2C,CACvG,MAAMH,EAAgBuC,EAAiBpC,EAAa,MAAM,KAAK,EAE/D,GAAIH,EAAc,SAAS,IAAIG,EAAa,GAAG,EAC7C,OAGI,MAAApF,EAAU,IAAID,EACd/B,EAAagC,EAAQ,eAE3BoF,EAAa,OAAS,UACtBA,EAAa,QAAUpF,EACvBoF,EAAa,WAAapH,EAC1BiH,EAAc,SAAS,IAAIG,EAAa,IAAKA,CAAY,EAE9C,UAAAkE,KAAYlE,EAAa,YAE9B,GADKkE,EAAA,cAAc,IAAIlE,CAAY,EACnCkE,EAAS,OAAS,qBACpBD,GAAoBC,CAAQ,UACnBA,EAAS,OAAS,sBAC3BlB,GAAqBkB,CAAQ,UACpBA,EAAS,OAAS,qBAC3B5B,GAAoB4B,CAAQ,MAEtB,OAAA,IAAI,MAAM,qBAAqBA,GAAU,EAInDC,GAAmBnE,CAAY,EACdM,EAAA,oBAAoBhC,EAAc,YAAa0B,CAAY,CAAA,EAGxEgE,EACJxC,GAC6B,CAC7B,MAAM3B,EAAgBuC,EAAiBZ,EAAY,MAAM,KAAK,EACxD/T,EAAM8T,EAAmBC,CAAW,EACpCxB,EAAeH,EAAc,SAAS,IAAIpS,CAAG,EAEnD,GAAIuS,EACK,OAAAA,EAGH,MAAAwC,EAAgBgB,GAAoB,IAAIhC,CAAW,EAEzD,OAAIgB,GACFyB,GAAoBzB,CAAa,EAC1BA,GAGFiB,GAAmBjC,CAAW,CAAA,EAGjC4C,OAA2B,QAE3BC,GACJzC,GAC8B,CACxB,MAAAnU,EAAMkU,EAAoBC,CAAY,EAEtC8B,MAA4D,IAE5DY,EAAqC,CACzC,MAAQnW,GAAY,CACZ,MAAAqB,EAAQH,GAAYlB,CAAO,EACjC,OAAAqB,EAAM,MAAQoS,EACPpS,CACT,EACA,OAASrB,GAAY,CACb,MAAA4B,EAASF,GAAa1B,CAAO,EACnC,OAAA4B,EAAO,MAAQ6R,EACR7R,CACT,EACA,MAAQ5B,GAAY,CACZ,MAAAkC,EAAQF,GAAYhC,CAAO,EACjC,OAAAkC,EAAM,MAAQuR,EACPvR,CACT,EACA,MAAQlC,GAAuF,CACvF,MAAAE,EAAQH,GAAYC,CAAO,EACjC,OAAAE,EAAM,MAAQuT,EACPvT,CACT,EACA,QAAUF,GAAY,CACd,MAAAuC,EAAUF,GAAcrC,CAAO,EACrC,OAAAuC,EAAQ,MAAQkR,EACTlR,CACT,EACA,OAAS6T,GAAW,CACbC,EAAqB,SACHA,EAAA,WAAW,KAAKD,CAAM,CAE/C,EACA,QAAUE,GAAmB,CACtBD,EAAqB,SACHA,EAAA,mBAAmB,KAAKC,CAAc,CAE/D,EACA,UAAYC,GAAyB,CAC7B,MAAAC,EAAwBvC,EAAiBsC,CAAoB,EAEnE,OAAAhB,EAAY,IAAIiB,CAAqB,EACfA,EAAA,cAAc,IAAIH,CAAoB,EAExDA,EAAqB,SACvBI,GAAaF,CAAoB,EAG5BC,EAAsB,MAC/B,EACA,UAAY9T,GACHqQ,EAAsBrQ,CAAM,CACrC,EAGI2T,EAAkD,CACtD,GAAIpE,IACJ,KAAM,sBACN,OAAQwB,EAAa,OACrB,IAAI,QAAS,CACJ,OAAApD,CACT,EACA,IAAKoD,EAAa,IAClB,cAAA0C,EACA,aAAA1C,EACA,IAAAnU,EACA,YAAAiW,EACA,kBAAmB,IACnB,WAAY,CAAC,EACb,aAAc,IACd,cAAe,IACf,aAAc,IACd,aAAc,IACd,cAAe,IACf,eAAgB,IAChB,mBAAoB,CAAC,EACrB,eAAgB,CAAC,EACjB,QAAS,GACT,iBAAkB,GAClB,aAAc,EAAA,EAGVlF,EAASzN,GAA8B6Q,EAAa,OAAO,KAAK0C,EAAe1C,EAAa,GAAG,CAAC,EAErF,OAAAlB,EAAA,IAAIjT,EAAK+W,CAAoB,EACzBJ,GAAA,IAAIxC,EAAc4C,CAAoB,EAE1ClE,EAAA,qBAAqBhC,EAAc,cAAekG,CAAoB,EAEvFK,GAAmBL,CAAoB,EAEhCA,CAAA,EAGHK,GACJhF,GACG,CACC,GAAA,EAAC1R,GAAA,MAAAA,EAAS,gBACZ,OAGF,MAAM2W,EAAwB,CAC5B,IAAKzB,EAAsB,GAAA,EAGlB,UAAAoB,KAAkB5E,EAAc,mBACrC,GAAA,OAAO,UAAU,eAAe,KAAK1R,EAAQ,eAAgBsW,EAAe,GAAG,EAAG,CAC9E,MAAAM,EAAO5W,EAAQ,eAAesW,EAAe,KACnDO,EAAoBP,EAAe,QAAQK,EAAuBC,CAAI,CAAC,CACzE,CACF,EAGI3C,EACJR,GAC8B,CACxB,MAAAnU,EAAMkU,EAAoBC,CAAY,EACtC/B,EAAgBa,EAAiB,IAAIjT,CAAG,EAE9C,GAAIoS,EACK,OAAAA,EAGH,MAAA2C,EAAgB4B,GAAqB,IAAIxC,CAAY,EAE3D,GAAIY,EAAe,CACjBA,EAAc,QAAU,GACxBA,EAAc,aAAe,GACZ9B,EAAA,IAAI8B,EAAc,IAAKA,CAAa,EAE1C,UAAAmC,KAAyBnC,EAAc,YAC1BmC,EAAA,cAAc,IAAInC,CAAa,EAGtC,OAAAlC,EAAA,qBAAqBhC,EAAc,aAAckE,CAAa,EACxEA,CACT,CAEA,OAAO6B,GAAoBzC,CAAY,CAAA,EAGnCqD,GAAsDjF,GAA2C,CACrG,MAAMH,EAAgBuC,EAAiBpC,EAAa,MAAM,KAAK,EAE/D,GAAI,EAACH,EAAc,SAAS,IAAIG,EAAa,GAAG,EAIlC,CAAAH,EAAA,SAAS,OAAOG,EAAa,GAAG,EAC9CA,EAAa,QAAQ,WACJM,EAAA,oBAAoBhC,EAAc,eAAgB0B,CAAY,EAEpE,UAAAkF,KAAmBlF,EAAa,YACrC,CAACkF,EAAgB,cAAc,IAAIlF,CAAY,IAGnCkF,EAAA,cAAc,OAAOlF,CAAY,EAE7CkF,EAAgB,OAAS,qBAC3BC,GAA0BD,CAAe,EAChCA,EAAgB,OAAS,sBAClCE,GAA2BF,CAAe,EAE1CG,GAA0BH,CAAe,GAI7CI,GAA2BzF,CAAa,EAAA,EAGpC0F,GACJvF,GAEI,EAAAA,EAAa,SAAW,GAIxBA,EAAa,cAAc,OAAS,GAOpCmF,GAA8DnF,GAA2C,CACzGuF,GAAwBvF,CAAY,GACtCiF,GAAkBjF,CAAY,CAChC,EAGIwF,GAAwBzF,GAAwC,CACpE,MAAMF,EAAgBuC,EAAiBrC,EAAa,MAAM,KAAK,EAE3D,CAACF,EAAc,SAAS,IAAIE,EAAa,GAAG,IAIlCF,EAAA,SAAS,OAAOE,EAAa,GAAG,EAC9CA,EAAa,cAAc,QACVO,EAAA,oBAAoBhC,EAAc,eAAgByB,CAAY,EAAA,EAG3E0F,GAA8B1F,GAC9BA,EAAa,cAAc,OAAS,EAOpCsF,GAAgCtF,GAAwC,CACxE0F,GAAwB1F,CAAY,GACtCyF,GAAkBzF,CAAY,CAChC,EAGI2F,GAA0DzF,GAC1DA,EAAc,cAAc,OAAS,EAOrCmF,GAA4DnF,GAA0C,CACtGyF,GAAyBzF,CAAa,GACxC0F,GAAmB1F,CAAa,CAClC,EAGI0F,GAAoD1F,GAA0C,CAClG,MAAMJ,EAAgBuC,EAAiBnC,EAAc,OAAO,KAAK,EAE7D,CAACJ,EAAc,UAAU,IAAII,EAAc,GAAG,IAIpCJ,EAAA,UAAU,OAAOI,EAAc,GAAG,EAEhDA,EAAc,cAAc,QAC5BA,EAAc,cAAgB,KACbK,EAAA,qBAAqBhC,EAAc,gBAAiB2B,CAAa,EAAA,EAG9E2F,GAAwCtC,GAA2C,CACvF,MAAMzD,EAAgBuC,EAAiBkB,EAAa,MAAM,KAAK,EAE/DA,EAAa,QAAQ,WACPzD,EAAA,SAAS,OAAOyD,EAAa,KAAK,EAEhDgC,GAA2BzF,CAAa,CAAA,EAGpCgG,GAA8CvC,GAC9C,EAAAA,EAAa,SAAW,GAMxBwC,GAAgDxC,GAA2C,CAC3FuC,GAAwBvC,CAAY,GACtCsC,GAAkBtC,CAAY,CAChC,EAGIyC,GACJlG,GACG,CACH,GAAI,CAAAA,EAAc,aAIlB,CAAAA,EAAc,aAAe,GAC7BA,EAAc,QAAU,GAExB,UAAWmG,KAAgBnG,EAAc,UAAU,OAAA,EACjDmG,EAAa,YAAY,EAG3B,UAAW1C,KAAgBzD,EAAc,SAAS,OAAA,EAChD+F,GAAkBtC,CAAY,EAGhC,UAAWtD,KAAgBH,EAAc,SAAS,OAAA,EAChDoF,GAAkBjF,CAAY,EAGhC,UAAWD,KAAgBF,EAAc,SAAS,OAAA,EAChD2F,GAAkBzF,CAAY,EAGhC,UAAWE,KAAiBJ,EAAc,UAAU,OAAA,EAClD8F,GAAmB1F,CAAa,EAGlCJ,EAAc,cAAc,QAC5BA,EAAc,SAAS,QACvBA,EAAc,SAAS,QACvBA,EAAc,SAAS,QACvBA,EAAc,UAAU,QAEPa,EAAA,OAAOb,EAAc,GAAG,EAExBS,EAAA,qBAAqBhC,EAAc,gBAAiBuB,CAAa,EAEvE,UAAA8E,KAAyB9E,EAAc,YAC5C,CAAC8E,EAAsB,cAAc,IAAI9E,CAAa,IAGpC8E,EAAA,cAAc,OAAO9E,CAAa,EACxDyF,GAA2BX,CAAqB,GAClD,EAGIsB,GACJpG,GACY,CAKR,GAJAA,EAAc,cAIdA,EAAc,cAAc,OAAS,EAChC,MAAA,GAQT,UAAWG,KAAgBH,EAAc,SAAS,OAAA,EAC5C,GAAAG,EAAa,SAAW,EACnB,MAAA,GAIX,UAAWsD,KAAgBzD,EAAc,SAAS,OAAA,EAC5C,GAAAyD,EAAa,SAAW,EACnB,MAAA,GAIJ,MAAA,EAAA,EAGHgC,GACJzF,GACG,CACCoG,GAAyBpG,CAAa,GACxCkG,GAAmBlG,CAAa,CAClC,EAGIqG,GAAsBzW,GACL8S,EAAgB9S,CAAS,EAE1B,aAGhB0W,GAAyD3E,GAA4C,CACnG,MAAAxB,EAAegE,EAAgBxC,CAAW,EAEhD,OAAA4E,GAAsBpG,CAAY,EAEbA,EAAa,YAE3B,EAGHqG,GAAkDrW,GAAuC,CACvF,MAAAiQ,EAAgBgD,EAAiBjT,CAAU,EAE7C,GAAAiQ,EAAc,gBAAkB,KAClC,MAAM,IAAI,MAAM,OAAOA,EAAc,UAAUjQ,EAAW,OAAO,gCAAgC,EAGnG,OAAOiQ,EAAc,aAAA,EAGjBoD,EAA+C,CACnD,IAAMpK,GAAsF,CACtF,GAAAA,EAAM,OAAS,kBACjB,OAAOiN,GAAgBjN,CAAK,EAG1B,GAAAA,EAAM,OAAS,oBACjB,OAAOkN,GAAqBlN,CAAK,EAG/B,GAAAA,EAAM,OAAS,mBACjB,OAAOoN,GAAiBpN,CAAK,EAGzB,MAAA,IAAI,MAAM,oCAAoCA,GAAO,CAC7D,EACA,UAAY5K,GAAU,CAChB,GAAAA,EAAM,OAAS,cAEjB,OADqBkV,EAAgBlV,CAAK,EACtB,WACtB,GAAWA,EAAM,OAAS,2BAA4B,CAC9C,MAAAiY,EAAgBvX,GAAwBV,CAAK,EAEnD,OADqBkV,EAAgB+C,CAAa,EAC9B,UACtB,CAEM,MAAA,IAAI,MAAM,sCAAsCjY,GAAO,CAC/D,EACA,UAAYmT,GACWwC,EAAgBxC,CAAW,EAC5B,UACtB,EAGI4E,GAA0DpG,GAA2C,CACrG,GAAAA,EAAa,SAAW,MAC1B,OAGE,GAAAA,EAAa,eAAe,OAAS,EAAG,CAC1C,IAAIuG,EAAe,GAER,UAAArC,KAAYlE,EAAa,eAC9B,GAAAkE,EAAS,OAAS,qBACLqC,EAAA,WACNrC,EAAS,OAAS,sBACZqC,EAAA,WACNrC,EAAS,OAAS,qBACvBA,EAAS,SAAW,OACtBkC,GAAsBlC,CAAQ,EAE5BA,EAAS,SAAW,YACPqC,EAAA,QAGX,OAAA,IAAI,MAAM,wBAAwBrC,GAAU,EAMtD,GAFAlE,EAAa,eAAe,QAExB,CAACuG,EAAc,CACjBvG,EAAa,OAAS,UACtB,MACF,CACF,CAEkBmE,GAAmBnE,CAAY,EAG/CA,EAAa,OAAS,UAEtBA,EAAa,OAAS,SACxB,EAGImE,GAAuDnE,GAA2C,CAChG,KAAA,CAAE,MAAA3P,CAAU,EAAA2P,EAEP,UAAAkE,KAAYlE,EAAa,YAC9B,CAACkE,EAAS,cAAc,IAAIlE,CAAY,IAGnCkE,EAAA,cAAc,OAAOlE,CAAY,EACtCkE,EAAS,cAAc,OAAS,GAClCzD,EAAgB,IAAIyD,CAAQ,GAI1B,MAAAR,MAA2D,IAEjE1D,EAAa,YAAc0D,EAE3B,MAAME,EAAmC,CACvC,IAAM3K,GAAsF,CACtF,GAAA+G,EAAa,cAAgB0D,EACxB,OAAAL,EAAsB,IAAIpK,CAAK,EAGpC,GAAAA,EAAM,OAAS,kBAAmB,CAC9B,MAAA4K,EAAuBtB,EAAgBtJ,CAAK,EAErC,OAAA+G,EAAA,YAAY,IAAI6D,CAAoB,EAC5BA,EAAA,cAAc,IAAI7D,CAAY,EAE5CqD,EAAsB,IAAIpK,CAAK,CACxC,CAEI,GAAAA,EAAM,OAAS,mBAAoB,CAC/B,MAAA6K,EAAwBb,EAAiBhK,CAAK,EAEvC,OAAA+G,EAAA,YAAY,IAAI8D,CAAqB,EAC5BA,EAAA,cAAc,IAAI9D,CAAY,EAE7CqD,EAAsB,IAAIpK,CAAK,CACxC,CAEI,GAAAA,EAAM,OAAS,oBAAqB,CAChC,MAAA8K,EAAuBC,EAAgB/K,CAAK,EAErC,OAAA+G,EAAA,YAAY,IAAI+D,CAAoB,EAC5BA,EAAA,cAAc,IAAI/D,CAAY,EAE5CqD,EAAsB,IAAIpK,CAAK,CACxC,CAEO,OAAAoK,EAAsB,IAAIpK,CAAK,CACxC,CAAA,EAGIuN,EAAWnW,EAAM,KAAKuT,EAAc5D,EAAa,GAAG,EAI1D,OAFgB3P,EAAM,QAAQ2P,EAAa,aAAcwG,CAAQ,EAGxD,IAGTxG,EAAa,aAAewG,EAC5BjG,EAAe,IAAIP,CAAY,EAEdM,EAAA,oBAAoBhC,EAAc,aAAc0B,CAAY,EAEtE,GAAA,EAGHyG,GAAiC,IAAM,CACvC,GAAAhG,EAAgB,OAAS,EAC3B,OAGI,MAAAiG,EAAc,CAAC,GAAGjG,CAAe,EAEvCA,EAAgB,MAAM,EAEtB,UAAWkG,KAAWD,EAChBC,EAAQ,OAAS,qBACnBxB,GAA0BwB,CAAO,EACxBA,EAAQ,OAAS,qBAC1BtB,GAA0BsB,CAAO,EAEjCvB,GAA2BuB,CAAO,EAIPF,IAAA,EAG3BG,GAA8B,IAAM,CACpC,GAAArG,EAAe,OAAS,EAC1B,OAGI,MAAAsG,EAAO,CAAC,GAAGtG,CAAc,EAE/BA,EAAe,MAAM,EAErB,UAAWlL,KAAQwR,EACZtG,EAAe,IAAIlL,CAAI,IACtBA,EAAK,OAAS,qBACXA,EAAA,QAAQ,KAAKA,EAAK,YAAY,EAC1BA,EAAK,OAAS,qBACvByR,GAAUzR,CAAI,GAQQuR,IAAA,EAGxBG,GAAyC/G,GAA2C,CAGpF,GAFJA,EAAa,OAAS,MAElBA,EAAa,cAAc,KAAO,EACzB,UAAAgH,KAAchH,EAAa,cAC/BgH,EAAW,eAAe,IAAIhH,CAAY,IAClCgH,EAAA,eAAe,IAAIhH,CAAY,EAC1C+G,GAAKC,CAAU,QAInBxG,EAAe,IAAIR,CAAY,CACjC,EAGIiH,GAA8B,IAAM,CACpC,GAAAzG,EAAe,OAAS,EAC1B,OAGI,MAAA0G,EAAmB,CAAC,GAAG1G,CAAc,EAE3CA,EAAe,MAAM,EAErB,UAAWR,KAAgBkH,EACzBd,GAAsBpG,CAAY,EAMRiH,IAAA,EAGxBE,GAAS,IAAM,CACSF,KACGR,KACHG,IAAA,EAGxBQ,GAAkB,CAAI3X,EAA+BC,IAAgB,CACnE,MAAAqQ,EAAewC,EAAgB9S,CAAS,EAI9C,GAFgB,CAAAA,EAAU,MAAM,QAAQsQ,EAAa,aAAcrQ,CAAQ,EAM3E,CAAAqQ,EAAa,aAAerQ,EAEX4Q,EAAA,oBAAoBhC,EAAc,aAAcyB,CAAY,EAElE,UAAAiH,KAAcjH,EAAa,cACzBiH,EAAA,eAAe,IAAIjH,CAAY,EAC1CgH,GAAKC,CAAU,EACjB,EAGInE,GAAmB,CAA+B7S,EAAiCC,IAAiB,CAClG,MAAAgQ,EAAgBgD,EAAiBjT,CAAU,EAE3CvC,EADSuC,EAAW,OACP,IAAIC,CAAS,EAE5B,GAAAxC,IAAQuC,EAAW,IACrB,MAAM,IAAI,MAAM,wBAAwBA,EAAW,WAAWvC,GAAK,EAGjE,GAAAwS,EAAc,gBAAkB,KAAM,CACxCA,EAAc,cAAgBhQ,EAC9B,MACF,CAIA,GAFgB,CAAAD,EAAW,OAAO,QAAQiQ,EAAc,cAAehQ,CAAS,EAMhF,CAAAgQ,EAAc,cAAgBhQ,EAEbqQ,EAAA,qBAAqBhC,EAAc,cAAe2B,CAAa,EAErE,UAAA+G,KAAc/G,EAAc,cAC1B+G,EAAA,eAAe,IAAI/G,CAAa,EAC3C8G,GAAKC,CAAU,EACjB,EAGIF,GAAgC5G,GAAyC,CACvE,KAAA,CAAE,MAAA7R,EAAO,IAAAC,CAAQ,EAAA4R,EACjBoD,EAAeC,EAAgBlV,CAAK,EAEzBiS,EAAA,oBAAoBhC,EAAc,aAAc4B,CAAW,EAE/DoD,EAAA,QAAQ,KAAKhV,CAAG,CAAA,EAGzB+Y,GAAuC,CAC3C,IAAKhE,EAAsB,GAAA,EAGvBiE,GAAuCnH,GAA0C,CACpEG,EAAA,uBAAuBhC,EAAc,gBAAiB6B,CAAa,EAE9E,KAAA,CAAE,QAAAzP,EAAS,IAAApC,CAAQ,EAAA6R,EAEnB9H,EAAK3H,EAAQ,KAECsU,EAAA3M,EAAGgP,GAAgB/Y,CAAG,CAAC,CAAA,EAGvC0W,EAAuBuC,GAAgC,CAC3D,GAAI,EAACA,EAID,GAAA,MAAM,QAAQA,CAAM,EACtB,UAAWlS,KAAQkS,EACjBvC,EAAoB3P,CAAI,OAEjBkS,EAAO,OAAS,sBACzBD,GAAoBC,CAAM,EACjBA,EAAO,OAAS,+BACTH,GAAAG,EAAO,UAAWA,EAAO,KAAK,EACrCA,EAAO,OAAS,gCACR1E,GAAA0E,EAAO,WAAYA,EAAO,KAAK,EACvCA,EAAO,OAAS,qBACzBhH,EAAe,IAAIgH,CAAM,CAC3B,EAGIC,GAAiB,CACrBhG,EACAnI,IACiB,CACX,MAAA2G,EAAegE,EAAgBxC,CAAW,EAE1C5I,EAAa,IAAIM,EAAeG,GAAe,CACnD,MAAM2M,EAAehG,EAAa,QAAQ,UAAU3G,CAAU,EAC9D,OAAA2G,EAAa,UAAY,EAElB,IAAM,CACXA,EAAa,UAAY,EACzBgG,EAAa,YAAY,EACrBhG,EAAa,WAAa,GAC5BmF,GAA0BnF,CAAY,CACxC,CACF,CACD,EAEG,OACKpH,EAAW,UAAUS,CAAU,CAGF,EAGlCoO,GAAiB,CACrBpZ,EACAgL,IACiB,CACb,GAAAhL,EAAM,OAAS,cAAe,CAC1B,MAAAiV,EAAeC,EAAgBlV,CAAK,EAgBnC,OAdY,IAAI6K,EAAeG,GAAe,CACnD,MAAM2M,EAAe1C,EAAa,WAAW,UAAUjK,CAAU,EACjE,OAAAiK,EAAa,UAAY,EAClB,IAAM,CACXA,EAAa,UAAY,EACzB0C,EAAa,YAAY,EACrB1C,EAAa,WAAa,GAC5BwC,GAA0BxC,CAAY,CACxC,CACF,CACD,EAE+B,UAAUjK,CAAU,CAE7C,SACEhL,EAAM,OAAS,2BAA4B,CAC9C,MAAAiY,EAAgBvX,GAAwBV,CAAK,EAC5C,OAAAoZ,GAAenB,EAAejN,CAAU,CACjD,CAEM,MAAA,IAAI,MAAM,yBAAyBhL,GAAO,CAAA,EAG5CqZ,GACJ9F,GAEsBQ,EAAiBR,CAAY,EAC9B,OAGjB+F,GAAqC,CACzC,IAAKtE,EAAsB,IAC3B,UAAWA,EAAsB,UACjC,UAAWA,EAAsB,SAAA,EAG7BuE,GAAsBL,GAAyB,CACnDvC,EAAoBuC,CAAM,EACnBJ,IAAA,EAGHvC,GACJhD,GACG,CACG,MAAA/B,EAAgBuC,EAAiBR,CAAY,EAEnD,GAAI,CAAA/B,EAAc,QAIlB,CAAAA,EAAc,QAAU,GAEb,UAAA8E,KAAyB9E,EAAc,YAChD+E,GAAaD,EAAsB,YAAY,EAGtC,UAAAJ,KAAU1E,EAAc,WAAY,CACvC,MAAAgI,EAAetD,EAAO,KAAKoD,EAAa,EAC9C,GAAIE,IAAiB,KACnB,SAEF,MAAM7B,EAAelS,GAAK+T,CAAY,EAAE,UAAUD,EAAkB,EACtD/H,EAAA,UAAU,IAAI0E,EAAQyB,CAAY,CAClD,EAAA,EAGI8B,GACJlG,GACG,CACG,MAAA/B,EAAgBuC,EAAiBR,CAAY,EAEnDmE,GAAmBlG,CAAa,CAAA,EAG5BkI,GAAU,IAAM,CACpBzH,EAAiB,kBAAkB,EAExB,UAAAT,KAAiBa,EAAiB,SAC3CqF,GAAmBlG,CAAa,EAElCa,EAAiB,MAAM,EACvBH,EAAe,MAAM,CAAA,EAGjByH,GACJpG,GACG,CACG,MAAA/B,EAAgBuC,EAAiBR,CAAY,EAEnD,GAAI/B,EAAc,QAChB,MAAM,IAAI,MAAM,UAAU+B,EAAa,OAAO,0CAA0C,EAG1F,GAAI/B,EAAc,iBAChB,OAAOA,EAAc,iBAGjB,MAAAoI,EAAmBC,GAActG,CAAY,EAEnD,OAAA/B,EAAc,iBAAmBoI,EAE1BA,CAAA,EAGHE,GAAiE,CACrE,IAAK9E,EAAsB,GAAA,EAGvB+E,GAA6D,CACjE,IAAK/E,EAAsB,GAAA,EAGvB6E,GAAgB,MACpBtG,GACG,CACG,MAAA/B,EAAgBuC,EAAiBR,CAAY,EAE/C/B,EAAc,mBAIlBA,EAAc,iBAAmB,GAEjC,MAAM,QAAQ,IACZ,MAAM,KAAKA,EAAc,WAAW,EAAE,IAAK8E,GAClCqD,GAAQrD,EAAsB,YAAY,CAClD,CAAA,EAGH,MAAM,QAAQ,IACZ9E,EAAc,mBAAmB,IAAI,MAAO4E,GAAmB,CAC7D,MAAMM,EAAO,MAAMN,EAAe,MAAM2D,EAAyB,EAE7D,GAAA,OAAO,UAAU,eAAe,KAAKvI,EAAc,eAAgB4E,EAAe,GAAG,EACvF,MAAM,IAAI,MAAM,iBAAiBA,EAAe,KAAK,EAGzC5E,EAAA,eAAe4E,EAAe,KAAOM,EAEnD,MAAMsD,EAAgB5D,EAAe,QAAQ0D,GAA6BpD,CAAI,EAC9EC,EAAoBqD,CAAa,CAAA,CAClC,CAAA,EACH,EAGIC,GAAoB,IAAM,CAC9B,MAAMC,EAAiB,CAAA,EAEZ,UAAA1I,KAAiBa,EAAiB,SACpC,OAAA,OAAO6H,EAAgB1I,EAAc,cAAc,EAGrD,OAAA0I,CAAA,EAGHC,GACJ5G,GAEsBQ,EAAiBR,CAAY,EAE9B,eAGjB6G,GAAQlB,GAAyB,CACrCvC,EAAoBuC,CAAM,EACnBJ,IAAA,EAGF,MAAA,CACL,KAAMvQ,EAAO,KACb,UAAA8Q,GACA,aAAA9C,GACA,cAAAkD,GACA,MAAO3B,GACP,KAAAsC,GACA,QAAAV,GACA,QAAAC,GACA,kBAAAM,GACA,wBAAAE,GACA,eAAAhB,GACA,eAAAC,GACA,OAAQzF,EAAA,CAEZ,ECl9Ca0G,GAAS,CACpB,OAAQpX,GACR,OAAQV,GACR,MAAOyP,GACP,MAAOhR,GACP,OAAQQ,GACR,MAAOM,GACP,QAASK,GACT,MAAOtC,GACP,OAAQiD,EACV;;;;;;;;GCnBa,IAAIqB,EAAEmW,EAAgB,QAAC,SAASC,GAAEvU,EAAE3C,EAAE,CAAC,OAAO2C,IAAI3C,IAAQ2C,IAAJ,GAAO,EAAEA,IAAI,EAAE3C,IAAI2C,IAAIA,GAAG3C,IAAIA,CAAC,CAAC,IAAImX,GAAe,OAAO,OAAO,IAA3B,WAA8B,OAAO,GAAGD,GAAE5U,GAAExB,EAAE,SAASc,GAAEd,EAAE,UAAUU,GAAEV,EAAE,gBAAgBb,GAAEa,EAAE,cAAc,SAAS4B,GAAEC,EAAE3C,EAAE,CAAC,IAAID,EAAEC,EAAC,EAAGoB,EAAEkB,GAAE,CAAC,KAAK,CAAC,MAAMvC,EAAE,YAAYC,CAAC,CAAC,CAAC,EAAEoX,EAAEhW,EAAE,GAAG,KAAKE,EAAEF,EAAE,GAAG,OAAAI,GAAE,UAAU,CAAC4V,EAAE,MAAMrX,EAAEqX,EAAE,YAAYpX,EAAE+B,GAAEqV,CAAC,GAAG9V,EAAE,CAAC,KAAK8V,CAAC,CAAC,CAAC,EAAE,CAACzU,EAAE5C,EAAEC,CAAC,CAAC,EAAE4B,GAAE,UAAU,CAAC,OAAAG,GAAEqV,CAAC,GAAG9V,EAAE,CAAC,KAAK8V,CAAC,CAAC,EAASzU,EAAE,UAAU,CAACZ,GAAEqV,CAAC,GAAG9V,EAAE,CAAC,KAAK8V,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACzU,CAAC,CAAC,EAAE1C,GAAEF,CAAC,EAASA,CAAC,CAClc,SAASgC,GAAEY,EAAE,CAAC,IAAI3C,EAAE2C,EAAE,YAAYA,EAAEA,EAAE,MAAM,GAAG,CAAC,IAAI5C,EAAEC,EAAG,EAAC,MAAM,CAACmX,GAAExU,EAAE5C,CAAC,CAAC,MAAC,CAAS,MAAM,EAAE,CAAC,CAAC,SAASoB,GAAEwB,EAAE3C,EAAE,CAAC,OAAOA,EAAC,CAAE,CAAC,IAAIqX,GAAgB,OAAO,QAArB,aAA2C,OAAO,OAAO,UAA5B,aAAoD,OAAO,OAAO,SAAS,eAArC,YAAmDlW,GAAEuB,GAA8B4U,GAAA,qBAAUxW,EAAE,uBAAX,OAAgCA,EAAE,qBAAqBuW,GCPxUE,GAAA,QAAiBN,GCiBNO,MAAAA,GAAqBC,EAAAA,QAAAA,cAAyC,IAA5B,EAMlCC,GAAwB,IAAM,CACnC7R,MAAAA,EAAU8R,qBAAWH,EAAD,EAE1B,GAAI3R,IAAY,KACR,MAAA,IAAI+R,MAAO,sCAAX,EAGD/R,OAAAA,CACR,EAEYgS,GAAiB,IACZH,KACDI,YAcJC,GAAcC,GAA2B,CAC9CC,MAAAA,EAAWC,EAAAA,QAAAA,OAAgCF,EAAMG,KAAhC,EAElBF,EAASG,UACZH,EAASG,QAAUzJ,GAAY,YAAaqJ,EAAQA,EAAMvb,QAAU,CAAA,CAAtC,GAGhC,MAAM0b,EAAQF,EAASG,QAEjBC,EAAmCC,EAAAA,QAAAA,QAAQ,KACxC,CACLR,YAAaK,CAAAA,GAEd,CAACA,CAAD,CAJ6C,EAOzC,OAAAI,GAACf,GAAmB,SAApB,CAA6B,MAAOa,EAApC,SAAmDL,EAAMQ,QAAAA,CAAhE,CACD,EAEYC,GAAiB,SAA2C3I,EAAyC,CAChH,MAAMqI,EAAQN,KAERa,EAAaR,iBAA4B,IAAtB,EAEnBzQ,EAAYkR,sBAAaC,IAC7BF,EAAWN,QAAUQ,EACd,IAAM,CACXF,EAAWN,QAAU,IAAA,GAEtB,CAL0B,CAAA,EAOvBS,EAAcF,EAAAA,QAAAA,YAAY,IACbR,EAAMW,MAAMhJ,CAAZ,EAEhB,CAACqI,EAAOrI,CAAR,CAH4B,EAKzBiJ,EAAQC,GAAAA,QAAAA,qBAAqBvR,EAAWoR,EAAaA,CAAzB,EAE5BI,EAAkBf,iBAA2C,IAArC,EAExBgB,EAAWf,EAAMgB,OAAOrJ,CAAb,EAEjBsJ,OAAAA,EAAAA,QAAAA,UAAU,IACD,IAAM,QACXH,EAAAA,EAAgBb,UAAhBa,MAAAA,EAAyBI,cACzBJ,EAAgBb,QAAU,IAAA,EAE3B,CAACD,EAAOe,CAAR,CALM,EAOTE,EAAAA,QAAAA,UAAU,IAAM,CACVH,EAAgBb,UAAY,OAGhCa,EAAgBb,QAAUD,EAAMrC,eAAehG,EAAa,IAAM,QAChE4I,EAAAA,EAAWN,UAAXM,MAAAA,EAAAA,KAAAA,EAAA,CADwB,EAAA,EAGzB,CAACP,EAAOrI,CAAR,CAPM,EASFiJ,CACR,EAEYO,GAAiB,SAC5B3c,EACA4c,EACA,CACA,MAAMpB,EAAQN,KACR2B,EAActB,iBAAOqB,CAAD,EAE1BH,EAAAA,QAAAA,UAAU,IAAM,CACdI,EAAYpB,QAAUmB,CAAAA,CADf,EAITH,EAAAA,QAAAA,UAAU,IAAM,CACd,MAAM9E,EAAe6D,EAAMpC,eAAepZ,EAAiB0W,GAAA,CACzDmG,EAAYpB,QAAQ/E,CAApB,CAAA,CADmB,EAGrB,MAAO,IAAM,CACXiB,EAAa+E,YAAb,CAAA,CACD,EACA,CAAC1c,EAAOwb,CAAR,CAPM,CAQV,EAEYsB,GAAgB,UAAY,CAGvC,OAFc5B,KAEDd,IACd,EAEY2C,GAAkB,SAC7BxJ,EACA,CACA,MAAMiI,EAAQN,KACR/K,EAASqL,EAAMnC,UAAU9F,CAAhB,EAEfkJ,OAAAA,EAAAA,QAAAA,UAAU,IAAM,CACdjB,EAAMjF,aAAahD,CAAnB,CAAA,EACC,CAACiI,EAAOjI,CAAR,CAFM,EAIFpD,CACR"}