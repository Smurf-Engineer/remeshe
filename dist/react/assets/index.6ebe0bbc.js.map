{"version":3,"file":"index.6ebe0bbc.js","sources":["../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/scheduler/performanceTimestampProvider.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/scheduler/animationFrameProvider.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/observable/dom/animationFrames.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/observable/of.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/observable/never.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/operators/pairwise.js","../../../node_modules/.pnpm/rxjs@7.5.5/node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js","../../../projects/domains/src/7guis/Counter.ts","../../../projects/react-demos/src/7guis/Counter.tsx","../../../projects/domains/src/7guis/TemperatureConverter.ts","../../../projects/react-demos/src/7guis/TemperatureConverter.tsx","../../../projects/domains/src/7guis/FlightBooker.ts","../../../projects/react-demos/src/7guis/FlightBooker.tsx","../../../projects/domains/src/7guis/Timer.ts","../../../projects/react-demos/src/7guis/Timer.tsx","../../../projects/domains/src/7guis/CRUD.ts","../../../projects/react-demos/src/7guis/OuterClickWrapper.tsx","../../../projects/react-demos/src/7guis/CRUD.tsx","../../../projects/domains/src/7guis/CircleDrawer.ts","../../../projects/react-demos/src/7guis/CircleDrawer.tsx","../../../projects/domains/src/7guis/Cells.ts","../../../projects/react-demos/src/7guis/Cells.tsx","../../../projects/react-demos/src/7guis/index.tsx"],"sourcesContent":["export var performanceTimestampProvider = {\n    now: function () {\n        return (performanceTimestampProvider.delegate || performance).now();\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=performanceTimestampProvider.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { Subscription } from '../Subscription';\nexport var animationFrameProvider = {\n    schedule: function (callback) {\n        var request = requestAnimationFrame;\n        var cancel = cancelAnimationFrame;\n        var delegate = animationFrameProvider.delegate;\n        if (delegate) {\n            request = delegate.requestAnimationFrame;\n            cancel = delegate.cancelAnimationFrame;\n        }\n        var handle = request(function (timestamp) {\n            cancel = undefined;\n            callback(timestamp);\n        });\n        return new Subscription(function () { return cancel === null || cancel === void 0 ? void 0 : cancel(handle); });\n    },\n    requestAnimationFrame: function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var delegate = animationFrameProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.requestAnimationFrame) || requestAnimationFrame).apply(void 0, __spreadArray([], __read(args)));\n    },\n    cancelAnimationFrame: function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var delegate = animationFrameProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.cancelAnimationFrame) || cancelAnimationFrame).apply(void 0, __spreadArray([], __read(args)));\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=animationFrameProvider.js.map","import { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\nexport function animationFrames(timestampProvider) {\n    return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\nfunction animationFramesFactory(timestampProvider) {\n    var schedule = animationFrameProvider.schedule;\n    return new Observable(function (subscriber) {\n        var subscription = new Subscription();\n        var provider = timestampProvider || performanceTimestampProvider;\n        var start = provider.now();\n        var run = function (timestamp) {\n            var now = provider.now();\n            subscriber.next({\n                timestamp: timestampProvider ? now : timestamp,\n                elapsed: now - start,\n            });\n            if (!subscriber.closed) {\n                subscription.add(schedule(run));\n            }\n        };\n        subscription.add(schedule(run));\n        return subscription;\n    });\n}\nvar DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n//# sourceMappingURL=animationFrames.js.map","import { popScheduler } from '../util/args';\nimport { from } from './from';\nexport function of() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = popScheduler(args);\n    return from(args, scheduler);\n}\n//# sourceMappingURL=of.js.map","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\nexport var NEVER = new Observable(noop);\nexport function never() {\n    return NEVER;\n}\n//# sourceMappingURL=never.js.map","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector) {\n    if (keySelector === void 0) { keySelector = identity; }\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate(function (source, subscriber) {\n        var previousKey;\n        var first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n//# sourceMappingURL=distinctUntilChanged.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function pairwise() {\n    return operate(function (source, subscriber) {\n        var prev;\n        var hasPrev = false;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var p = prev;\n            prev = value;\n            hasPrev && subscriber.next([p, value]);\n            hasPrev = true;\n        }));\n    });\n}\n//# sourceMappingURL=pairwise.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate(function (source, subscriber) {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, function () { return subscriber.complete(); }, noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=takeUntil.js.map","import { Remesh } from 'remesh'\r\n\r\nexport const CounterDomain = Remesh.domain({\r\n  name: 'CounterDomain',\r\n  impl: (domain) => {\r\n    const CountState = domain.state({\r\n      name: 'CounterState',\r\n      default: 0,\r\n    })\r\n\r\n    const CountQuery = domain.query({\r\n      name: 'CounterQuery',\r\n      impl: ({ get }) => {\r\n        return get(CountState())\r\n      },\r\n    })\r\n\r\n    const IncreCommand = domain.command({\r\n      name: 'IncreCommand',\r\n      impl: ({ get }) => {\r\n        const count = get(CountState())\r\n        return CountState().new(count + 1)\r\n      },\r\n    })\r\n\r\n    return {\r\n      query: {\r\n        CountQuery,\r\n      },\r\n      command: {\r\n        IncreCommand,\r\n      },\r\n    }\r\n  },\r\n})\r\n","import { useRemeshDomain, useRemeshQuery } from 'remesh-react'\r\n\r\nimport { CounterDomain } from 'remesh-domains-for-demos/dist/7guis/Counter'\r\n\r\nexport const CounterApp = () => {\r\n  const counterDomain = useRemeshDomain(CounterDomain())\r\n  const count = useRemeshQuery(counterDomain.query.CountQuery())\r\n\r\n  const handleIncre = () => {\r\n    counterDomain.command.IncreCommand()\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 400,\r\n        border: '1px solid #eaeaea',\r\n        boxSizing: 'border-box',\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <h2>Counter</h2>\r\n      <input type=\"number\" readOnly value={count} />\r\n      <label>\r\n        <button onClick={handleIncre}>Count </button>{' '}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n","import { Remesh } from 'remesh'\r\n\r\nexport const TemperatureConverterDomain = Remesh.domain({\r\n  name: 'TemperatureConverterDomain',\r\n  impl: (domain) => {\r\n    const CelsiusState = domain.state({\r\n      name: 'CelsiusState',\r\n      default: '',\r\n    })\r\n\r\n    const CelsiusQuery = domain.query({\r\n      name: 'CelsiusQuery',\r\n      impl: ({ get }) => {\r\n        return get(CelsiusState())\r\n      },\r\n    })\r\n\r\n    const FahrenheitState = domain.state({\r\n      name: 'FahrenheitState',\r\n      default: '',\r\n    })\r\n\r\n    const FahrenheitQuery = domain.query({\r\n      name: 'FahrenheitQuery',\r\n      impl: ({ get }) => {\r\n        return get(FahrenheitState())\r\n      },\r\n    })\r\n\r\n    const ResetBothCommand = domain.command({\r\n      name: 'ResetBothCommand',\r\n      impl: () => {\r\n        return [CelsiusState().new(''), FahrenheitState().new('')]\r\n      },\r\n    })\r\n\r\n    const UpdateCelsiusCommand = domain.command({\r\n      name: 'UpdateCelsiusCommand',\r\n      impl: ({}, input: string) => {\r\n        if (input === '') {\r\n          return ResetBothCommand()\r\n        }\r\n\r\n        const celsius = parseFloat(input)\r\n\r\n        if (Number.isNaN(celsius)) {\r\n          return CelsiusState().new(input)\r\n        }\r\n\r\n        const fahrenheit = celsius * (9 / 5) + 32\r\n\r\n        return [CelsiusState().new(input), FahrenheitState().new(fahrenheit.toString())]\r\n      },\r\n    })\r\n\r\n    const UpdateFahrenheitCommand = domain.command({\r\n      name: 'UpdateFahrenheitCommand',\r\n      impl: ({}, input: string) => {\r\n        if (input === '') {\r\n          return ResetBothCommand()\r\n        }\r\n\r\n        const fahrenheit = parseFloat(input)\r\n\r\n        if (Number.isNaN(fahrenheit)) {\r\n          return FahrenheitState().new(input)\r\n        }\r\n\r\n        const celsius = (fahrenheit - 32) * (5 / 9)\r\n\r\n        return [CelsiusState().new(celsius.toString()), FahrenheitState().new(input)]\r\n      },\r\n    })\r\n\r\n    return {\r\n      query: {\r\n        CelsiusQuery,\r\n        FahrenheitQuery,\r\n      },\r\n      command: {\r\n        UpdateCelsiusCommand,\r\n        UpdateFahrenheitCommand,\r\n      },\r\n    }\r\n  },\r\n})\r\n","import React from 'react'\r\nimport { useRemeshDomain, useRemeshQuery } from 'remesh-react'\r\n\r\nimport { TemperatureConverterDomain } from 'remesh-domains-for-demos/dist/7guis/TemperatureConverter'\r\n\r\nexport const TemperatureConverterApp = () => {\r\n  const domain = useRemeshDomain(TemperatureConverterDomain())\r\n  const celsius = useRemeshQuery(domain.query.CelsiusQuery())\r\n  const fahrenheit = useRemeshQuery(domain.query.FahrenheitQuery())\r\n\r\n  const handleCelsius = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    domain.command.UpdateCelsiusCommand(event.target.value)\r\n  }\r\n\r\n  const handleFahrenheit = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    domain.command.UpdateFahrenheitCommand(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        border: '1px solid #eaeaea',\r\n        boxSizing: 'border-box',\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <h2>Temperature Converter</h2>\r\n      <div>\r\n        <input type=\"text\" value={celsius} onChange={handleCelsius} />\r\n        <label htmlFor=\"\">Celsius</label>=\r\n        <input type=\"text\" value={fahrenheit} onChange={handleFahrenheit} />\r\n        <label htmlFor=\"\">Fahrenheit</label>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Remesh } from 'remesh'\r\n\r\nexport type FlightBookerOption = 'one-way' | 'return'\r\n\r\nexport type FlightBookerStatus = {\r\n  startDate: 'valid' | 'invalid'\r\n  endDate: 'valid' | 'invalid' | 'disabled' | 'enabled'\r\n  bookButton: 'disabled' | 'enabled'\r\n}\r\n\r\nexport const getDate = (dateInput: string) => {\r\n  const list = dateInput.split('.')\r\n\r\n  if (list.length !== 3) {\r\n    return null\r\n  }\r\n\r\n  const date = new Date(`${list[2]}.${list[1]}.${list[0]}`)\r\n\r\n  if (date.toString() === 'Invalid Date') {\r\n    return null\r\n  }\r\n\r\n  return date\r\n}\r\n\r\nexport const toDateInput = (date: Date) => {\r\n  const list = date.toLocaleDateString().split('/')\r\n\r\n  return `${list[2]}.${list[1]}.${list[0]}`\r\n}\r\n\r\nexport const compareDate = (date1: Date, date2: Date) => {\r\n  if (date1.getFullYear() !== date2.getFullYear()) {\r\n    return date1.getFullYear() - date2.getFullYear()\r\n  }\r\n\r\n  if (date1.getMonth() !== date2.getMonth()) {\r\n    return date1.getMonth() - date2.getMonth()\r\n  }\r\n\r\n  return date1.getDate() - date2.getDate()\r\n}\r\n\r\nexport const FlightBookerDomain = Remesh.domain({\r\n  name: 'FlightBookerDomain',\r\n  impl: (domain) => {\r\n    const OptionState = domain.state<FlightBookerOption>({\r\n      name: 'OptionState',\r\n      default: 'one-way',\r\n    })\r\n\r\n    const OptionQuery = domain.query({\r\n      name: 'OptionQuery',\r\n      impl: ({ get }) => {\r\n        return get(OptionState())\r\n      },\r\n    })\r\n\r\n    const StartDateInputState = domain.state({\r\n      name: 'StartDateInputState',\r\n      default: toDateInput(new Date()),\r\n    })\r\n\r\n    const StartDateInputQuery = domain.query({\r\n      name: 'StartDateInputQuery',\r\n      impl: ({ get }) => {\r\n        return get(StartDateInputState())\r\n      },\r\n    })\r\n\r\n    const EndDateInputState = domain.state({\r\n      name: 'EndDateInputState',\r\n      default: toDateInput(new Date()),\r\n    })\r\n\r\n    const EndDateInputQuery = domain.query({\r\n      name: 'EndDateInputQuery',\r\n      impl: ({ get }) => {\r\n        return get(EndDateInputState())\r\n      },\r\n    })\r\n\r\n    const StartDateQuery = domain.query({\r\n      name: 'StartDateQuery',\r\n      impl: ({ get }) => {\r\n        const startDateInput = get(StartDateInputState())\r\n        return getDate(startDateInput)\r\n      },\r\n    })\r\n\r\n    const EndDateQuery = domain.query({\r\n      name: 'EndDateQuery',\r\n      impl: ({ get }) => {\r\n        const endDateInput = get(EndDateInputState())\r\n        return getDate(endDateInput)\r\n      },\r\n    })\r\n\r\n    const UpdateOptionCommand = domain.command({\r\n      name: 'UpdateOptionCommand',\r\n      impl: ({}, option: FlightBookerOption) => {\r\n        return OptionState().new(option)\r\n      },\r\n    })\r\n\r\n    const UpdateStartDateCommand = domain.command({\r\n      name: 'UpdateStartDateCommand',\r\n      impl: ({}, dateInput: string) => {\r\n        return StartDateInputState().new(dateInput)\r\n      },\r\n    })\r\n\r\n    const UpdateEndDateCommand = domain.command({\r\n      name: 'UpdateEndDateCommand',\r\n      impl: ({}, dateInput: string) => {\r\n        return EndDateInputState().new(dateInput)\r\n      },\r\n    })\r\n\r\n    const StatusQuery = domain.query({\r\n      name: 'StatusQuery',\r\n      impl: ({ get }): FlightBookerStatus => {\r\n        const option = get(OptionState())\r\n        const startDate = get(StartDateQuery())\r\n        const endDate = get(EndDateQuery())\r\n\r\n        const startDateStatus = !!startDate ? 'valid' : 'invalid'\r\n        const endDateStatus = option === 'return' ? (!!endDate ? 'valid' : 'invalid') : 'disabled'\r\n\r\n        const bookButtonStatus =\r\n          option === 'one-way'\r\n            ? !!startDate\r\n              ? 'enabled'\r\n              : 'disabled'\r\n            : !!startDate && !!endDate && compareDate(startDate, endDate) <= 0\r\n            ? 'enabled'\r\n            : 'disabled'\r\n\r\n        return {\r\n          startDate: startDateStatus,\r\n          endDate: endDateStatus,\r\n          bookButton: bookButtonStatus,\r\n        }\r\n      },\r\n    })\r\n\r\n    return {\r\n      query: {\r\n        StatusQuery,\r\n        OptionQuery,\r\n        StartDateQuery,\r\n        EndDateQuery,\r\n        StartDateInputQuery,\r\n        EndDateInputQuery,\r\n      },\r\n      command: {\r\n        UpdateOptionCommand,\r\n        UpdateStartDateCommand,\r\n        UpdateEndDateCommand,\r\n      },\r\n    }\r\n  },\r\n})\r\n","import React from 'react'\r\nimport { useRemeshDomain, useRemeshQuery } from 'remesh-react'\r\n\r\nimport { FlightBookerDomain, FlightBookerOption } from 'remesh-domains-for-demos/dist/7guis/FlightBooker'\r\n\r\nexport const FlightBookerApp = () => {\r\n  const flightBooker = useRemeshDomain(FlightBookerDomain())\r\n  const option = useRemeshQuery(flightBooker.query.OptionQuery())\r\n  const status = useRemeshQuery(flightBooker.query.StatusQuery())\r\n\r\n  const startDateInput = useRemeshQuery(flightBooker.query.StartDateInputQuery())\r\n  const endDateInput = useRemeshQuery(flightBooker.query.EndDateInputQuery())\r\n\r\n  const handleOptionChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    flightBooker.command.UpdateOptionCommand(event.target.value as FlightBookerOption)\r\n  }\r\n\r\n  const handleStartDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    flightBooker.command.UpdateStartDateCommand(event.target.value)\r\n  }\r\n\r\n  const handleEndDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    flightBooker.command.UpdateEndDateCommand(event.target.value)\r\n  }\r\n\r\n  const handleBookButtonClick = () => {\r\n    if (status.bookButton === 'enabled') {\r\n      if (option === 'one-way') {\r\n        alert(`You have booked a one-way flight on ${startDateInput}`)\r\n      } else {\r\n        alert(`You have booked return flight from ${startDateInput} to ${endDateInput}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 400,\r\n        border: '1px solid #eaeaea',\r\n        boxSizing: 'border-box',\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <h2>Flight Booker</h2>\r\n      <div>\r\n        <select value={option} onChange={handleOptionChange}>\r\n          <option value=\"one-way\">One-way flight</option>\r\n          <option value=\"return\">Return flight</option>\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          style={{\r\n            backgroundColor: status.startDate === 'invalid' ? 'red' : '',\r\n          }}\r\n          value={startDateInput}\r\n          onChange={handleStartDateChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          style={{\r\n            backgroundColor: status.endDate === 'invalid' ? 'red' : '',\r\n          }}\r\n          disabled={status.endDate === 'disabled'}\r\n          value={endDateInput}\r\n          onChange={handleEndDateChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button disabled={status.bookButton === 'disabled'} onClick={handleBookButtonClick}>\r\n          Book\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { merge, animationFrames, of, NEVER } from 'rxjs'\r\n\r\nimport { distinctUntilChanged, map, mapTo, pairwise, switchMap, takeUntil } from 'rxjs/operators'\r\n\r\nimport { Remesh } from 'remesh'\r\n\r\nexport const TimerDomain = Remesh.domain({\r\n  name: 'TimerDomain',\r\n  inspectable: false,\r\n  impl: (domain) => {\r\n    const DurationState = domain.state({\r\n      name: 'DurationState',\r\n      default: 15000,\r\n    })\r\n\r\n    const DurationQuery = domain.query({\r\n      name: 'DurationQuery',\r\n      impl: ({ get }) => {\r\n        return get(DurationState())\r\n      },\r\n    })\r\n\r\n    const ElapsedState = domain.state({\r\n      name: 'ElapsedState',\r\n      default: 0,\r\n    })\r\n\r\n    const ElapsedQuery = domain.query({\r\n      name: 'ElapsedQuery',\r\n      impl: ({ get }) => {\r\n        return get(ElapsedState())\r\n      },\r\n    })\r\n\r\n    const StartEvent = domain.event({\r\n      name: 'StartEvent',\r\n    })\r\n\r\n    const StopEvent = domain.event({\r\n      name: 'StopEvent',\r\n    })\r\n\r\n    const UpdateElapsedCommand = domain.command({\r\n      name: 'UpdateElapsedCommand',\r\n      impl: ({ get }, increment: number) => {\r\n        const duration = get(DurationState())\r\n        const elapsed = get(ElapsedState())\r\n\r\n        if (elapsed > duration) {\r\n          return StopEvent()\r\n        }\r\n\r\n        return ElapsedState().new(elapsed + increment)\r\n      },\r\n    })\r\n\r\n    const UpdateDurationCommand = domain.command({\r\n      name: 'UpdateDurationCommand',\r\n      impl: ({ get }, newDuration: number) => {\r\n        const elapsed = get(ElapsedState())\r\n\r\n        if (newDuration > elapsed) {\r\n          return [DurationState().new(newDuration), StartEvent()]\r\n        }\r\n\r\n        return DurationState().new(newDuration)\r\n      },\r\n    })\r\n\r\n    const ResetElapsedCommand = domain.command({\r\n      name: 'resetElapsed',\r\n      impl: ({}) => {\r\n        return [ElapsedState().new(0), StartEvent()]\r\n      },\r\n    })\r\n\r\n    const UpdateElapsedCommand$ = domain.command$({\r\n      name: 'UpdateElapsedCommand$',\r\n      impl: ({ fromEvent }) => {\r\n        const startEvent$ = fromEvent(StartEvent).pipe(map(() => 1))\r\n        const stopEvent$ = fromEvent(StopEvent).pipe(map(() => 0))\r\n\r\n        const main$ = merge(startEvent$, stopEvent$).pipe(\r\n          distinctUntilChanged(),\r\n          switchMap((signal) => {\r\n            if (signal === 0) {\r\n              return NEVER\r\n            }\r\n            return animationFrames().pipe(\r\n              pairwise(),\r\n              map(([a, b]) => b.elapsed - a.elapsed),\r\n              map((increment) => UpdateElapsedCommand(increment)),\r\n              takeUntil(fromEvent(StopEvent)),\r\n            )\r\n          }),\r\n        )\r\n\r\n        return merge(main$, of(StartEvent()))\r\n      },\r\n    })\r\n\r\n    domain.ignite(() => UpdateElapsedCommand$())\r\n\r\n    return {\r\n      query: {\r\n        DurationQuery,\r\n        ElapsedQuery,\r\n      },\r\n      command: {\r\n        ResetElapsedCommand,\r\n        UpdateDurationCommand,\r\n      },\r\n    }\r\n  },\r\n})\r\n","import React from 'react'\r\nimport { useRemeshDomain, useRemeshQuery } from 'remesh-react'\r\n\r\nimport { TimerDomain } from 'remesh-domains-for-demos/dist/7guis/Timer'\r\n\r\nexport const TimerApp = () => {\r\n  const timerDomain = useRemeshDomain(TimerDomain())\r\n  const elapsed = useRemeshQuery(timerDomain.query.ElapsedQuery())\r\n  const duration = useRemeshQuery(timerDomain.query.DurationQuery())\r\n\r\n  const handleDurationChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const duration = parseInt(event.target.value, 10)\r\n    if (!isNaN(duration)) {\r\n      timerDomain.command.UpdateDurationCommand(duration)\r\n    }\r\n  }\r\n\r\n  const handleResetElapsed = () => {\r\n    timerDomain.command.ResetElapsedCommand()\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 400,\r\n        border: '1px solid #eaeaea',\r\n        boxSizing: 'border-box',\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <h2>Timer</h2>\r\n      <div style={{ display: 'flex' }}>\r\n        <label style={{ marginRight: 10, whiteSpace: 'nowrap' }}>Elapsed Timer:</label>\r\n        <div style={{ width: '100%' }}>\r\n          <span\r\n            style={{\r\n              display: 'inline-block',\r\n              height: 10,\r\n              background: 'green',\r\n              width: `${Math.min(elapsed / duration, 1) * 100}%`,\r\n              verticalAlign: 'middle',\r\n              borderRadius: 5,\r\n            }}\r\n          ></span>\r\n        </div>\r\n      </div>\r\n      <div>{elapsed > duration ? (duration / 1000).toFixed(1) : (elapsed / 1000).toFixed(1)}s</div>\r\n      <div style={{ display: 'flex' }}>\r\n        <label style={{ width: 100, marginRight: 10 }}>Duration:</label>\r\n        <input\r\n          style={{ width: '100%' }}\r\n          type=\"range\"\r\n          min={0}\r\n          max={30000}\r\n          value={duration}\r\n          onChange={handleDurationChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button style={{ width: '100% ' }} onClick={handleResetElapsed}>\r\n          Reset Timer\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Remesh } from 'remesh'\r\nimport { ListModule } from 'remesh/modules/list'\r\n\r\nexport type Name = {\r\n  name: string\r\n  surname: string\r\n}\r\n\r\nexport type NameItem = {\r\n  id: string\r\n} & Name\r\n\r\nexport const CRUDDomain = Remesh.domain({\r\n  name: 'CRUDDomain',\r\n  impl: (domain) => {\r\n    let nameUid = 0\r\n\r\n    const nameListModule = ListModule<NameItem>(domain, {\r\n      name: 'NameListModule',\r\n      key: (item) => item.id,\r\n    })\r\n\r\n    const FilterPrefixState = domain.state({\r\n      name: 'FilterPrefixState',\r\n      default: '',\r\n    })\r\n\r\n    const FilterPrefixQuery = domain.query({\r\n      name: 'FilterPrefixQuery',\r\n      impl: ({ get }) => {\r\n        return get(FilterPrefixState())\r\n      },\r\n    })\r\n\r\n    const UpdateFilterPrefixCommand = domain.command({\r\n      name: 'UpdateFilterPrefixCommand',\r\n      impl: ({}, prefix: string) => {\r\n        return FilterPrefixState().new(prefix)\r\n      },\r\n    })\r\n\r\n    const CreatedState = domain.state<Name>({\r\n      name: 'Created',\r\n      default: {\r\n        name: '',\r\n        surname: '',\r\n      },\r\n    })\r\n\r\n    const CreatedQuery = domain.query({\r\n      name: 'CreatedQuery',\r\n      impl: ({ get }) => {\r\n        return get(CreatedState())\r\n      },\r\n    })\r\n\r\n    const UpdateCreatedCommand = domain.command({\r\n      name: 'UpdateCreated',\r\n      impl: ({ get }, name: Partial<Name>) => {\r\n        const currentName = get(CreatedState())\r\n        return CreatedState().new({\r\n          ...currentName,\r\n          ...name,\r\n        })\r\n      },\r\n    })\r\n\r\n    const SelectedState = domain.state<NameItem | null>({\r\n      name: 'SelectedState',\r\n      default: null,\r\n    })\r\n\r\n    const SelectedQuery = domain.query({\r\n      name: 'SelectedQuery',\r\n      impl: ({ get }) => {\r\n        return get(SelectedState())\r\n      },\r\n    })\r\n\r\n    const SelectItemCommand = domain.command({\r\n      name: 'Select',\r\n      impl: ({ get }, targetItemId: string | null) => {\r\n        const currentSelected = get(SelectedState())\r\n\r\n        if (targetItemId === null) {\r\n          if (currentSelected === null) {\r\n            return null\r\n          } else {\r\n            return SelectedState().new(null)\r\n          }\r\n        }\r\n\r\n        if (currentSelected && currentSelected.id === targetItemId) {\r\n          return SelectedState().new(null)\r\n        }\r\n\r\n        const targetItem = get(nameListModule.query.ItemQuery(targetItemId))\r\n\r\n        return SelectedState().new(targetItem)\r\n      },\r\n    })\r\n\r\n    const UpdateSelectedNameCommand = domain.command({\r\n      name: 'UpdateSelectedName',\r\n      impl: ({ get }, name: Partial<Name>) => {\r\n        const selected = get(SelectedState())\r\n\r\n        if (selected === null) {\r\n          return []\r\n        }\r\n\r\n        return SelectedState().new({\r\n          ...selected,\r\n          ...name,\r\n        })\r\n      },\r\n    })\r\n\r\n    const FilteredListQuery = domain.query({\r\n      name: 'FilteredListQuery',\r\n      impl: ({ get }) => {\r\n        const filterPrefix = get(FilterPrefixState())\r\n        const nameList = get(nameListModule.query.ItemListQuery())\r\n\r\n        if (filterPrefix === '') {\r\n          return nameList\r\n        }\r\n\r\n        return nameList.filter((item) => item.surname.startsWith(filterPrefix))\r\n      },\r\n    })\r\n\r\n    const SyncSelectedCommand = domain.command({\r\n      name: 'SyncSelected',\r\n      impl: ({ get }) => {\r\n        const selected = get(SelectedState())\r\n\r\n        if (selected === null) {\r\n          return []\r\n        }\r\n\r\n        return nameListModule.command.UpdateItemCommand(selected)\r\n      },\r\n    })\r\n\r\n    const CreateNameItemCommand = domain.command({\r\n      name: 'CreateNameItemCommand',\r\n      impl: ({ get }) => {\r\n        const created = get(CreatedState())\r\n        const newItem = {\r\n          id: `${nameUid++}`,\r\n          ...created,\r\n        }\r\n\r\n        return [nameListModule.command.AddItemCommand(newItem), UpdateCreatedCommand({ name: '', surname: '' })]\r\n      },\r\n    })\r\n\r\n    return {\r\n      query: {\r\n        ...nameListModule.query,\r\n        FilteredListQuery,\r\n        SelectedQuery,\r\n        FilterPrefixQuery,\r\n        CreatedQuery,\r\n      },\r\n      command: {\r\n        ...nameListModule.command,\r\n        UpdateFilterPrefixCommand,\r\n        SelectItemCommand,\r\n        UpdateCreatedCommand,\r\n        UpdateSelectedNameCommand,\r\n        CreateNameItemCommand,\r\n        SyncSelectedCommand,\r\n      },\r\n    }\r\n  },\r\n})\r\n","import { ComponentPropsWithoutRef, useEffect, useRef } from 'react'\n\nexport const OuterClickWrapper = (props: OuterClickWrapperProps) => {\n  const { onOuterClick, ...restProps } = props\n  const containerRef = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      if (!(event.target as Node)?.parentElement) {\n        return\n      }\n\n      const isOuterClick = !!(containerRef.current && !containerRef.current.contains(event.target as Node))\n\n      if (isOuterClick) {\n        onOuterClick?.(event)\n      }\n    }\n\n    document.addEventListener('click', handleClick, false)\n    return () => {\n      document.removeEventListener('click', handleClick, false)\n    }\n  }, [])\n\n  return <div ref={containerRef} {...restProps}></div>\n}\ntype OuterClickWrapperProps = ComponentPropsWithoutRef<'div'> & {\n  onOuterClick?: (event: MouseEvent) => void\n}\n","import React from 'react'\r\n\r\nimport { useRemeshDomain, useRemeshQuery } from 'remesh-react'\r\n\r\nimport { CRUDDomain } from 'remesh-domains-for-demos/dist/7guis/CRUD'\r\n\r\nimport { OuterClickWrapper } from './OuterClickWrapper'\r\n\r\nexport const CRUDApp = () => {\r\n  const domain = useRemeshDomain(CRUDDomain())\r\n  const filteredList = useRemeshQuery(domain.query.FilteredListQuery())\r\n  const filter = useRemeshQuery(domain.query.FilterPrefixQuery())\r\n  const created = useRemeshQuery(domain.query.CreatedQuery())\r\n  const selected = useRemeshQuery(domain.query.SelectedQuery())\r\n\r\n  const handleFilterChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    domain.command.UpdateFilterPrefixCommand(e.target.value)\r\n  }\r\n\r\n  const handleSelect = (itemId: string | null) => {\r\n    domain.command.SelectItemCommand(itemId)\r\n  }\r\n\r\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (selected) {\r\n      domain.command.UpdateSelectedNameCommand({\r\n        name: e.target.value,\r\n      })\r\n    } else {\r\n      domain.command.UpdateCreatedCommand({ name: e.target.value })\r\n    }\r\n  }\r\n\r\n  const handleSurnameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (selected) {\r\n      domain.command.UpdateSelectedNameCommand({\r\n        surname: e.target.value,\r\n      })\r\n    } else {\r\n      domain.command.UpdateCreatedCommand({ surname: e.target.value })\r\n    }\r\n  }\r\n\r\n  const handleCreate = () => {\r\n    if (selected === null) {\r\n      domain.command.CreateNameItemCommand()\r\n    }\r\n  }\r\n\r\n  const handleSync = () => {\r\n    if (selected) {\r\n      domain.command.SyncSelectedCommand()\r\n    }\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    if (selected) {\r\n      domain.command.DeleteItemCommand(selected.id)\r\n      domain.command.SelectItemCommand(null)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <OuterClickWrapper\r\n      style={{\r\n        width: 400,\r\n        border: '1px solid #eaeaea',\r\n        boxSizing: 'border-box',\r\n        padding: 10,\r\n      }}\r\n      onOuterClick={() => {\r\n        handleSelect(null)\r\n      }}\r\n    >\r\n      <h2>CRUD</h2>\r\n      <div>\r\n        <label htmlFor=\"\">Filter prefix</label>\r\n        <input type=\"text\" value={filter} onChange={handleFilterChange} />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            width: '50%',\r\n            height: 100,\r\n            border: '1px solid #eaeaea',\r\n            overflow: 'scroll',\r\n          }}\r\n        >\r\n          {filteredList.map((item) => {\r\n            const fullName = item.name + ', ' + item.surname\r\n\r\n            return (\r\n              <div\r\n                key={item.id}\r\n                style={{\r\n                  background: selected?.id === item.id ? 'blue' : '',\r\n                  color: selected?.id === item.id ? 'white' : '',\r\n                }}\r\n                onClick={() => {\r\n                  handleSelect(item.id)\r\n                }}\r\n              >\r\n                {fullName}\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n        <div style={{ width: '50%', padding: 10 }}>\r\n          <div>\r\n            <label>Name:</label>\r\n            <input type=\"text\" value={selected ? selected.name : created.name} onChange={handleNameChange} />\r\n          </div>\r\n          <div>\r\n            <label>Surname:</label>\r\n            <input type=\"text\" value={selected ? selected.surname : created.surname} onChange={handleSurnameChange} />\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <button disabled={selected !== null} style={{ marginRight: 10 }} onClick={handleCreate}>\r\n            Create\r\n          </button>\r\n          <button disabled={selected === null} style={{ marginRight: 10 }} onClick={handleSync}>\r\n            Update\r\n          </button>\r\n          <button disabled={selected === null} style={{ marginRight: 10 }} onClick={handleDelete}>\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </OuterClickWrapper>\r\n  )\r\n}\r\n","import { Remesh } from 'remesh'\r\n\r\nexport type Position = { x: number; y: number }\r\n\r\nexport type DrawAction = {\r\n  position: Position\r\n  diameter: number\r\n}\r\n\r\nexport type AdjustAction = {\r\n  index: number\r\n  diameter: number\r\n}\r\n\r\nexport type Circle = {\r\n  position: Position\r\n  diameter: number\r\n}\r\n\r\nexport type DrawState = {\r\n  circles: Circle[]\r\n}\r\n\r\nexport type TooltipsState =\r\n  | {\r\n      type: 'default'\r\n    }\r\n  | {\r\n      type: 'show-tips'\r\n      index: number\r\n      circle: Circle\r\n      pageX: number\r\n      pageY: number\r\n    }\r\n  | {\r\n      type: 'open-slider'\r\n      index: number\r\n      circle: Circle\r\n      pageX: number\r\n      pageY: number\r\n    }\r\n\r\nexport type HistoryStateItem =\r\n  | {\r\n      action: 'add-circle'\r\n      state: DrawState\r\n    }\r\n  | {\r\n      action: 'adjust-circle'\r\n      index: number\r\n      state: DrawState\r\n    }\r\n\r\nexport type HistoryState = {\r\n  items: HistoryStateItem[]\r\n  currentIndex: number\r\n}\r\n\r\nexport const CircleDrawerDomain = Remesh.domain({\r\n  name: 'CircleDrawerDomain',\r\n  impl: (domain) => {\r\n    const HistoryState = domain.state<HistoryState>({\r\n      name: 'HistoryState',\r\n      default: {\r\n        items: [],\r\n        currentIndex: -1,\r\n      },\r\n    })\r\n\r\n    const HistoryQuery = domain.query({\r\n      name: 'HistoryQuery',\r\n      impl: ({ get }) => {\r\n        return get(HistoryState())\r\n      },\r\n    })\r\n\r\n    const RecordHistoryStateCommand = domain.command({\r\n      name: 'RecordHistoryState',\r\n      impl: ({ get }, state: HistoryStateItem) => {\r\n        const history = get(HistoryState())\r\n\r\n        const previousItems = history.items.slice(0, history.currentIndex + 1)\r\n\r\n        /**\r\n         * If the current state is the same as the last state,\r\n         * then we don't need to record it.\r\n         * This is because we are going to replace the last state\r\n         * with the current state.\r\n         *\r\n         * This is a bit of a hack, but it works.\r\n         *\r\n         * TODO: Find a better way to do this.\r\n         */\r\n        if (state.action === 'adjust-circle') {\r\n          const lastState = previousItems[previousItems.length - 1]\r\n          if (lastState.action === 'adjust-circle' && lastState.index === state.index) {\r\n            previousItems.pop()\r\n          }\r\n        }\r\n\r\n        const newItems = [...previousItems, state]\r\n        const newIndex = newItems.length - 1\r\n\r\n        return HistoryState().new({\r\n          items: newItems,\r\n          currentIndex: newIndex,\r\n        })\r\n      },\r\n    })\r\n\r\n    const DrawState = domain.state<DrawState>({\r\n      name: 'DrawState',\r\n      default: {\r\n        circles: [],\r\n      },\r\n    })\r\n\r\n    const DrawQuery = domain.query({\r\n      name: 'DrawQuery',\r\n      impl: ({ get }) => {\r\n        return get(DrawState())\r\n      },\r\n    })\r\n\r\n    const UndoCommand = domain.command({\r\n      name: 'UndoCommand',\r\n      impl: ({ get }) => {\r\n        const history = get(HistoryState())\r\n        const canUndo = get(CanUndoQuery())\r\n        const newIndex = history.currentIndex - 1\r\n\r\n        if (!canUndo || newIndex < 0) {\r\n          return [\r\n            DrawState().new({\r\n              circles: [],\r\n            }),\r\n            HistoryState().new({\r\n              items: history.items,\r\n              currentIndex: -1,\r\n            }),\r\n          ]\r\n        }\r\n\r\n        return [\r\n          DrawState().new(history.items[newIndex].state),\r\n          HistoryState().new({\r\n            items: history.items,\r\n            currentIndex: newIndex,\r\n          }),\r\n        ]\r\n      },\r\n    })\r\n\r\n    const RedoCommand = domain.command({\r\n      name: 'RedoCommand',\r\n      impl: ({ get }) => {\r\n        const history = get(HistoryState())\r\n        const canRedo = get(CanRedoQuery())\r\n\r\n        if (!canRedo) {\r\n          return []\r\n        }\r\n\r\n        const newIndex = history.currentIndex + 1\r\n\r\n        return [\r\n          DrawState().new(history.items[newIndex].state),\r\n          HistoryState().new({\r\n            items: history.items,\r\n            currentIndex: newIndex,\r\n          }),\r\n        ]\r\n      },\r\n    })\r\n\r\n    const CanUndoQuery = domain.query({\r\n      name: 'CanUndoQuery',\r\n      impl: ({ get }) => {\r\n        const history = get(HistoryState())\r\n        return history.currentIndex >= 0\r\n      },\r\n    })\r\n\r\n    const CanRedoQuery = domain.query({\r\n      name: 'CanRedoQuery',\r\n      impl: ({ get }) => {\r\n        const history = get(HistoryState())\r\n        return history.currentIndex < history.items.length - 1\r\n      },\r\n    })\r\n\r\n    const SelectedIndexState = domain.state<number>({\r\n      name: 'SelectedIndexState',\r\n      default: -1,\r\n    })\r\n\r\n    const SelectedIndexQuery = domain.query({\r\n      name: 'SelectedIndexQuery',\r\n      impl: ({ get }) => {\r\n        return get(SelectedIndexState())\r\n      },\r\n    })\r\n\r\n    const SetSelectedIndexCommand = domain.command({\r\n      name: 'setSelectedIndex',\r\n      impl: ({}, index: number) => {\r\n        return SelectedIndexState().new(index)\r\n      },\r\n    })\r\n\r\n    const SelectedCircleInfoQuery = domain.query({\r\n      name: 'SelectedCircleInfoQuery',\r\n      impl: ({ get }) => {\r\n        const index = get(SelectedIndexState())\r\n        const circles = get(DrawState()).circles\r\n\r\n        if (index === -1) {\r\n          return null\r\n        }\r\n\r\n        return {\r\n          index,\r\n          circle: circles[index],\r\n        }\r\n      },\r\n    })\r\n\r\n    const DrawCommand = domain.command({\r\n      name: 'DrawCommand',\r\n      impl: ({ get }, action: DrawAction) => {\r\n        const state = get(DrawState())\r\n        const newState = {\r\n          circles: [...state.circles, { position: action.position, diameter: action.diameter }],\r\n        }\r\n        return [\r\n          DrawState().new(newState),\r\n          RecordHistoryStateCommand({\r\n            action: 'add-circle',\r\n            state: newState,\r\n          }),\r\n        ]\r\n      },\r\n    })\r\n\r\n    const AdjustCommand = domain.command({\r\n      name: 'AdjustCommand',\r\n      impl: ({ get }, action: AdjustAction) => {\r\n        const state = get(DrawState())\r\n        const circles = state.circles.map((circle, index) => {\r\n          if (index === action.index) {\r\n            return {\r\n              position: circle.position,\r\n              diameter: action.diameter,\r\n            }\r\n          }\r\n          return circle\r\n        })\r\n\r\n        const newState = {\r\n          circles,\r\n        }\r\n\r\n        return [\r\n          DrawState().new(newState),\r\n          RecordHistoryStateCommand({\r\n            action: 'adjust-circle',\r\n            index: action.index,\r\n            state: newState,\r\n          }),\r\n        ]\r\n      },\r\n    })\r\n\r\n    const TooltipsState = domain.state<TooltipsState>({\r\n      name: 'TooltipsState',\r\n      default: {\r\n        type: 'default',\r\n      },\r\n    })\r\n\r\n    const TooltipsQuery = domain.query({\r\n      name: 'TooltipsQuery',\r\n      impl: ({ get }) => {\r\n        return get(TooltipsState())\r\n      },\r\n    })\r\n\r\n    const UpdateTooltipsCommand = domain.command({\r\n      name: 'UpdateTooltipsCommand',\r\n      impl: ({}, newState: TooltipsState) => {\r\n        return TooltipsState().new(newState)\r\n      },\r\n    })\r\n\r\n    return {\r\n      query: {\r\n        HistoryQuery,\r\n        DrawQuery,\r\n        TooltipsQuery,\r\n        SelectedIndexQuery,\r\n        SelectedCircleInfoQuery,\r\n        CanUndoQuery,\r\n        CanRedoQuery,\r\n      },\r\n      command: {\r\n        DrawCommand,\r\n        AdjustCommand,\r\n        UpdateTooltipsCommand,\r\n        UndoCommand,\r\n        RedoCommand,\r\n        SetSelectedIndexCommand,\r\n      },\r\n    }\r\n  },\r\n})\r\n\r\nexport const positionInCircle = (position: Position, circle: Circle): boolean => {\r\n  const { x, y } = position\r\n  const { diameter, position: circlePosition } = circle\r\n  const { x: circleX, y: circleY } = circlePosition\r\n  const radius = diameter / 2\r\n  const dx = x - circleX\r\n  const dy = y - circleY\r\n\r\n  return dx * dx + dy * dy < radius * radius\r\n}\r\n","import React from 'react'\r\n\r\nimport { useRemeshDomain, useRemeshQuery } from 'remesh-react'\r\n\r\nimport { CircleDrawerDomain, positionInCircle, Position } from 'remesh-domains-for-demos/dist/7guis/CircleDrawer'\r\n\r\nimport { OuterClickWrapper } from './OuterClickWrapper'\r\n\r\nexport const CircleDrawerApp = () => {\r\n  const domain = useRemeshDomain(CircleDrawerDomain())\r\n  const drawState = useRemeshQuery(domain.query.DrawQuery())\r\n  const tooltipsState = useRemeshQuery(domain.query.TooltipsQuery())\r\n  const selectedCircleInfo = useRemeshQuery(domain.query.SelectedCircleInfoQuery())\r\n  const canUndo = useRemeshQuery(domain.query.CanUndoQuery())\r\n  const canRedo = useRemeshQuery(domain.query.CanRedoQuery())\r\n\r\n  const getCircleInfo = (position: Position) => {\r\n    const circle = drawState.circles.find((circle) => {\r\n      return positionInCircle(position, circle)\r\n    })\r\n\r\n    if (!circle) {\r\n      return null\r\n    }\r\n\r\n    const index = drawState.circles.indexOf(circle)\r\n\r\n    return {\r\n      index,\r\n      circle,\r\n    }\r\n  }\r\n\r\n  const handleRightClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    e.preventDefault()\r\n    const position = { x: e.pageX, y: e.pageY }\r\n\r\n    const circleInfo = getCircleInfo(position)\r\n\r\n    if (circleInfo) {\r\n      domain.command.SetSelectedIndexCommand(circleInfo.index)\r\n      domain.command.UpdateTooltipsCommand({\r\n        type: 'show-tips',\r\n        index: circleInfo.index,\r\n        circle: circleInfo.circle,\r\n        pageX: e.pageX,\r\n        pageY: e.pageY,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleLeftClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (tooltipsState.type !== 'default') {\r\n      return\r\n    }\r\n\r\n    const position = { x: e.pageX, y: e.pageY }\r\n    const circleInfo = getCircleInfo(position)\r\n\r\n    if (!circleInfo) {\r\n      domain.command.DrawCommand({ position, diameter: 30 })\r\n    }\r\n  }\r\n\r\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (tooltipsState.type !== 'default') {\r\n      return\r\n    }\r\n\r\n    const position = { x: e.pageX, y: e.pageY }\r\n    const circleInfo = getCircleInfo(position)\r\n\r\n    if (circleInfo) {\r\n      domain.command.SetSelectedIndexCommand(circleInfo.index)\r\n    } else {\r\n      domain.command.SetSelectedIndexCommand(-1)\r\n    }\r\n  }\r\n\r\n  const handleOpenSlider = () => {\r\n    if (tooltipsState.type === 'show-tips') {\r\n      domain.command.UpdateTooltipsCommand({\r\n        type: 'open-slider',\r\n        index: tooltipsState.index,\r\n        circle: tooltipsState.circle,\r\n        pageX: tooltipsState.pageX,\r\n        pageY: tooltipsState.pageY,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleCloseSlider = () => {\r\n    domain.command.UpdateTooltipsCommand({\r\n      type: 'default',\r\n    })\r\n  }\r\n\r\n  const handleAdust = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = parseInt(event.target.value, 10)\r\n\r\n    if (selectedCircleInfo && !isNaN(value)) {\r\n      domain.command.AdjustCommand({\r\n        index: selectedCircleInfo.index,\r\n        diameter: value,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        border: '1px solid #eaeaea',\r\n        boxSizing: 'border-box',\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <h2>Circle Drawer</h2>\r\n      <div\r\n        style={{\r\n          width: 400,\r\n          textAlign: 'center',\r\n          padding: 10,\r\n        }}\r\n      >\r\n        <button\r\n          onClick={() => domain.command.UndoCommand()}\r\n          style={{\r\n            margin: '0 10px',\r\n          }}\r\n          disabled={!canUndo}\r\n        >\r\n          Undo\r\n        </button>\r\n        <button\r\n          onClick={() => domain.command.RedoCommand()}\r\n          style={{\r\n            margin: '0 10px',\r\n          }}\r\n          disabled={!canRedo}\r\n        >\r\n          Redo\r\n        </button>\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: 400,\r\n          height: 400,\r\n          border: '1px solid #eaeaea',\r\n          boxSizing: 'border-box',\r\n          overflow: 'hidden',\r\n        }}\r\n        onClick={handleLeftClick}\r\n        onMouseMove={handleMouseMove}\r\n      >\r\n        {drawState.circles.map((circle, index) => {\r\n          return (\r\n            <div\r\n              key={circle.position.x + '-' + circle.position.y + '-' + circle.diameter}\r\n              style={{\r\n                position: 'absolute',\r\n                left: circle.position.x - circle.diameter / 2,\r\n                top: circle.position.y - circle.diameter / 2,\r\n                width: circle.diameter,\r\n                height: circle.diameter,\r\n                borderRadius: circle.diameter / 2,\r\n                border: '1px solid #666',\r\n                backgroundColor: selectedCircleInfo?.index === index ? '#eaeaea' : '',\r\n              }}\r\n              onContextMenu={handleRightClick}\r\n            ></div>\r\n          )\r\n        })}\r\n      </div>\r\n      {tooltipsState.type === 'show-tips' && (\r\n        <OuterClickWrapper\r\n          key=\"show-tips\"\r\n          style={{\r\n            position: 'absolute',\r\n            left: tooltipsState.pageX,\r\n            top: tooltipsState.pageY,\r\n            zIndex: 100,\r\n            background: '#fff',\r\n            border: '1px solid #666',\r\n            padding: 10,\r\n          }}\r\n          onOuterClick={handleCloseSlider}\r\n          onClick={handleOpenSlider}\r\n        >\r\n          Adjust Diameter\r\n        </OuterClickWrapper>\r\n      )}\r\n      {tooltipsState.type === 'open-slider' && (\r\n        <OuterClickWrapper\r\n          key=\"open-slider\"\r\n          style={{\r\n            position: 'absolute',\r\n            left: tooltipsState.pageX,\r\n            top: tooltipsState.pageY,\r\n            background: '#fff',\r\n            border: '1px solid #666',\r\n            zIndex: 100,\r\n            padding: 10,\r\n          }}\r\n          onOuterClick={handleCloseSlider}\r\n        >\r\n          <p>Adjust Diameter</p>\r\n          <div>\r\n            <input\r\n              type=\"range\"\r\n              value={selectedCircleInfo?.circle.diameter ?? ''}\r\n              min={1}\r\n              max={150}\r\n              onChange={handleAdust}\r\n            />\r\n          </div>\r\n        </OuterClickWrapper>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { Remesh } from 'remesh'\r\n\r\nexport type CellContent =\r\n  | {\r\n      type: 'text'\r\n      text: string\r\n    }\r\n  | {\r\n      type: 'formula'\r\n      formula: string\r\n    }\r\n\r\nexport type CellState = {\r\n  content: CellContent\r\n  isEditing: boolean\r\n}\r\n\r\nexport const CellsDomain = Remesh.domain({\r\n  name: 'CellsDomain',\r\n  inspectable: false,\r\n  impl: (domain) => {\r\n    const RowKeyListState = domain.state({\r\n      name: 'RowKeyListState',\r\n      default: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(String),\r\n    })\r\n\r\n    const RowKeyListQuery = domain.query({\r\n      name: 'RowKeyListQuery',\r\n      impl: ({ get }) => {\r\n        return get(RowKeyListState())\r\n      },\r\n    })\r\n\r\n    const ColumnKeyListState = domain.state({\r\n      name: 'ColumnKeyListState',\r\n      default: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'],\r\n    })\r\n\r\n    const ColumnKeyListQuery = domain.query({\r\n      name: 'ColumnKeyListQuery',\r\n      impl: ({ get }) => {\r\n        return get(ColumnKeyListState())\r\n      },\r\n    })\r\n\r\n    const CellState = domain.state({\r\n      name: 'CellState',\r\n      impl: (_: string): CellState => {\r\n        return {\r\n          content: {\r\n            type: 'text',\r\n            text: '',\r\n          },\r\n          isEditing: false,\r\n        }\r\n      },\r\n    })\r\n\r\n    const CellQuery = domain.query({\r\n      name: 'CellQuery',\r\n      impl: ({ get }, key: string) => {\r\n        const state = get(CellState(key))\r\n\r\n        if (state.content.type === 'text') {\r\n          return {\r\n            type: 'text' as const,\r\n            isEditing: state.isEditing,\r\n            content: state.content.text,\r\n            displayContent: state.content.text,\r\n          }\r\n        }\r\n\r\n        if (state.content.type === 'formula') {\r\n          const evaluate = compile(state.content.formula)\r\n          const getCellValue = (cellKey: string) => {\r\n            return Number(get(CellQuery(cellKey)).displayContent)\r\n          }\r\n\r\n          return {\r\n            type: 'formula' as const,\r\n            isEditing: state.isEditing,\r\n            content: state.content.formula,\r\n            displayContent: evaluate(getCellValue),\r\n          }\r\n        }\r\n\r\n        throw new Error('Unknown cell type')\r\n      },\r\n    })\r\n\r\n    const SelectCellCommand = domain.command({\r\n      name: 'SelectCellCommand',\r\n      impl: ({ get }, key: string) => {\r\n        const state = get(CellState(key))\r\n        return CellState(key).new({\r\n          content: state.content,\r\n          isEditing: true,\r\n        })\r\n      },\r\n    })\r\n\r\n    const UnselectCellCommand = domain.command({\r\n      name: 'UnselectCellCommand',\r\n      impl: ({ get }, key: string) => {\r\n        const state = get(CellState(key))\r\n        return CellState(key).new({\r\n          content: state.content,\r\n          isEditing: false,\r\n        })\r\n      },\r\n    })\r\n\r\n    const SetCellContentCommand = domain.command({\r\n      name: 'SetCellContentCommand',\r\n      impl: ({ get }, { key, input }: { key: string; input: string }) => {\r\n        const state = get(CellState(key))\r\n\r\n        if (input.startsWith('=')) {\r\n          return CellState(key).new({\r\n            content: {\r\n              type: 'formula',\r\n              formula: input,\r\n            },\r\n            isEditing: state.isEditing,\r\n          })\r\n        }\r\n\r\n        return CellState(key).new({\r\n          content: {\r\n            type: 'text',\r\n            text: input,\r\n          },\r\n          isEditing: state.isEditing,\r\n        })\r\n      },\r\n    })\r\n\r\n    return {\r\n      query: {\r\n        CellQuery,\r\n        ColumnKeyListQuery,\r\n        RowKeyListQuery,\r\n      },\r\n      command: {\r\n        SelectCellCommand,\r\n        UnselectCellCommand,\r\n        SetCellContentCommand,\r\n      },\r\n    }\r\n  },\r\n})\r\n\r\nconst compile = (formula: string) => {\r\n  return (get: Function) => {\r\n    try {\r\n      const expression = formula.slice(1).replace(/\\w\\d+/g, (matched) => {\r\n        return `get('${matched}')`\r\n      })\r\n\r\n      const fn = new Function('get', `return (${expression}).toString()`)\r\n\r\n      return fn(get)\r\n    } catch {\r\n      return '-'\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { useRemeshDomain, useRemeshQuery } from 'remesh-react'\r\n\r\nimport { CellsDomain } from 'remesh-domains-for-demos/dist/7guis/Cells'\r\n\r\nexport const CellsApp = () => {\r\n  const cellsDomain = useRemeshDomain(CellsDomain())\r\n  const columnKeyList = useRemeshQuery(cellsDomain.query.ColumnKeyListQuery())\r\n  const rowKeyList = useRemeshQuery(cellsDomain.query.RowKeyListQuery())\r\n\r\n  return (\r\n    <div>\r\n      <h2>Cells</h2>\r\n      <table\r\n        style={{\r\n          borderCollapse: 'collapse',\r\n          border: '1px solid #bbb',\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        <thead>\r\n          <tr\r\n            style={{\r\n              backgroundColor: '#f6f6f6',\r\n            }}\r\n          >\r\n            <th style={{ width: 30, display: 'block' }}></th>\r\n            {columnKeyList.map((key) => (\r\n              <th\r\n                key={key}\r\n                style={{\r\n                  maxWidth: 80,\r\n                  border: '1px solid #bbb',\r\n                }}\r\n              >\r\n                {key}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {rowKeyList.map((rowKey) => {\r\n            return (\r\n              <tr key={rowKey}>\r\n                <RowView rowKey={rowKey} columnKeyList={columnKeyList} />\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\ntype RowViewProps = {\r\n  rowKey: string\r\n  columnKeyList: string[]\r\n}\r\n\r\nconst RowView = ({ columnKeyList, rowKey }: RowViewProps) => {\r\n  const cells = useRemeshDomain(CellsDomain())\r\n\r\n  return (\r\n    <>\r\n      <td\r\n        style={{\r\n          width: 30,\r\n          border: '1px solid #bbb',\r\n          backgroundColor: '#f6f6f6',\r\n        }}\r\n      >\r\n        {rowKey}\r\n      </td>\r\n      {columnKeyList.map((columnKey) => {\r\n        const cellKey = `${columnKey}${rowKey}`\r\n        return (\r\n          <td\r\n            key={cellKey}\r\n            style={{\r\n              maxWidth: 80,\r\n              minWidth: 80,\r\n              border: '1px solid #bbb',\r\n              overflow: 'hidden',\r\n            }}\r\n            onClick={(event) => {\r\n              if (event.target instanceof HTMLInputElement) {\r\n                return\r\n              }\r\n              cells.command.SelectCellCommand(cellKey)\r\n            }}\r\n          >\r\n            <CellView cellKey={cellKey} />\r\n          </td>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nconst CellView = ({ cellKey }: { cellKey: string }) => {\r\n  const cellsDomain = useRemeshDomain(CellsDomain())\r\n  const cell = useRemeshQuery(cellsDomain.query.CellQuery(cellKey))\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    cellsDomain.command.SetCellContentCommand({ key: cellKey, input: e.target.value })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {cell.isEditing && (\r\n        <input\r\n          style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundColor: 'transparent',\r\n            boxSizing: 'border-box',\r\n            textAlign: 'center',\r\n          }}\r\n          value={cell.content}\r\n          onChange={handleChange}\r\n          onBlur={() => {\r\n            if (cell.isEditing) {\r\n              cellsDomain.command.UnselectCellCommand(cellKey)\r\n            }\r\n          }}\r\n          autoFocus\r\n        />\r\n      )}\r\n\r\n      {!cell.isEditing && cell.displayContent}\r\n    </>\r\n  )\r\n}\r\n","import React, { StrictMode } from 'react'\nimport * as ReactDOMClient from 'react-dom/client'\n\nimport { Remesh } from 'remesh'\n\nimport { RemeshRoot } from 'remesh-react'\n\nimport { RemeshReduxDevtools } from 'remesh-redux-devtools'\nimport { RemeshLogger } from 'remesh-logger'\n\nimport { CounterApp } from './Counter'\nimport { TemperatureConverterApp } from './TemperatureConverter'\nimport { FlightBookerApp } from './FlightBooker'\nimport { TimerApp } from './Timer'\nimport { CRUDApp } from './CRUD'\nimport { CircleDrawerApp } from './CircleDrawer'\nimport { CellsApp } from './Cells'\n\nconst Root = () => {\n  return (\n    <div>\n      <h1>7GUIs in React/Remesh/TypeScript</h1>\n      <p>This is a live version of an implementation (source) of 7GUIs with React, TypeScript and Remesh.</p>\n      <hr />\n      <CounterApp />\n      <hr />\n      <TemperatureConverterApp />\n      <hr />\n      <FlightBookerApp />\n      <hr />\n      <TimerApp />\n      <hr />\n      <CRUDApp />\n      <hr />\n      <CircleDrawerApp />\n      <hr />\n      <CellsApp />\n    </div>\n  )\n}\n\nconst container = document.getElementById('root')\n\nif (container) {\n  const root = ReactDOMClient.createRoot(container)\n  const store = Remesh.store({\n    inspectors: [RemeshReduxDevtools(), RemeshLogger()],\n  })\n\n  root.render(\n    <StrictMode>\n      <RemeshRoot store={store}>\n        <Root />\n      </RemeshRoot>\n    </StrictMode>,\n  )\n}\n"],"names":["CounterApp","counterDomain","useRemeshDomain","CounterDomain","count","useRemeshQuery","query","CountQuery","width","border","boxSizing","padding","_jsx","_jsxs","command","IncreCommand","TemperatureConverterApp","domain","TemperatureConverterDomain","celsius","CelsiusQuery","fahrenheit","FahrenheitQuery","event","UpdateCelsiusCommand","target","value","handleCelsius","UpdateFahrenheitCommand","handleFahrenheit","FlightBookerApp","flightBooker","FlightBookerDomain","option","OptionQuery","status","StatusQuery","startDateInput","StartDateInputQuery","endDateInput","EndDateInputQuery","handleOptionChange","UpdateOptionCommand","handleStartDateChange","UpdateStartDateCommand","handleEndDateChange","UpdateEndDateCommand","handleBookButtonClick","bookButton","alert","backgroundColor","startDate","endDate","TimerApp","timerDomain","TimerDomain","elapsed","ElapsedQuery","duration","DurationQuery","handleDurationChange","parseInt","isNaN","UpdateDurationCommand","handleResetElapsed","ResetElapsedCommand","display","marginRight","whiteSpace","height","background","Math","min","verticalAlign","borderRadius","toFixed","OuterClickWrapper","props","onOuterClick","restProps","containerRef","useRef","useEffect","handleClick","parentElement","isOuterClick","current","contains","addEventListener","removeEventListener","CRUDApp","CRUDDomain","filteredList","FilteredListQuery","filter","FilterPrefixQuery","created","CreatedQuery","selected","SelectedQuery","handleFilterChange","e","UpdateFilterPrefixCommand","handleSelect","itemId","SelectItemCommand","handleNameChange","UpdateSelectedNameCommand","name","UpdateCreatedCommand","handleSurnameChange","surname","handleCreate","CreateNameItemCommand","handleSync","SyncSelectedCommand","handleDelete","DeleteItemCommand","id","overflow","map","item","fullName","color","CircleDrawerApp","CircleDrawerDomain","drawState","DrawQuery","tooltipsState","TooltipsQuery","selectedCircleInfo","SelectedCircleInfoQuery","canUndo","CanUndoQuery","canRedo","CanRedoQuery","getCircleInfo","position","circle","circles","find","positionInCircle","index","indexOf","handleRightClick","preventDefault","x","pageX","y","pageY","circleInfo","SetSelectedIndexCommand","UpdateTooltipsCommand","type","handleLeftClick","DrawCommand","diameter","handleMouseMove","handleOpenSlider","handleCloseSlider","handleAdust","AdjustCommand","textAlign","UndoCommand","margin","RedoCommand","left","top","zIndex","CellsApp","cellsDomain","CellsDomain","columnKeyList","ColumnKeyListQuery","rowKeyList","RowKeyListQuery","borderCollapse","key","maxWidth","rowKey","RowView","cells","_Fragment","columnKey","cellKey","minWidth","HTMLInputElement","SelectCellCommand","CellView","cell","CellQuery","handleChange","SetCellContentCommand","input","isEditing","content","UnselectCellCommand","displayContent","Root","container","document","getElementById","root","ReactDOMClient","store","Remesh","inspectors","RemeshReduxDevtools","RemeshLogger","render","StrictMode"],"mappings":"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"}