const S=(m,e)=>{const r=m.state({name:`${e.name}.KeyListState`,default:[]}),d=m.state({name:`${e.name}.ItemState`}),l=m.query({name:`${e.name}.itemList`,impl:({get:t})=>t(r()).map(n=>t(d(n)))}),y=m.event({name:`${e.name}.ListChangedEvent`}),i=m.event({name:`${e.name}.ItemAddedEvent`}),L=m.event({name:`${e.name}.FailedToAddItemEvent`}),I=m.event({name:`${e.name}.ItemUpdatedEvent`}),$=m.event({name:`${e.name}.FailedToUpdateItemEvent`}),E=m.event({name:`${e.name}.ItemDeletedEvent`}),u=m.command({name:`${e.name}.setList`,impl:({get:t},n)=>{const a=n.map(e.key),s=t(l());return[n.map((c,v)=>d(a[v]).new(c)),r().new(a),y({previous:s,current:n})]}}),f=m.command({name:`${e.name}.addItem`,impl:({get:t},n)=>{const a=t(r()),s=t(l()),c=e.key(n);return a.includes(c)?L({reason:"item already exists"}):[u(s.concat(n)),i({item:n})]}}),q=m.command({name:`${e.name}.deleteItem`,impl:({get:t},n)=>{const s=t(l()).filter(v=>e.key(v)!==n),c=t(d(n));return[u(s),E({item:c})]}}),A=m.command({name:`${e.name}.updateItem`,impl:({get:t},n)=>{const a=e.key(n);if(!t(r()).includes(a))return $({item:n,reason:"item does not exist"});const v=t(l()).map(k=>e.key(k)===a?n:k),F=t(d(a));return[u(v),I({previous:F,current:n})]}});return m.ignite(()=>{var t;return u((t=e.default)!=null?t:[])}),{command:{setList:u,addItem:f,deleteItem:q,updateItem:A},query:{keyList:r.query,item:d.query,itemList:l},event:{ListChangedEvent:y,ItemAddedEvent:i,FailedToAddItemEvent:L,ItemUpdatedEvent:I,FailedToUpdateItemEvent:$,ItemDeletedEvent:E}}};export{S as L};
//# sourceMappingURL=list.dcb6ad7a.js.map
