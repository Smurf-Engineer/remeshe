{"version":3,"mappings":"2KAAA,MAAMA,EAAY,gBAAsBC,EAAO,CAAE,EAAOC,EAAO,sBAAmCC,EAAgB,SAAiBC,EAAYC,EAAM,CAEjJ,MAA2B,CAACA,GAAQA,EAAK,SAAW,EACzCD,EAAU,EAEd,QAAQ,IAAIC,EAAK,IAAKC,GAAQ,CAIjC,GAFAA,EAAM,GAAGJ,IAAOI,IAEZA,KAAOL,EACP,OAEJA,EAAKK,GAAO,GACZ,MAAMC,EAAQD,EAAI,SAAS,MAAM,EAC3BE,EAAcD,EAAQ,qBAAuB,GAEnD,GAAI,SAAS,cAAc,cAAcD,MAAQE,GAAa,EAC1D,OAGJ,MAAMC,EAAO,SAAS,cAAc,MAAM,EAU1C,GARAA,EAAK,IAAMF,EAAQ,aAAeP,EAC7BO,IACDE,EAAK,GAAK,SACVA,EAAK,YAAc,IAEvBA,EAAK,KAAOH,EAEZ,SAAS,KAAK,YAAYG,CAAI,EAC1BF,EACA,OAAO,IAAI,QAAQ,CAACG,EAAKC,IAAQ,CAC7BF,EAAK,iBAAiB,OAAQC,CAAG,EACjCD,EAAK,iBAAiB,QAAS,IAAME,EAAI,IAAI,MAAM,6BAA6BL,GAAK,CAAC,CAAC,CACvG,CAAa,CAER,EAAC,EAAE,KAAK,IAAMF,EAAY,EAC/B,EC9BMQ,EAAU,IAAM,CACd,MAACC,EAAMC,CAAP,EAAkBC,mBAASC,OAAOC,SAASJ,KAAKK,UAAU,CAA/B,CAAD,EAEhCC,2BAAU,IAAM,CACd,MAAMC,EAAe,IAAM,CACzBN,EAAQE,OAAOC,SAASJ,KAAKK,UAAU,CAA/B,CAAD,GAEFG,+BAAiB,aAAcD,CAAtC,EACO,IAAM,CACJE,2BAAoB,aAAcF,CAAzC,EACD,CAPM,EAUFP,CACR,EAEKU,EAAaC,EAAMC,KAAK,IAAMtB,aAAO,yBAAxB,oGACbuB,EAAgBF,EAAMC,KAAK,UAAM,OAAO,4BAAxB,+LAEhBE,EAAe,CACnBC,QAASL,EACTM,WAAYH,CAFO,EAKfI,EAAO,MAET,eACE,oBACE,KAAG,KAAMC,sBAAT,kBADF,EAGAC,mBACE,KAAG,KAAK,WAAR,qBADF,EAGAA,mBACE,KAAG,KAAK,cAAR,wBARJ,GADF,EAeIC,EAAM,IAAM,CAChB,MAAMpB,EAAOD,IACPsB,EAAYP,EAAad,GAAQ,cAEvC,SACE,iBACGmB,IADH,MAEGG,mBAAD,CAAU,SAAS,aAAnB,SAAmCD,IAAaA,MAAe,YAFjE,GADF,CAMD,EAEKE,EAAe,CACnBC,WAAY,CAACC,IAAuBC,EAAa,CAAD,EAApC,CADO,EAIfC,EAAWC,SAASC,eAAe,MAAxB,EAEbF,GACWG,EAAWH,CAAD,EAElBI,SACFC,qBAAD,YACGC,EAAD,CAAY,QAASV,EAArB,SACEJ,EAACC,EAAD,IADF,CAFJ","names":["scriptRel","seen","base","__vitePreload","baseModule","deps","dep","isCss","cssSelector","link","res","rej","useHash","hash","setHash","useState","window","location","substring","useEffect","onHashChange","addEventListener","removeEventListener","CounterApp","React","lazy","PaginationApp","ComponentMap","counter","pagination","Menu","import","_jsx","App","Component","Suspense","storeOptions","inspectors","RemeshReduxDevtools","RemeshLogger","rootElem","document","getElementById","createRoot","render","StrictMode","RemeshRoot"],"sources":["../../../projects/react-demos/vite/preload-helper","../../../projects/react-demos/src/others/index.tsx"],"sourcesContent":["const scriptRel = 'modulepreload';const seen = {};const base = '/remesh/dist/react/';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', () => rej(new Error(`Unable to preload CSS for ${dep}`)));\n            });\n        }\n    })).then(() => baseModule());\n}","import React, { StrictMode, useState, useEffect, Suspense } from 'react'\r\nimport { createRoot } from 'react-dom/client'\r\n\r\nimport { RemeshRoot } from 'remesh-react'\r\nimport { RemeshReduxDevtools } from 'remesh-redux-devtools'\r\nimport { RemeshLogger } from 'remesh-logger'\r\n\r\nconst useHash = () => {\r\n  const [hash, setHash] = useState(window.location.hash.substring(1))\r\n\r\n  useEffect(() => {\r\n    const onHashChange = () => {\r\n      setHash(window.location.hash.substring(1))\r\n    }\r\n    window.addEventListener('hashchange', onHashChange)\r\n    return () => {\r\n      window.removeEventListener('hashchange', onHashChange)\r\n    }\r\n  })\r\n\r\n  return hash\r\n}\r\n\r\nconst CounterApp = React.lazy(() => import('./counter'))\r\nconst PaginationApp = React.lazy(() => import('./pagination'))\r\n\r\nconst ComponentMap = {\r\n  counter: CounterApp,\r\n  pagination: PaginationApp,\r\n} as Record<string, React.LazyExoticComponent<() => JSX.Element>>\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <a href={import.meta.env.BASE_URL}>Home</a>\r\n      </li>\r\n      <li>\r\n        <a href=\"#counter\">Counter</a>\r\n      </li>\r\n      <li>\r\n        <a href=\"#pagination\">Pagination</a>\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const hash = useHash()\r\n  const Component = ComponentMap[hash || 'pagination']\r\n\r\n  return (\r\n    <div>\r\n      <Menu />\r\n      <Suspense fallback=\"loading...\">{!!Component ? <Component /> : 'Not Found'}</Suspense>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst storeOptions = {\r\n  inspectors: [RemeshReduxDevtools(), RemeshLogger({})],\r\n}\r\n\r\nconst rootElem = document.getElementById('root')\r\n\r\nif (rootElem) {\r\n  const root = createRoot(rootElem)\r\n\r\n  root.render(\r\n    <StrictMode>\r\n      <RemeshRoot options={storeOptions}>\r\n        <App />\r\n      </RemeshRoot>\r\n    </StrictMode>,\r\n  )\r\n}\r\n"],"file":"assets/index.bc261351.js"}