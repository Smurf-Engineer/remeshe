{"version":3,"file":"localforage.00e2d1c0.js","sources":["../../../node_modules/.pnpm/@remix-run+router@1.0.3/node_modules/@remix-run/router/dist/router.js","../../../node_modules/.pnpm/react-router@6.4.3_react@18.2.0/node_modules/react-router/dist/index.js","../../../node_modules/.pnpm/react-router-dom@6.4.3_react-dom@18.2.0+react@18.2.0/node_modules/react-router-dom/dist/index.js","../../../node_modules/.pnpm/localforage@1.10.0/node_modules/localforage/dist/localforage.js"],"sourcesContent":["/**\n * @remix-run/router v1.0.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\n\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n\n  function getCurrentLocation() {\n    return entries[index];\n  }\n\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning$1(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n\n  let history = {\n    get index() {\n      return index;\n    },\n\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return getCurrentLocation();\n    },\n\n    createHref(to) {\n      return typeof to === \"string\" ? to : createPath(to);\n    },\n\n    encodeLocation(location) {\n      return location;\n    },\n\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation\n        });\n      }\n    },\n\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation\n        });\n      }\n    },\n\n    go(delta) {\n      action = Action.Pop;\n      index = clampIndex(index + delta);\n\n      if (listener) {\n        listener({\n          action,\n          location: getCurrentLocation()\n        });\n      }\n    },\n\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    }, // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    }, // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location, to) {\n    warning$1(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning$1(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\n\n\nfunction getHistoryState(location) {\n  return {\n    usr: location.state,\n    key: location.key\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\n\n\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\n\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\n\nfunction parsePath(path) {\n  let parsedPath = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\nfunction createURL(location) {\n  // window.location.origin is \"null\" (the literal string value) in Firefox\n  // under certain conditions, notably when serving from a local HTML file\n  // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n  let base = typeof window !== \"undefined\" && typeof window.location !== \"undefined\" && window.location.origin !== \"null\" ? window.location.origin : \"unknown://unknown\";\n  let href = typeof location === \"string\" ? location : createPath(location);\n  return new URL(href, base);\n}\n\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n\n  function handlePop() {\n    action = Action.Pop;\n\n    if (listener) {\n      listener({\n        action,\n        location: history.location\n      });\n    }\n  }\n\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    let historyState = getHistoryState(location);\n    let url = history.createHref(location); // try...catch because iOS limits us to 100 pushState calls :/\n\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location\n      });\n    }\n  }\n\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    let historyState = getHistoryState(location);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location\n      });\n    }\n  }\n\n  let history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n\n    createHref(to) {\n      return createHref(window, to);\n    },\n\n    encodeLocation(location) {\n      // Encode a Location the same way window.location would\n      let url = createURL(createPath(location));\n      return _extends({}, location, {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      });\n    },\n\n    push,\n    replace,\n\n    go(n) {\n      return globalHistory.go(n);\n    }\n\n  };\n  return history;\n} //#endregion\n\nvar ResultType;\n\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\n\nfunction isIndexRoute(route) {\n  return route.index === true;\n} // Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\n\n\nfunction convertRoutesToDataRoutes(routes, parentPath, allIds) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  if (allIds === void 0) {\n    allIds = new Set();\n  }\n\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!allIds.has(id), \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    allIds.add(id);\n\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, {\n        id\n      });\n\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, {\n        id,\n        children: route.children ? convertRoutesToDataRoutes(route.children, treePath, allIds) : undefined\n      });\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/match-routes\n */\n\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    safelyDecodeURI(pathname));\n  }\n\n  return matches;\n}\n\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n\n  routes.forEach((route, index) => {\n    let meta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n\n    if (route.children && route.children.length > 0) {\n      invariant( // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    } // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n\n\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  });\n  return branches;\n}\n\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\n\nconst isSplat = s => s === \"*\";\n\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\n\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\n\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/generate-path\n */\n\n\nfunction generatePath(path, params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  return path.replace(/:(\\w+)/g, (_, key) => {\n    invariant(params[key] != null, \"Missing \\\":\" + key + \"\\\" param\");\n    return params[key];\n  }).replace(/(\\/?)\\*/, (_, prefix, __, str) => {\n    const star = \"*\";\n\n    if (params[star] == null) {\n      // If no splat was provided, trim the trailing slash _unless_ it's\n      // the entire path\n      return str === \"/*\" ? \"/\" : \"\";\n    } // Apply the splat\n\n\n    return \"\" + prefix + params[star];\n  });\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/match-path\n */\n\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\n\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n\n  if (end === void 0) {\n    end = true;\n  }\n\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"([^\\\\/]+)\";\n  });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\n\n\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  } // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n\n\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n/**\n * @private\n */\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/resolve-path\n */\n\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\n\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\n\n\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n/**\n * @private\n */\n\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n\n  let to;\n\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from; // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\"); // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    } // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original \"to\" had one\n\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\"); // Or if this was a link to the current path which has a trailing slash\n\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n/**\n * @private\n */\n\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\n\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\n\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\n\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\n\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\n\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data) {\n    this.pendingKeys = new Set();\n    this.subscriber = undefined;\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\"); // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n  }\n\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.pendingKeys.add(key); // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, null, data), error => this.onSettle(promise, key, error)); // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeys.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    const subscriber = this.subscriber;\n\n    if (error) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      subscriber && subscriber(false);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    subscriber && subscriber(false);\n    return data;\n  }\n\n  subscribe(fn) {\n    this.subscriber = fn;\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeys.forEach((v, k) => this.pendingKeys.delete(k));\n    let subscriber = this.subscriber;\n    subscriber && subscriber(true);\n  }\n\n  async resolveData(signal) {\n    let aborted = false;\n\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeys.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n\n}\n\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\n\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n\n  return value._data;\n}\n\nfunction defer(data) {\n  return new DeferredData(data);\n}\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\n\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n\n  let responseInit = init;\n\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\n\nclass ErrorResponse {\n  constructor(status, statusText, data) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.data = data;\n  }\n\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response throw from an action/loader\n */\n\nfunction isRouteErrorResponse(e) {\n  return e instanceof ErrorResponse;\n}\n\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n};\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst isServer = !isBrowser; //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\n\nfunction createRouter(init) {\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let dataRoutes = convertRoutesToDataRoutes(init.routes); // Cleanup function for history\n\n  let unlistenHistory = null; // Externally-provided functions to call on all state changes\n\n  let subscribers = new Set(); // Externally-provided object to hold scroll restoration locations during routing\n\n  let savedScrollPositions = null; // Externally-provided function to get scroll restoration keys\n\n  let getScrollRestorationKey = null; // Externally-provided function to get current scroll position\n\n  let getScrollPosition = null; // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n\n  let initialScrollRestored = false;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, init.basename);\n  let initialErrors = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let {\n      matches,\n      route,\n      error\n    } = getNotFoundMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n\n  let initialized = !initialMatches.some(m => m.route.loader) || init.hydrationData != null;\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    restoreScrollPosition: null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map()\n  }; // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n\n  let pendingAction = Action.Pop; // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n\n  let pendingPreventScrollReset = false; // AbortController for the active navigation\n\n  let pendingNavigationController; // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n\n  let isUninterruptedRevalidation = false; // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidate()\n  //  - X-Remix-Revalidate (from redirect)\n\n  let isRevalidationRequired = false; // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n\n  let cancelledDeferredRoutes = []; // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n\n  let cancelledFetcherLoads = []; // AbortControllers for any in-flight fetchers\n\n  let fetchControllers = new Map(); // Track loads based on the order in which they started\n\n  let incrementingLoadId = 0; // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n\n  let pendingNavigationLoadId = -1; // Fetchers that triggered data reloads as a result of their actions\n\n  let fetchReloadIds = new Map(); // Fetchers that triggered redirect navigations from their actions\n\n  let fetchRedirectIds = new Set(); // Most recent href/match for fetcher.load calls for fetchers\n\n  let fetchLoadMatches = new Map(); // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n\n  let activeDeferreds = new Map(); // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location\n      } = _ref;\n      return startNavigation(historyAction, location);\n    }); // Kick off initial data load if needed.  Use Pop to avoid modifying history\n\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location);\n    }\n\n    return router;\n  } // Clean up a router and it's side effects\n\n\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n  } // Subscribe to state updates for the router\n\n\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  } // Update our state and notify the calling context of the change\n\n\n  function updateState(newState) {\n    state = _extends({}, state, newState);\n    subscribers.forEach(subscriber => subscriber(state));\n  } // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n\n\n  function completeNavigation(location, newState) {\n    var _state$navigation$for;\n\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a submission\n    // - We're past the submitting state and into the loading state\n    // - The location we've finished loading is different from the submission\n    //   location, indicating we redirected from the action (avoids false\n    //   positives for loading/submissionRedirect when actionData returned\n    //   on a prior submission)\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && state.navigation.state === \"loading\" && ((_state$navigation$for = state.navigation.formAction) == null ? void 0 : _state$navigation$for.split(\"?\")[0]) === location.pathname; // Always preserve any existing loaderData from re-used routes\n\n    let newLoaderData = newState.loaderData ? {\n      loaderData: mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [])\n    } : {};\n    updateState(_extends({}, isActionReload ? {} : {\n      actionData: null\n    }, newState, newLoaderData, {\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      // Don't restore on submission navigations\n      restoreScrollPosition: state.navigation.formData ? false : getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset: pendingPreventScrollReset\n    }));\n\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    } // Reset stateful navigation vars\n\n\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  } // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n\n\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(to, opts);\n    let location = createLocation(state.location, path, opts && opts.state); // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n\n    location = init.history.encodeLocation(location);\n    let historyAction = (opts && opts.replace) === true || submission != null ? Action.Replace : Action.Push;\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    return await startNavigation(historyAction, location, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace\n    });\n  } // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n\n\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    }); // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n\n    if (state.navigation.state === \"submitting\") {\n      return;\n    } // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n\n\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    } // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n\n\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  } // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n\n\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true; // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(dataRoutes, location, init.basename); // Short circuit with a 404 on the root error boundary if we match nothing\n\n    if (!matches) {\n      let {\n        matches: notFoundMatches,\n        route,\n        error\n      } = getNotFoundMatches(dataRoutes); // Cancel all pending deferred on 404s since we don't keep any routes\n\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      });\n      return;\n    } // Short circuit if it's only a hash change\n\n\n    if (isHashChangeOnly(state.location, location)) {\n      completeNavigation(location, {\n        matches\n      });\n      return;\n    } // Create a controller/Request for this navigation\n\n\n    pendingNavigationController = new AbortController();\n    let request = createRequest(location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionData;\n    let pendingError;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts && opts.submission) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace\n      });\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation = _extends({\n        state: \"loading\",\n        location\n      }, opts.submission);\n\n      loadingNavigation = navigation;\n    } // Call loaders\n\n\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.replace, pendingActionData, pendingError);\n\n    if (shortCircuited) {\n      return;\n    } // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n\n\n    pendingNavigationController = null;\n    completeNavigation(location, {\n      matches,\n      loaderData,\n      errors\n    });\n  } // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n\n\n  async function handleAction(request, location, submission, matches, opts) {\n    interruptActiveLoads(); // Put us in a submitting state\n\n    let navigation = _extends({\n      state: \"submitting\",\n      location\n    }, submission);\n\n    updateState({\n      navigation\n    }); // Call our action and get the result\n\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action) {\n      result = getMethodNotAllowedResult(location);\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, router.basename);\n\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let redirectNavigation = _extends({\n        state: \"loading\",\n        location: createLocation(state.location, result.location)\n      }, submission);\n\n      await startRedirectNavigation(result, redirectNavigation, opts && opts.replace);\n      return {\n        shortCircuited: true\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id); // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n\n      return {\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw new Error(\"defer() is not supported in actions\");\n    }\n\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  } // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n\n\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, replace, pendingActionData, pendingError) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n\n    if (!loadingNavigation) {\n      let navigation = {\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      };\n      loadingNavigation = navigation;\n    }\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, pendingActionData, pendingError, fetchLoadMatches); // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId)); // Short circuit if we have no loaders to run\n\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      completeNavigation(location, {\n        matches,\n        loaderData: mergeLoaderData(state.loaderData, {}, matches),\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        actionData: pendingActionData || null\n      });\n      return {\n        shortCircuited: true\n      };\n    } // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n\n\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(_ref2 => {\n        let [key] = _ref2;\n        let fetcher = state.fetchers.get(key);\n        let revalidatingFetcher = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined\n        };\n        state.fetchers.set(key, revalidatingFetcher);\n      });\n      updateState(_extends({\n        navigation: loadingNavigation,\n        actionData: pendingActionData || state.actionData || null\n      }, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach(_ref3 => {\n      let [key] = _ref3;\n      return fetchControllers.set(key, pendingNavigationController);\n    });\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    } // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n\n\n    revalidatingFetchers.forEach(_ref4 => {\n      let [key] = _ref4;\n      return fetchControllers.delete(key);\n    }); // If any loaders returned a redirect Response, start a new REPLACE navigation\n\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      let redirectNavigation = getLoaderRedirect(state, redirect);\n      await startRedirectNavigation(redirect, redirectNavigation, replace);\n      return {\n        shortCircuited: true\n      };\n    } // Process and commit output from loaders\n\n\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds); // Wire up subscribers to update loaderData as promises settle\n\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    return _extends({\n      loaderData,\n      errors\n    }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n\n  function getFetcher(key) {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  } // Trigger a fetcher load/submit for the given fetcher key\n\n\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let matches = matchRoutes(dataRoutes, href, init.basename);\n\n    if (!matches) {\n      setFetcherError(key, routeId, new ErrorResponse(404, \"Not Found\", null));\n      return;\n    }\n\n    let {\n      path,\n      submission\n    } = normalizeNavigateOptions(href, opts, true);\n    let match = getTargetMatch(matches, path);\n\n    if (submission) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    } // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n\n\n    fetchLoadMatches.set(key, [path, match, matches]);\n    handleFetcherLoader(key, routeId, path, match, matches);\n  } // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n\n\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action) {\n      let {\n        error\n      } = getMethodNotAllowedResult(path);\n      setFetcherError(key, routeId, error);\n      return;\n    } // Put this fetcher into it's submitting state\n\n\n    let existingFetcher = state.fetchers.get(key);\n\n    let fetcher = _extends({\n      state: \"submitting\"\n    }, submission, {\n      data: existingFetcher && existingFetcher.data\n    });\n\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }); // Call the action for the fetcher\n\n    let abortController = new AbortController();\n    let fetchRequest = createRequest(path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match, requestMatches, router.basename);\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n\n      let loadingFetcher = _extends({\n        state: \"loading\"\n      }, submission, {\n        data: undefined\n      });\n\n      state.fetchers.set(key, loadingFetcher);\n      updateState({\n        fetchers: new Map(state.fetchers)\n      });\n\n      let redirectNavigation = _extends({\n        state: \"loading\",\n        location: createLocation(state.location, actionResult.location)\n      }, submission);\n\n      await startRedirectNavigation(actionResult, redirectNavigation);\n      return;\n    } // Process any non-redirect errors thrown\n\n\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      invariant(false, \"defer() is not supported in actions\");\n    } // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n\n\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createRequest(nextLocation, abortController.signal);\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(dataRoutes, state.navigation.location, init.basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = _extends({\n      state: \"loading\",\n      data: actionResult.data\n    }, submission);\n\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, {\n      [match.route.id]: actionResult.data\n    }, undefined, // No need to send through errors since we short circuit above\n    fetchLoadMatches); // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n\n    revalidatingFetchers.filter(_ref5 => {\n      let [staleKey] = _ref5;\n      return staleKey !== key;\n    }).forEach(_ref6 => {\n      let [staleKey] = _ref6;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = {\n        state: \"loading\",\n        data: existingFetcher && existingFetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      };\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      fetchControllers.set(staleKey, abortController);\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(_ref7 => {\n      let [staleKey] = _ref7;\n      return fetchControllers.delete(staleKey);\n    });\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      let redirectNavigation = getLoaderRedirect(state, redirect);\n      await startRedirectNavigation(redirect, redirectNavigation);\n      return;\n    } // Process and commit output from loaders\n\n\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    let doneFetcher = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined\n    };\n    state.fetchers.set(key, doneFetcher);\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId); // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState(_extends({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches)\n      }, didAbortFetchLoads ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      isRevalidationRequired = false;\n    }\n  } // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n\n\n  async function handleFetcherLoader(key, routeId, path, match, matches) {\n    let existingFetcher = state.fetchers.get(key); // Put this fetcher into it's loading state\n\n    let loadingFetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      data: existingFetcher && existingFetcher.data\n    };\n    state.fetchers.set(key, loadingFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }); // Call the loader for this fetcher route match\n\n    let abortController = new AbortController();\n    let fetchRequest = createRequest(path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let result = await callLoaderOrAction(\"loader\", fetchRequest, match, matches, router.basename); // Deferred isn't supported or fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    } // We can delete this so long as we weren't aborted by ou our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n\n\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    } // If the loader threw a redirect Response, start a new REPLACE navigation\n\n\n    if (isRedirectResult(result)) {\n      let redirectNavigation = getLoaderRedirect(state, result);\n      await startRedirectNavigation(result, redirectNavigation);\n      return;\n    } // Process any non-redirect errors thrown\n\n\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key); // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error\n        }\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\"); // Put the fetcher back into an idle state\n\n    let doneFetcher = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n\n\n  async function startRedirectNavigation(redirect, navigation, replace) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    invariant(navigation.location, \"Expected a location on the redirect navigation\"); // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;\n    await startNavigation(redirectHistoryAction, navigation.location, {\n      overrideNavigation: navigation\n    });\n  }\n\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, router.basename)), ...fetchersToLoad.map(_ref8 => {\n      let [, href, match, fetchMatches] = _ref8;\n      return callLoaderOrAction(\"loader\", createRequest(href, request.signal), match, fetchMatches, router.basename);\n    })]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, request.signal, false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(_ref9 => {\n      let [,, match] = _ref9;\n      return match;\n    }), fetcherResults, request.signal, true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true; // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds()); // Abort in-flight fetcher loads\n\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key, routeId, error) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    });\n  }\n\n  function deleteFetcher(key) {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n      }\n    }\n\n    markFetchersDone(doneKeys);\n  }\n\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  } // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n\n\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n\n    getScrollRestorationKey = getKey || (location => location.key); // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n\n\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n\n    return null;\n  }\n\n  router = {\n    get basename() {\n      return init.basename;\n    },\n\n    get state() {\n      return state;\n    },\n\n    get routes() {\n      return dataRoutes;\n    },\n\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds\n  };\n  return router;\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nconst validActionMethods = new Set([\"POST\", \"PUT\", \"PATCH\", \"DELETE\"]);\nconst validRequestMethods = new Set([\"GET\", \"HEAD\", ...validActionMethods]);\nfunction unstable_createStaticHandler(routes) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to unstable_createStaticHandler\");\n  let dataRoutes = convertRoutesToDataRoutes(routes);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n\n  async function query(request) {\n    let url = new URL(request.url);\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location);\n\n    if (!validRequestMethods.has(request.method)) {\n      let {\n        matches: methodNotAllowedMatches,\n        route,\n        error\n      } = getMethodNotAllowedMatches(dataRoutes);\n      return {\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n    } else if (!matches) {\n      let {\n        matches: notFoundMatches,\n        route,\n        error\n      } = getNotFoundMatches(dataRoutes);\n      return {\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n    }\n\n    let result = await queryImpl(request, location, matches);\n\n    if (result instanceof Response) {\n      return result;\n    } // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n\n\n    return _extends({\n      location\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated thrown Response (such as a\n   * 404 or 405) will have a custom X-Remix-Router-Error: \"yes\" header on it\n   * in order to differentiate from responses thrown from user actions/loaders.\n   */\n\n\n  async function queryRoute(request, routeId) {\n    let url = new URL(request.url);\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location);\n\n    if (!validRequestMethods.has(request.method)) {\n      throw createRouterErrorResponse(null, {\n        status: 405,\n        statusText: \"Method Not Allowed\"\n      });\n    } else if (!matches) {\n      throw createRouterErrorResponse(null, {\n        status: 404,\n        statusText: \"Not Found\"\n      });\n    }\n\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n\n    if (!match) {\n      throw createRouterErrorResponse(null, {\n        status: 404,\n        statusText: \"Not Found\"\n      });\n    }\n\n    let result = await queryImpl(request, location, matches, match);\n\n    if (result instanceof Response) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    } // Pick off the right state value to return\n\n\n    let routeData = [result.actionData, result.loaderData].find(v => v);\n    return Object.values(routeData || {})[0];\n  }\n\n  async function queryImpl(request, location, matches, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n\n    try {\n      if (validActionMethods.has(request.method)) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), routeMatch != null);\n        return result;\n      }\n\n      let result = await loadRouteData(request, matches, routeMatch);\n      return result instanceof Response ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n\n        return e.response;\n      } // Redirects are always returned since they don't propagate to catch\n      // boundaries\n\n\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n\n      throw e;\n    }\n  }\n\n  async function submit(request, matches, actionMatch, isRouteRequest) {\n    let result;\n\n    if (!actionMatch.route.action) {\n      if (isRouteRequest) {\n        throw createRouterErrorResponse(null, {\n          status: 405,\n          statusText: \"Method Not Allowed\"\n        });\n      }\n\n      result = getMethodNotAllowedResult(request.url);\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, undefined, // Basename not currently supported in static handlers\n      true, isRouteRequest);\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(method + \"() call aborted\");\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      throw new Error(\"defer() is not supported in actions\");\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n        return {\n          matches: [actionMatch],\n          loaderData: {},\n          actionData: null,\n          errors: {\n            [boundaryMatch.route.id]: result.error\n          },\n          // Note: statusCode + headers are unused here since queryRoute will\n          // return the raw Response or value\n          statusCode: 500,\n          loaderHeaders: {},\n          actionHeaders: {}\n        };\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, undefined, {\n        [boundaryMatch.route.id]: result.error\n      }); // action status codes take precedence over loader status codes\n\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n\n    let context = await loadRouteData(request, matches);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n\n  async function loadRouteData(request, matches, routeMatch, pendingActionError) {\n    let isRouteRequest = routeMatch != null;\n    let requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);\n    let matchesToLoad = requestMatches.filter(m => m.route.loader); // Short circuit if we have no loaders to run\n\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        loaderData: {},\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {}\n      };\n    }\n\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, undefined, // Basename not currently supported in static handlers\n    true, isRouteRequest))]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(method + \"() call aborted\");\n    } // Can't do anything with these without the Remix side of things, so just\n    // cancel them for now\n\n\n    results.forEach(result => {\n      if (isDeferredResult(result)) {\n        result.deferredData.cancel();\n      }\n    }); // Process and commit output from loaders\n\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError);\n    return _extends({}, context, {\n      matches\n    });\n  }\n\n  function createRouterErrorResponse(body, init) {\n    return new Response(body, _extends({}, init, {\n      headers: _extends({}, init.headers, {\n        \"X-Remix-Router-Error\": \"yes\"\n      })\n    }));\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\n\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n\n  return newContext;\n} // Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\n\nfunction normalizeNavigateOptions(to, opts, isFetcher) {\n  if (isFetcher === void 0) {\n    isFetcher = false;\n  }\n\n  let path = typeof to === \"string\" ? to : createPath(to); // Return location verbatim on non-submission navigations\n\n  if (!opts || !(\"formMethod\" in opts) && !(\"formData\" in opts)) {\n    return {\n      path\n    };\n  } // Create a Submission on non-GET navigations\n\n\n  if (opts.formMethod != null && opts.formMethod !== \"get\") {\n    return {\n      path,\n      submission: {\n        formMethod: opts.formMethod,\n        formAction: stripHashFromPath(path),\n        formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n        formData: opts.formData\n      }\n    };\n  } // No formData to flatten for GET submission\n\n\n  if (!opts.formData) {\n    return {\n      path\n    };\n  } // Flatten submission onto URLSearchParams for GET submissions\n\n\n  let parsedPath = parsePath(path);\n\n  try {\n    let searchParams = convertFormDataToSearchParams(opts.formData); // Since fetcher GET submissions only run a single loader (as opposed to\n    // navigation GET submissions which run all loaders), we need to preserve\n    // any incoming ?index params\n\n    if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n      searchParams.append(\"index\", \"\");\n    }\n\n    parsedPath.search = \"?\" + searchParams;\n  } catch (e) {\n    return {\n      path,\n      error: new ErrorResponse(400, \"Bad Request\", \"Cannot submit binary form data using GET\")\n    };\n  }\n\n  return {\n    path: createPath(parsedPath)\n  };\n}\n\nfunction getLoaderRedirect(state, redirect) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    formData\n  } = state.navigation;\n  let navigation = {\n    state: \"loading\",\n    location: createLocation(state.location, redirect.location),\n    formMethod: formMethod || undefined,\n    formAction: formAction || undefined,\n    formEncType: formEncType || undefined,\n    formData: formData || undefined\n  };\n  return navigation;\n} // Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\n\n\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, pendingActionData, pendingError, fetchLoadMatches) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : null; // Pick navigation matches that are net-new or qualify for revalidation\n\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => match.route.loader != null && (isNewLoader(state.loaderData, state.matches[index], match) || // If this route had a pending deferred cancelled it must be revalidated\n  cancelledDeferredRoutes.some(id => id === match.route.id) || shouldRevalidateLoader(state.location, state.matches[index], submission, location, match, isRevalidationRequired, actionResult))); // Pick fetcher.loads that need to be revalidated\n\n  let revalidatingFetchers = [];\n  fetchLoadMatches && fetchLoadMatches.forEach((_ref10, key) => {\n    let [href, match, fetchMatches] = _ref10;\n\n    // This fetcher was cancelled from a prior action submission - force reload\n    if (cancelledFetcherLoads.includes(key)) {\n      revalidatingFetchers.push([key, href, match, fetchMatches]);\n    } else if (isRevalidationRequired) {\n      let shouldRevalidate = shouldRevalidateLoader(href, match, submission, href, match, isRevalidationRequired, actionResult);\n\n      if (shouldRevalidate) {\n        revalidatingFetchers.push([key, href, match, fetchMatches]);\n      }\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = // [a] -> [a, b]\n  !currentMatch || // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id; // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n\n  let isMissingData = currentLoaderData[match.route.id] === undefined; // Always load if this is a net-new route or we don't yet have data\n\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (// param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\n\nfunction shouldRevalidateLoader(currentLocation, currentMatch, submission, location, match, isRevalidationRequired, actionResult) {\n  let currentUrl = createURL(currentLocation);\n  let currentParams = currentMatch.params;\n  let nextUrl = createURL(location);\n  let nextParams = match.params; // This is the default implementation as to when we revalidate.  If the route\n  // provides it's own implementation, then we give them full control but\n  // provide this value so they can leverage it if needed after they check\n  // their own specific use cases\n  // Note that fetchers always provide the same current/next locations so the\n  // URL-based checks here don't apply to fetcher shouldRevalidate calls\n\n  let defaultShouldRevalidate = isNewRouteInstance(currentMatch, match) || // Clicked the same link, resubmitted a GET form\n  currentUrl.toString() === nextUrl.toString() || // Search params affect all loaders\n  currentUrl.search !== nextUrl.search || // Forced revalidation due to submission, useRevalidate, or X-Remix-Revalidate\n  isRevalidationRequired;\n\n  if (match.route.shouldRevalidate) {\n    let routeChoice = match.route.shouldRevalidate(_extends({\n      currentUrl,\n      currentParams,\n      nextUrl,\n      nextParams\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate\n    }));\n\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return defaultShouldRevalidate;\n}\n\nasync function callLoaderOrAction(type, request, match, matches, basename, isStaticRequest, isRouteRequest) {\n  if (isStaticRequest === void 0) {\n    isStaticRequest = false;\n  }\n\n  if (isRouteRequest === void 0) {\n    isRouteRequest = false;\n  }\n\n  let resultType;\n  let result; // Setup a promise we can race against so that abort signals short circuit\n\n  let reject;\n  let abortPromise = new Promise((_, r) => reject = r);\n\n  let onReject = () => reject();\n\n  request.signal.addEventListener(\"abort\", onReject);\n\n  try {\n    let handler = match.route[type];\n    invariant(handler, \"Could not find the \" + type + \" to run on the \\\"\" + match.route.id + \"\\\" route\");\n    result = await Promise.race([handler({\n      request,\n      params: match.params\n    }), abortPromise]);\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    request.signal.removeEventListener(\"abort\", onReject);\n  }\n\n  if (result instanceof Response) {\n    let status = result.status; // Process redirects\n\n    if (status >= 300 && status <= 399) {\n      let location = result.headers.get(\"Location\");\n      invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\"); // Support relative routing in redirects\n\n      let activeMatches = matches.slice(0, matches.indexOf(match) + 1);\n      let routePathnames = getPathContributingMatches(activeMatches).map(match => match.pathnameBase);\n      let requestPath = createURL(request.url).pathname;\n      let resolvedLocation = resolveTo(location, routePathnames, requestPath);\n      invariant(createPath(resolvedLocation), \"Unable to resolve redirect location: \" + result.headers.get(\"Location\")); // Prepend the basename to the redirect location if we have one\n\n      if (basename) {\n        let path = resolvedLocation.pathname;\n        resolvedLocation.pathname = path === \"/\" ? basename : joinPaths([basename, path]);\n      }\n\n      location = createPath(resolvedLocation); // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n\n      if (isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null\n      };\n    } // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n\n\n    if (isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result\n      };\n    }\n\n    let data;\n    let contentType = result.headers.get(\"Content-Type\");\n\n    if (contentType && contentType.startsWith(\"application/json\")) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n\n  if (result instanceof DeferredData) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result\n    };\n  }\n\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n\nfunction createRequest(location, signal, submission) {\n  let url = createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n\n  if (submission) {\n    let {\n      formMethod,\n      formEncType,\n      formData\n    } = submission;\n    init.method = formMethod.toUpperCase();\n    init.body = formEncType === \"application/x-www-form-urlencoded\" ? convertFormDataToSearchParams(formData) : formData;\n  } // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    invariant(typeof value === \"string\", 'File inputs are not supported with encType \"application/x-www-form-urlencoded\", ' + 'please use \"multipart/form-data\" instead.');\n    searchParams.append(key, value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {}; // Process loader results into state.loaderData/state.errors\n\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error; // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = Object.assign(errors || {}, {\n        [boundaryMatch.route.id]: error\n      }); // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else if (isDeferredResult(result)) {\n      activeDeferreds && activeDeferreds.set(id, result.deferredData);\n      loaderData[id] = result.deferredData.data; // TODO: Add statusCode/headers once we wire up streaming in Remix\n    } else {\n      loaderData[id] = result.data; // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n\n      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  }); // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here\n\n  if (pendingError) {\n    errors = pendingError;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\n\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds); // Process results from our revalidating fetchers\n\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let [key,, match] = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index]; // Process fetcher non-redirect errors\n\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match.route.id);\n\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      throw new Error(\"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      throw new Error(\"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return {\n    loaderData,\n    errors\n  };\n}\n\nfunction mergeLoaderData(loaderData, newLoaderData, matches) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n\n  matches.forEach(match => {\n    let id = match.route.id;\n\n    if (newLoaderData[id] === undefined && loaderData[id] !== undefined) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n  });\n  return mergedLoaderData;\n} // Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\n\n\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\n\nfunction getShortCircuitMatches(routes, status, statusText) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-\" + status + \"-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route,\n    error: new ErrorResponse(status, statusText, null)\n  };\n}\n\nfunction getNotFoundMatches(routes) {\n  return getShortCircuitMatches(routes, 404, \"Not Found\");\n}\n\nfunction getMethodNotAllowedMatches(routes) {\n  return getShortCircuitMatches(routes, 405, \"Method Not Allowed\");\n}\n\nfunction getMethodNotAllowedResult(path) {\n  let href = typeof path === \"string\" ? path : createPath(path);\n  console.warn(\"You're trying to submit to a route that does not have an action.  To \" + \"fix this, please add an `action` function to the route for \" + (\"[\" + href + \"]\"));\n  return {\n    type: ResultType.error,\n    error: new ErrorResponse(405, \"Method Not Allowed\", \"\")\n  };\n} // Find any returned redirect errors, starting from the lowest match\n\n\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\n\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\n\nfunction isHashChangeOnly(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash !== b.hash;\n}\n\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\n\nfunction isRedirectResponse(result) {\n  if (!(result instanceof Response)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj) {\n  return obj && obj.response instanceof Response && (obj.type === ResultType.data || ResultType.error);\n}\n\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signal, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n\n  let aborted = await result.deferredData.resolveData(signal);\n\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\n\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n} // Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\n\n\nfunction createUseMatchesMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\n\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  } // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n\n\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n} //#endregion\n\nexport { AbortedDeferredError, Action, ErrorResponse, IDLE_FETCHER, IDLE_NAVIGATION, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, getPathContributingMatches as UNSAFE_getPathContributingMatches, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, defer, generatePath, getStaticContextFromError, getToPathname, invariant, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, resolvePath, resolveTo, stripBasename, unstable_createStaticHandler, warning };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.4.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { invariant, joinPaths, matchPath, UNSAFE_getPathContributingMatches, warning, resolveTo, parsePath, matchRoutes, Action, isRouteErrorResponse, createMemoryHistory, stripBasename, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, resolvePath } from '@remix-run/router';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\n\nfunction isPolyfill(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nconst is = typeof Object.is === \"function\" ? Object.is : isPolyfill; // Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\n\nconst {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useDebugValue\n} = React;\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore$2(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\"You are using an outdated, pre-release alpha of React 18 that \" + \"does not support useSyncExternalStore. The \" + \"use-sync-external-store shim will not work correctly. Upgrade \" + \"to a newer pre-release.\");\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  const value = getSnapshot();\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n\n      if (!is(value, cachedValue)) {\n        console.error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  const [{\n    inst\n  }, forceUpdate] = useState({\n    inst: {\n      value,\n      getSnapshot\n    }\n  }); // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [subscribe, value, getSnapshot]);\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst\n      });\n    }\n\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\n/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\nconst canUseDOM = !!(typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\");\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore$2;\nconst useSyncExternalStore = \"useSyncExternalStore\" in React ? (module => module.useSyncExternalStore)(React) : shim;\n\n// Contexts for data routers\nconst DataStaticRouterContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataStaticRouterContext.displayName = \"DataStaticRouterContext\";\n}\n\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\n\nconst LocationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\n\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: []\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\n\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-href\n */\n\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname; // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-in-router-context\n */\n\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-location\n */\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-navigation-type\n */\n\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-match\n */\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-navigate\n */\nfunction useNavigate() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(activeRef.current, \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\") : void 0;\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\"); // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history.  If this is a root navigation, then we\n    // navigate to the raw basename which allows the basename to have full\n    // control over the presence of a trailing slash on root links\n\n    if (basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/hooks/use-outlet-context\n */\n\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-outlet\n */\n\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-params\n */\n\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-resolved-path\n */\n\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-routes\n */\n\nfunction useRoutes(routes, locationArg) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n\n  let locationFromContext = useLocation();\n  let location;\n\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(matches == null || matches[matches.length - 1].route.element !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" does not have an element. \" + \"This means it will render an <Outlet /> with a null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase, match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])\n  })), parentMatches, dataRouterStateContext || undefined); // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n\n\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorElement() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unhandled Thrown Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own\\xA0\", /*#__PURE__*/React.createElement(\"code\", {\n    style: codeStyles\n  }, \"errorElement\"), \" props on\\xA0\", /*#__PURE__*/React.createElement(\"code\", {\n    style: codeStyles\n  }, \"<Route>\")));\n}\n\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location\n      };\n    } // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n\n\n    return {\n      error: props.error || state.error,\n      location: state.location\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    }) : this.props.children;\n  }\n\n}\n\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataStaticRouterContext = React.useContext(DataStaticRouterContext); // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n\n  if (dataStaticRouterContext && match.route.errorElement) {\n    dataStaticRouterContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\n\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n\n  if (matches == null) {\n    if (dataRouterState != null && dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches; // If we have data errors, trim matches to the highest error boundary\n\n  let errors = dataRouterState == null ? void 0 : dataRouterState.errors;\n\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Could not find a matching route for the current errors: \" + errors) : invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null; // Only data routers handle errors\n\n    let errorElement = dataRouterState ? match.route.errorElement || /*#__PURE__*/React.createElement(DefaultErrorElement, null) : null;\n\n    let getChildren = () => /*#__PURE__*/React.createElement(RenderedRoute, {\n      match: match,\n      routeContext: {\n        outlet,\n        matches: parentMatches.concat(renderedMatches.slice(0, index + 1))\n      }\n    }, error ? errorElement : match.route.element !== undefined ? match.route.element : outlet); // Only wrap in an error boundary within data router usages when we have an\n    // errorElement on this route.  Otherwise let it bubble up to an ancestor\n    // errorElement\n\n\n    return dataRouterState && (match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      component: errorElement,\n      error: error,\n      children: getChildren()\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return state;\n}\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\n\n\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\n\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  };\n}\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\n\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match; // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\n\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useLoaderData must be used inside a RouteContext\") : invariant(false) : void 0;\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useLoaderData can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0;\n  return state.loaderData[thisRoute.route.id];\n}\n/**\n * Returns the loaderData for the given routeId\n */\n\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n/**\n * Returns the action data for the nearest ancestor Route action\n */\n\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useActionData must be used inside a RouteContext\") : invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * errorElement to display a proper error message.\n */\n\nfunction useRouteError() {\n  var _state$errors;\n\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let route = React.useContext(RouteContext);\n  let thisRoute = route.matches[route.matches.length - 1]; // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n\n  if (error) {\n    return error;\n  }\n\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useRouteError must be used inside a RouteContext\") : invariant(false) : void 0;\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useRouteError can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0; // Otherwise look for errors from our data router state\n\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[thisRoute.route.id];\n}\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nconst alreadyWarned = {};\n\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? warning(false, message) : void 0;\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router\n  } = _ref;\n  // Sync router state to our component state to force re-renders\n  let state = useSyncExternalStore(router.subscribe, () => router.state, // We have to provide this so React@18 doesn't complain during hydration,\n  // but we pass our serialized hydration data into the router so state here\n  // is already synced with what the server saw\n  () => router.state);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  return /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: {\n      router,\n      navigator,\n      static: false,\n      // Do we need this?\n      basename\n    }\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: router.basename,\n    location: router.state.location,\n    navigationType: router.state.historyAction,\n    navigator: navigator\n  }, router.state.initialized ? /*#__PURE__*/React.createElement(Routes, null) : fallbackElement)));\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/routers/memory-router\n */\nfunction MemoryRouter(_ref2) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex\n  } = _ref2;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/components/navigate\n */\nfunction Navigate(_ref3) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref3;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n\n    navigate(to, {\n      replace,\n      state,\n      relative\n    });\n  });\n  return null;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : invariant(false) ;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/routers/router\n */\nfunction Router(_ref4) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref4;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : invariant(false) : void 0; // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key\n    };\n  }, [basename, pathname, search, hash, state, key]);\n  process.env.NODE_ENV !== \"production\" ? warning(location != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n\n  if (location == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: {\n      location,\n      navigationType\n    }\n  }));\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/components/routes\n */\nfunction Routes(_ref5) {\n  let {\n    children,\n    location\n  } = _ref5;\n  let dataRouterContext = React.useContext(DataRouterContext); // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n\n  let routes = dataRouterContext && !children ? dataRouterContext.router.routes : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref6) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref6;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus;\n\n(function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n})(AwaitRenderStatus || (AwaitRenderStatus = {}));\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    } // Throw to the suspense boundary\n\n\n    throw promise;\n  }\n\n}\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\n\n\nfunction ResolveAwait(_ref7) {\n  let {\n    children\n  } = _ref7;\n  let data = useAsyncValue();\n\n  if (typeof children === \"function\") {\n    return children(data);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/create-routes-from-children\n */\n\n\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, parentPath));\n      return;\n    }\n\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"An index route cannot have child routes.\") : invariant(false) : void 0;\n    let treePath = [...parentPath, index];\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      hasErrorBoundary: element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n/**\n * @private\n * Walk the route tree and add hasErrorBoundary if it's not provided, so that\n * users providing manual route arrays can just specify errorElement\n */\n\nfunction enhanceManualRouteObjects(routes) {\n  return routes.map(route => {\n    let routeClone = _extends({}, route);\n\n    if (routeClone.hasErrorBoundary == null) {\n      routeClone.hasErrorBoundary = routeClone.errorElement != null;\n    }\n\n    if (routeClone.children) {\n      routeClone.children = enhanceManualRouteObjects(routeClone.children);\n    }\n\n    return routeClone;\n  });\n}\n\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes: enhanceManualRouteObjects(routes)\n  }).initialize();\n} ///////////////////////////////////////////////////////////////////////////////\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, DataStaticRouterContext as UNSAFE_DataStaticRouterContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, enhanceManualRouteObjects as UNSAFE_enhanceManualRouteObjects, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.4.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_enhanceManualRouteObjects, Router, useHref, useResolvedPath, useLocation, UNSAFE_DataRouterStateContext, useNavigate, createPath, UNSAFE_NavigationContext, UNSAFE_RouteContext, useMatches, useNavigation, UNSAFE_DataRouterContext } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_DataStaticRouterContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_enhanceManualRouteObjects, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { createRouter, createBrowserHistory, createHashHistory, invariant, joinPaths } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n\n  for (let key of defaultSearchParams.keys()) {\n    if (!searchParams.has(key)) {\n      defaultSearchParams.getAll(key).forEach(value => {\n        searchParams.append(key, value);\n      });\n    }\n  }\n\n  return searchParams;\n}\nfunction getFormSubmissionInfo(target, defaultAction, options) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger = options.submissionTrigger;\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n\n\n    method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"formaction\") || form.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(form); // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let {\n    protocol,\n    host\n  } = window.location;\n  let url = new URL(action, protocol + \"//\" + host);\n  return {\n    url,\n    method,\n    encType,\n    formData\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n      _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n      _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"fetcherKey\", \"routeId\", \"relative\"];\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nfunction createBrowserRouter(routes, opts) {\n  var _window;\n\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || ((_window = window) == null ? void 0 : _window.__staticRouterHydrationData),\n    routes: UNSAFE_enhanceManualRouteObjects(routes)\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  var _window2;\n\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || ((_window2 = window) == null ? void 0 : _window2.__staticRouterHydrationData),\n    routes: UNSAFE_enhanceManualRouteObjects(routes)\n  }).initialize();\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\nfunction BrowserRouter(_ref) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\nfunction HashRouter(_ref2) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref2;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\nfunction HistoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    history\n  } = _ref3;\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  let {\n    onClick,\n    relative,\n    reloadDocument,\n    replace,\n    state,\n    target,\n    to,\n    preventScrollReset\n  } = _ref4,\n      rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: href,\n      onClick: reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  let {\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    children\n  } = _ref5,\n      rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let toPathname = path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive,\n      isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n\n  let style = typeof styleProp === \"function\" ? styleProp({\n    isActive,\n    isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive,\n    isPending\n  }) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    ref: ref\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref6, forwardedRef) => {\n  let {\n    reloadDocument,\n    replace,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    fetcherKey,\n    routeId,\n    relative\n  } = _ref6,\n      props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    submit(submitter || event.currentTarget, {\n      method,\n      replace,\n      relative\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref7) {\n  let {\n    getKey,\n    storageKey\n  } = _ref7;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmitImpl\"] = \"useSubmitImpl\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let location = useLocation();\n  let searchParams = React.useMemo(() => getSearchParamsForLocation(location.search, defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\nfunction useSubmit() {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey, routeId) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let defaultAction = useFormAction();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n\n    let {\n      method,\n      encType,\n      formData,\n      url\n    } = getFormSubmissionInfo(target, defaultAction, options);\n    let href = url.pathname + url.search;\n    let opts = {\n      replace: options.replace,\n      formData,\n      formMethod: method,\n      formEncType: encType\n    };\n\n    if (fetcherKey) {\n      !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for useFetcher()\") : invariant(false) : void 0;\n      router.fetch(fetcherKey, routeId, href, opts);\n    } else {\n      router.navigate(href, opts);\n    }\n  }, [defaultAction, router, fetcherKey, routeId]);\n}\n\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFormAction must be used inside a RouteContext\") : invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  let resolvedAction = action != null ? action : \".\"; // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n\n  let path = _extends({}, useResolvedPath(resolvedAction, {\n    relative\n  })); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n\n  let location = useLocation();\n\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  } // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n\n\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      fetcherKey: fetcherKey,\n      routeId: routeId\n    }));\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\nfunction useFetcher() {\n  var _route$matches;\n\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher must be used inside a RouteContext\") : invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.Form()\") : invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No router available for fetcher.load()\") : invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.load()\") : invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No fetcher available to clean up from useFetcher()\");\n        return;\n      }\n\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation(); // Trigger manual scroll restoration while we're active\n\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on unload\n\n  useBeforeUnload(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  React.useLayoutEffect(() => {\n    try {\n      let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n      if (sessionPositions) {\n        savedScrollPositions = JSON.parse(sessionPositions);\n      }\n    } catch (e) {// no-op, use default empty object\n    }\n  }, [storageKey]); // Enable scroll restoration in the router\n\n  React.useLayoutEffect(() => {\n    let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKey);\n    return () => disableScrollRestoration && disableScrollRestoration();\n  }, [router, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n\n  React.useLayoutEffect(() => {\n    // Explicit false means don't do anything (used for submissions)\n    if (restoreScrollPosition === false) {\n      return;\n    } // been here before, scroll to it\n\n\n    if (typeof restoreScrollPosition === \"number\") {\n      window.scrollTo(0, restoreScrollPosition);\n      return;\n    } // try to scroll to the hash\n\n\n    if (location.hash) {\n      let el = document.getElementById(location.hash.slice(1));\n\n      if (el) {\n        el.scrollIntoView();\n        return;\n      }\n    } // Opt out of scroll reset if this link requested it\n\n\n    if (preventScrollReset === true) {\n      return;\n    } // otherwise go to the top on new locations\n\n\n    window.scrollTo(0, 0);\n  }, [location, restoreScrollPosition, preventScrollReset]);\n}\n\nfunction useBeforeUnload(callback) {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n} //#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n"],"names":["_extends","target","i","source","key","Action","PopStateEventType","createHashHistory","options","createHashLocation","window","globalHistory","pathname","search","hash","parsePath","createLocation","createHashHref","to","base","href","url","hashIndex","createPath","validateHashLocation","location","warning$1","getUrlBasedHistory","cond","message","createKey","getHistoryState","current","state","_ref","path","parsedPath","searchIndex","createURL","getLocation","createHref","validateLocation","v5Compat","action","listener","handlePop","history","push","historyState","replace","fn","n","ResultType","matchRoutes","routes","locationArg","basename","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","parentPath","route","index","meta","invariant","joinPaths","routesMeta","computeScore","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","segments","initialScore","score","segment","a","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","normalizePathname","pattern","matcher","paramNames","compilePath","pathnameBase","captureGroups","memo","paramName","splatValue","safelyDecodeURIComponent","caseSensitive","warning","regexpSource","_","value","error","startIndex","nextChar","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","relativePath","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","ErrorResponse","status","statusText","data","isRouteErrorResponse","e","validActionMethods","isPolyfill","x","y","is","useState","useEffect","useLayoutEffect","useDebugValue","React","useSyncExternalStore$2","subscribe","getSnapshot","getServerSnapshot","inst","forceUpdate","checkIfSnapshotChanged","latestGetSnapshot","prevValue","nextValue","useSyncExternalStore$1","canUseDOM","isServerEnvironment","shim","module","DataStaticRouterContext","React.createContext","DataRouterContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","RouteErrorContext","useHref","_temp","relative","useInRouterContext","navigator","React.useContext","useResolvedPath","joinedPathname","useLocation","useNavigate","routePathnamesJson","UNSAFE_getPathContributingMatches","activeRef","React.useRef","React.useEffect","React.useCallback","useParams","routeMatch","_temp2","React.useMemo","useRoutes","dataRouterStateContext","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","React.createElement","DefaultErrorElement","useRouteError","stack","lightgrey","preStyles","codeStyles","React.Fragment","RenderErrorBoundary","React.Component","props","errorInfo","RenderedRoute","routeContext","children","dataStaticRouterContext","dataRouterState","errors","errorIndex","m","outlet","errorElement","getChildren","DataRouterHook","DataRouterStateHook","useDataRouterState","hookName","_state$errors","thisRoute","Route","_props","Router","_ref4","basenameProp","locationProp","navigationType","staticProp","navigationContext","trailingPathname","Routes","_ref5","dataRouterContext","createRoutesFromChildren","AwaitRenderStatus","React.Children","element","React.isValidElement","treePath","_objectWithoutPropertiesLoose","excluded","sourceKeys","isModifiedEvent","event","shouldProcessLinkClick","_excluded","_excluded2","HashRouter","_ref2","historyRef","setState","React.useState","React.useLayoutEffect","Link","React.forwardRef","ref","onClick","reloadDocument","preventScrollReset","rest","internalOnClick","useLinkClickHandler","handleClick","NavLink","ariaCurrentProp","classNameProp","styleProp","routerState","UNSAFE_DataRouterStateContext","nextLocationPathname","isActive","isPending","ariaCurrent","className","style","replaceProp","navigate","f","t","r","o","u","require","l","_dereq_","exports","global","Mutation","scheduleDrain","called","observer","nextTick","channel","scriptEl","draining","queue","oldQueue","len","immediate","task","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","safelyResolveThenable","onRejected","onFulfilled","promise","unwrap","QueueItem","func","returnValue","self","result","tryCatch","getThen","thenable","obj","then","onError","onSuccess","tryToUnwrap","out","resolve","reject","reason","all","iterable","values","resolved","allResolver","resolveFromAll","outValue","race","response","_typeof","_classCallCheck","instance","Constructor","getIDB","idb","isIndexedDBValid","isSafari","hasFetch","createBlob","parts","properties","Builder","builder","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","toString","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","length","buf","arr","_checkBlobSupportWithoutCaching","txn","blob","matchedChrome","matchedEdge","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","_advanceReadiness","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","dbArgs","openreq","db","ex","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","base64","_decodeBlob","encodedBlob","arrayBuff","_isEncodedBlob","_fullyReady","_tryReconnect","forages","forage","createTransaction","mode","retries","tx","_initStorage","initPromises","ignoreErrors","j","k","getItem","transaction","store","req","iterate","iterator","iterationNumber","cursor","setItem","blobSupport","removeItem","clear","advanced","keys","dropInstance","currentConfig","isCurrentDb","dbPromise","newVersion","dropObjectPromise","_forage2","dropDBPromise","_forage","asyncStorage","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","bufferLength","p","encoded1","encoded2","encoded3","encoded4","buffer","bytes","bufferToString","base64String","serialize","valueType","marker","fileReader","str","deserialize","type","blobType","localforageSerializer","createDbTable","_initStorage$1","dbInfoPromise","tryExecuteSql","sqlStatement","args","results","getItem$1","iterate$1","rows","item","_setItem","retriesLeft","originalValue","sqlError","setItem$1","removeItem$1","clear$1","length$1","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","storeName","operations","webSQLStorage","isLocalStorageValid","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","DefaultConfig","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","LocalForage","driverTypeKey","driver","driverName","driverObject","complianceError","driverMethods","driverMethodName","isRequired","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","getDriverPromise","serializerPromise","drivers","supportedDrivers","setDriverToConfig","extendSelfWithDriver","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","libraryMethodsAndProperties","localforage_js"],"mappings":"4aAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAUA,SAASA,IAAW,CAClBA,OAAAA,GAAW,OAAO,OAAS,OAAO,OAAO,KAAI,EAAK,SAAUC,EAAQ,CAClE,QAASC,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CACzC,IAAIC,EAAS,UAAUD,GAEvB,QAASE,KAAOD,EACV,OAAO,UAAU,eAAe,KAAKA,EAAQC,CAAG,IAClDH,EAAOG,GAAOD,EAAOC,GAG1B,CAED,OAAOH,CACX,EACSD,GAAS,MAAM,KAAM,SAAS,CACvC,CASA,IAAIK,GAEH,SAAUA,EAAQ,CAQjBA,EAAO,IAAS,MAOhBA,EAAO,KAAU,OAMjBA,EAAO,QAAa,SACtB,GAAGA,IAAWA,EAAS,CAAE,EAAC,EAE1B,MAAMC,GAAoB,WAyJ1B,SAASC,GAAkBC,EAAS,CAC9BA,IAAY,SACdA,EAAU,CAAA,GAGZ,SAASC,EAAmBC,EAAQC,EAAe,CACjD,GAAI,CACF,SAAAC,EAAW,IACX,OAAAC,EAAS,GACT,KAAAC,EAAO,EACb,EAAQC,GAAUL,EAAO,SAAS,KAAK,OAAO,CAAC,CAAC,EAC5C,OAAOM,GAAe,GAAI,CACxB,SAAAJ,EACA,OAAAC,EACA,KAAAC,CACD,EACDH,EAAc,OAASA,EAAc,MAAM,KAAO,KAAMA,EAAc,OAASA,EAAc,MAAM,KAAO,SAAS,CACpH,CAED,SAASM,EAAeP,EAAQQ,EAAI,CAClC,IAAIC,EAAOT,EAAO,SAAS,cAAc,MAAM,EAC3CU,EAAO,GAEX,GAAID,GAAQA,EAAK,aAAa,MAAM,EAAG,CACrC,IAAIE,EAAMX,EAAO,SAAS,KACtBY,EAAYD,EAAI,QAAQ,GAAG,EAC/BD,EAAOE,IAAc,GAAKD,EAAMA,EAAI,MAAM,EAAGC,CAAS,CACvD,CAED,OAAOF,EAAO,KAAO,OAAOF,GAAO,SAAWA,EAAKK,GAAWL,CAAE,EACjE,CAED,SAASM,EAAqBC,EAAUP,EAAI,CAC1CQ,GAAUD,EAAS,SAAS,OAAO,CAAC,IAAM,IAAK,6DAA+D,KAAK,UAAUP,CAAE,EAAI,GAAG,CACvI,CAED,OAAOS,GAAmBlB,EAAoBQ,EAAgBO,EAAsBhB,CAAO,CAC7F,CAKA,SAASkB,GAAUE,EAAMC,EAAS,CAChC,GAAI,CAACD,EAAM,CAEL,OAAO,SAAY,aAAa,QAAQ,KAAKC,CAAO,EAExD,GAAI,CAMF,MAAM,IAAI,MAAMA,CAAO,CAC7B,MAAM,CAAY,CACf,CACH,CAEA,SAASC,IAAY,CACnB,OAAO,KAAK,OAAM,EAAG,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CAC/C,CAMA,SAASC,GAAgBN,EAAU,CACjC,MAAO,CACL,IAAKA,EAAS,MACd,IAAKA,EAAS,GAClB,CACA,CAMA,SAAST,GAAegB,EAASd,EAAIe,EAAO7B,EAAK,CAC/C,OAAI6B,IAAU,SACZA,EAAQ,MAGKjC,GAAS,CACtB,SAAU,OAAOgC,GAAY,SAAWA,EAAUA,EAAQ,SAC1D,OAAQ,GACR,KAAM,EACV,EAAK,OAAOd,GAAO,SAAWH,GAAUG,CAAE,EAAIA,EAAI,CAC9C,MAAAe,EAKA,IAAKf,GAAMA,EAAG,KAAOd,GAAO0B,GAAW,CAC3C,CAAG,CAGH,CAKA,SAASP,GAAWW,EAAM,CACxB,GAAI,CACF,SAAAtB,EAAW,IACX,OAAAC,EAAS,GACT,KAAAC,EAAO,EACR,EAAGoB,EACJ,OAAIrB,GAAUA,IAAW,MAAKD,GAAYC,EAAO,OAAO,CAAC,IAAM,IAAMA,EAAS,IAAMA,GAChFC,GAAQA,IAAS,MAAKF,GAAYE,EAAK,OAAO,CAAC,IAAM,IAAMA,EAAO,IAAMA,GACrEF,CACT,CAKA,SAASG,GAAUoB,EAAM,CACvB,IAAIC,EAAa,CAAA,EAEjB,GAAID,EAAM,CACR,IAAIb,EAAYa,EAAK,QAAQ,GAAG,EAE5Bb,GAAa,IACfc,EAAW,KAAOD,EAAK,OAAOb,CAAS,EACvCa,EAAOA,EAAK,OAAO,EAAGb,CAAS,GAGjC,IAAIe,EAAcF,EAAK,QAAQ,GAAG,EAE9BE,GAAe,IACjBD,EAAW,OAASD,EAAK,OAAOE,CAAW,EAC3CF,EAAOA,EAAK,OAAO,EAAGE,CAAW,GAG/BF,IACFC,EAAW,SAAWD,EAEzB,CAED,OAAOC,CACT,CACA,SAASE,GAAUb,EAAU,CAI3B,IAAIN,EAAO,OAAO,QAAW,aAAe,OAAO,OAAO,UAAa,aAAe,OAAO,SAAS,SAAW,OAAS,OAAO,SAAS,OAAS,oBAC/IC,EAAO,OAAOK,GAAa,SAAWA,EAAWF,GAAWE,CAAQ,EACxE,OAAO,IAAI,IAAIL,EAAMD,CAAI,CAC3B,CAEA,SAASQ,GAAmBY,EAAaC,EAAYC,EAAkBjC,EAAS,CAC1EA,IAAY,SACdA,EAAU,CAAA,GAGZ,GAAI,CACF,OAAAE,EAAS,SAAS,YAClB,SAAAgC,EAAW,EACZ,EAAGlC,EACAG,EAAgBD,EAAO,QACvBiC,EAAStC,EAAO,IAChBuC,EAAW,KAEf,SAASC,GAAY,CACnBF,EAAStC,EAAO,IAEZuC,GACFA,EAAS,CACP,OAAAD,EACA,SAAUG,EAAQ,QAC1B,CAAO,CAEJ,CAED,SAASC,EAAK7B,EAAIe,EAAO,CACvBU,EAAStC,EAAO,KAChB,IAAIoB,EAAWT,GAAe8B,EAAQ,SAAU5B,EAAIe,CAAK,EACrDQ,GAAkBA,EAAiBhB,EAAUP,CAAE,EACnD,IAAI8B,EAAejB,GAAgBN,CAAQ,EACvCJ,EAAMyB,EAAQ,WAAWrB,CAAQ,EAErC,GAAI,CACFd,EAAc,UAAUqC,EAAc,GAAI3B,CAAG,CAC9C,MAAC,CAGAX,EAAO,SAAS,OAAOW,CAAG,CAC3B,CAEGqB,GAAYE,GACdA,EAAS,CACP,OAAAD,EACA,SAAUG,EAAQ,QAC1B,CAAO,CAEJ,CAED,SAASG,EAAQ/B,EAAIe,EAAO,CAC1BU,EAAStC,EAAO,QAChB,IAAIoB,EAAWT,GAAe8B,EAAQ,SAAU5B,EAAIe,CAAK,EACrDQ,GAAkBA,EAAiBhB,EAAUP,CAAE,EACnD,IAAI8B,EAAejB,GAAgBN,CAAQ,EACvCJ,EAAMyB,EAAQ,WAAWrB,CAAQ,EACrCd,EAAc,aAAaqC,EAAc,GAAI3B,CAAG,EAE5CqB,GAAYE,GACdA,EAAS,CACP,OAAAD,EACA,SAAUG,EAAQ,QAC1B,CAAO,CAEJ,CAED,IAAIA,EAAU,CACZ,IAAI,QAAS,CACX,OAAOH,CACR,EAED,IAAI,UAAW,CACb,OAAOJ,EAAY7B,EAAQC,CAAa,CACzC,EAED,OAAOuC,EAAI,CACT,GAAIN,EACF,MAAM,IAAI,MAAM,4CAA4C,EAG9D,OAAAlC,EAAO,iBAAiBJ,GAAmBuC,CAAS,EACpDD,EAAWM,EACJ,IAAM,CACXxC,EAAO,oBAAoBJ,GAAmBuC,CAAS,EACvDD,EAAW,IACnB,CACK,EAED,WAAW1B,EAAI,CACb,OAAOsB,EAAW9B,EAAQQ,CAAE,CAC7B,EAED,eAAeO,EAAU,CAEvB,IAAIJ,EAAMiB,GAAUf,GAAWE,CAAQ,CAAC,EACxC,OAAOzB,GAAS,CAAE,EAAEyB,EAAU,CAC5B,SAAUJ,EAAI,SACd,OAAQA,EAAI,OACZ,KAAMA,EAAI,IAClB,CAAO,CACF,EAED,KAAA0B,EACA,QAAAE,EAEA,GAAGE,EAAG,CACJ,OAAOxC,EAAc,GAAGwC,CAAC,CAC1B,CAEL,EACE,OAAOL,CACT,CAEA,IAAIM,IAEH,SAAUA,EAAY,CACrBA,EAAW,KAAU,OACrBA,EAAW,SAAc,WACzBA,EAAW,SAAc,WACzBA,EAAW,MAAW,OACxB,GAAGA,KAAeA,GAAa,CAAE,EAAC,EA8ClC,SAASC,GAAYC,EAAQC,EAAaC,EAAU,CAC9CA,IAAa,SACfA,EAAW,KAGb,IAAI/B,EAAW,OAAO8B,GAAgB,SAAWxC,GAAUwC,CAAW,EAAIA,EACtE3C,EAAW6C,GAAchC,EAAS,UAAY,IAAK+B,CAAQ,EAE/D,GAAI5C,GAAY,KACd,OAAO,KAGT,IAAI8C,EAAWC,GAAcL,CAAM,EACnCM,GAAkBF,CAAQ,EAC1B,IAAIG,EAAU,KAEd,QAAS3D,EAAI,EAAG2D,GAAW,MAAQ3D,EAAIwD,EAAS,OAAQ,EAAExD,EACxD2D,EAAUC,GAAiBJ,EAASxD,GAMpC6D,GAAgBnD,CAAQ,CAAC,EAG3B,OAAOiD,CACT,CAEA,SAASF,GAAcL,EAAQI,EAAUM,EAAaC,EAAY,CAChE,OAAIP,IAAa,SACfA,EAAW,CAAA,GAGTM,IAAgB,SAClBA,EAAc,CAAA,GAGZC,IAAe,SACjBA,EAAa,IAGfX,EAAO,QAAQ,CAACY,EAAOC,IAAU,CAC/B,IAAIC,EAAO,CACT,aAAcF,EAAM,MAAQ,GAC5B,cAAeA,EAAM,gBAAkB,GACvC,cAAeC,EACf,MAAAD,CACN,EAEQE,EAAK,aAAa,WAAW,GAAG,IAClCC,EAAUD,EAAK,aAAa,WAAWH,CAAU,EAAG,wBAA2BG,EAAK,aAAe,wBAA2B,IAAOH,EAAa,iDAAoD,6DAA6D,EACnQG,EAAK,aAAeA,EAAK,aAAa,MAAMH,EAAW,MAAM,GAG/D,IAAI9B,EAAOmC,EAAU,CAACL,EAAYG,EAAK,YAAY,CAAC,EAChDG,EAAaP,EAAY,OAAOI,CAAI,EAIpCF,EAAM,UAAYA,EAAM,SAAS,OAAS,IAC5CG,EAEAH,EAAM,QAAU,GAAM,2DAA6D,qCAAwC/B,EAAO,KAAM,EACxIwB,GAAcO,EAAM,SAAUR,EAAUa,EAAYpC,CAAI,GAKtD,EAAA+B,EAAM,MAAQ,MAAQ,CAACA,EAAM,QAIjCR,EAAS,KAAK,CACZ,KAAAvB,EACA,MAAOqC,GAAarC,EAAM+B,EAAM,KAAK,EACrC,WAAAK,CACN,CAAK,CACL,CAAG,EACMb,CACT,CAEA,SAASE,GAAkBF,EAAU,CACnCA,EAAS,KAAK,CAAC,EAAGe,IAAM,EAAE,QAAUA,EAAE,MAAQA,EAAE,MAAQ,EAAE,MACxDC,GAAe,EAAE,WAAW,IAAIN,GAAQA,EAAK,aAAa,EAAGK,EAAE,WAAW,IAAIL,GAAQA,EAAK,aAAa,CAAC,CAAC,CAC9G,CAEA,MAAMO,GAAU,SACVC,GAAsB,EACtBC,GAAkB,EAClBC,GAAoB,EACpBC,GAAqB,GACrBC,GAAe,GAEfC,GAAUC,GAAKA,IAAM,IAE3B,SAASV,GAAarC,EAAMgC,EAAO,CACjC,IAAIgB,EAAWhD,EAAK,MAAM,GAAG,EACzBiD,EAAeD,EAAS,OAE5B,OAAIA,EAAS,KAAKF,EAAO,IACvBG,GAAgBJ,IAGdb,IACFiB,GAAgBP,IAGXM,EAAS,OAAOD,GAAK,CAACD,GAAQC,CAAC,CAAC,EAAE,OAAO,CAACG,EAAOC,IAAYD,GAASV,GAAQ,KAAKW,CAAO,EAAIV,GAAsBU,IAAY,GAAKR,GAAoBC,IAAqBK,CAAY,CACnM,CAEA,SAASV,GAAea,EAAGd,EAAG,CAE5B,OADec,EAAE,SAAWd,EAAE,QAAUc,EAAE,MAAM,EAAG,EAAE,EAAE,MAAM,CAACpC,EAAGjD,IAAMiD,IAAMsB,EAAEvE,EAAE,EAKjFqF,EAAEA,EAAE,OAAS,GAAKd,EAAEA,EAAE,OAAS,GAE/B,CACF,CAEA,SAASX,GAAiB0B,EAAQ5E,EAAU,CAC1C,GAAI,CACF,WAAA2D,CACD,EAAGiB,EACAC,EAAgB,CAAA,EAChBC,EAAkB,IAClB7B,EAAU,CAAA,EAEd,QAAS3D,EAAI,EAAGA,EAAIqE,EAAW,OAAQ,EAAErE,EAAG,CAC1C,IAAIkE,EAAOG,EAAWrE,GAClByF,EAAMzF,IAAMqE,EAAW,OAAS,EAChCqB,EAAoBF,IAAoB,IAAM9E,EAAWA,EAAS,MAAM8E,EAAgB,MAAM,GAAK,IACnGG,EAAQC,GAAU,CACpB,KAAM1B,EAAK,aACX,cAAeA,EAAK,cACpB,IAAAuB,CACD,EAAEC,CAAiB,EACpB,GAAI,CAACC,EAAO,OAAO,KACnB,OAAO,OAAOJ,EAAeI,EAAM,MAAM,EACzC,IAAI3B,EAAQE,EAAK,MACjBP,EAAQ,KAAK,CAEX,OAAQ4B,EACR,SAAUnB,EAAU,CAACoB,EAAiBG,EAAM,QAAQ,CAAC,EACrD,aAAcE,GAAkBzB,EAAU,CAACoB,EAAiBG,EAAM,YAAY,CAAC,CAAC,EAChF,MAAA3B,CACN,CAAK,EAEG2B,EAAM,eAAiB,MACzBH,EAAkBpB,EAAU,CAACoB,EAAiBG,EAAM,YAAY,CAAC,EAEpE,CAED,OAAOhC,CACT,CAoCA,SAASiC,GAAUE,EAASpF,EAAU,CAChC,OAAOoF,GAAY,WACrBA,EAAU,CACR,KAAMA,EACN,cAAe,GACf,IAAK,EACX,GAGE,GAAI,CAACC,EAASC,CAAU,EAAIC,GAAYH,EAAQ,KAAMA,EAAQ,cAAeA,EAAQ,GAAG,EACpFH,EAAQjF,EAAS,MAAMqF,CAAO,EAClC,GAAI,CAACJ,EAAO,OAAO,KACnB,IAAIH,EAAkBG,EAAM,GACxBO,EAAeV,EAAgB,QAAQ,UAAW,IAAI,EACtDW,EAAgBR,EAAM,MAAM,CAAC,EAYjC,MAAO,CACL,OAZWK,EAAW,OAAO,CAACI,EAAMC,EAAWpC,IAAU,CAGzD,GAAIoC,IAAc,IAAK,CACrB,IAAIC,EAAaH,EAAclC,IAAU,GACzCiC,EAAeV,EAAgB,MAAM,EAAGA,EAAgB,OAASc,EAAW,MAAM,EAAE,QAAQ,UAAW,IAAI,CAC5G,CAED,OAAAF,EAAKC,GAAaE,GAAyBJ,EAAclC,IAAU,GAAIoC,CAAS,EACzED,CACR,EAAE,CAAE,CAAA,EAGH,SAAUZ,EACV,aAAAU,EACA,QAAAJ,CACJ,CACA,CAEA,SAASG,GAAYhE,EAAMuE,EAAef,EAAK,CACzCe,IAAkB,SACpBA,EAAgB,IAGdf,IAAQ,SACVA,EAAM,IAGRgB,GAAQxE,IAAS,KAAO,CAACA,EAAK,SAAS,GAAG,GAAKA,EAAK,SAAS,IAAI,EAAG,eAAkBA,EAAO,oCAAuC,IAAOA,EAAK,QAAQ,MAAO,IAAI,EAAI,qCAAwC,oEAAsE,oCAAuCA,EAAK,QAAQ,MAAO,IAAI,EAAI,KAAM,EAC9V,IAAI+D,EAAa,CAAA,EACbU,EAAe,IAAMzE,EAAK,QAAQ,UAAW,EAAE,EAClD,QAAQ,OAAQ,GAAG,EACnB,QAAQ,sBAAuB,MAAM,EACrC,QAAQ,UAAW,CAAC0E,EAAGN,KACtBL,EAAW,KAAKK,CAAS,EAClB,YACR,EAED,OAAIpE,EAAK,SAAS,GAAG,GACnB+D,EAAW,KAAK,GAAG,EACnBU,GAAgBzE,IAAS,KAAOA,IAAS,KAAO,QAC9C,qBACOwD,EAETiB,GAAgB,QACPzE,IAAS,IAAMA,IAAS,MAQjCyE,GAAgB,iBAIX,CADO,IAAI,OAAOA,EAAcF,EAAgB,OAAY,GAAG,EACrDR,CAAU,CAC7B,CAEA,SAASnC,GAAgB+C,EAAO,CAC9B,GAAI,CACF,OAAO,UAAUA,CAAK,CACvB,OAAQC,EAAP,CACA,OAAAJ,GAAQ,GAAO,iBAAoBG,EAAQ,2GAAmH,aAAeC,EAAQ,KAAK,EACnLD,CACR,CACH,CAEA,SAASL,GAAyBK,EAAOP,EAAW,CAClD,GAAI,CACF,OAAO,mBAAmBO,CAAK,CAChC,OAAQC,EAAP,CACA,OAAAJ,GAAQ,GAAO,gCAAmCJ,EAAY,iCAAoC,gBAAmBO,EAAQ,mDAAsD,mCAAqCC,EAAQ,KAAK,EAC9ND,CACR,CACH,CAMA,SAASrD,GAAc7C,EAAU4C,EAAU,CACzC,GAAIA,IAAa,IAAK,OAAO5C,EAE7B,GAAI,CAACA,EAAS,YAAa,EAAC,WAAW4C,EAAS,YAAW,CAAE,EAC3D,OAAO,KAKT,IAAIwD,EAAaxD,EAAS,SAAS,GAAG,EAAIA,EAAS,OAAS,EAAIA,EAAS,OACrEyD,EAAWrG,EAAS,OAAOoG,CAAU,EAEzC,OAAIC,GAAYA,IAAa,IAEpB,KAGFrG,EAAS,MAAMoG,CAAU,GAAK,GACvC,CACA,SAAS3C,EAAUyC,EAAOjF,EAAS,CACjC,GAAIiF,IAAU,IAASA,IAAU,MAAQ,OAAOA,GAAU,YACxD,MAAM,IAAI,MAAMjF,CAAO,CAE3B,CAKA,SAAS8E,GAAQ/E,EAAMC,EAAS,CAC9B,GAAI,CAACD,EAAM,CAEL,OAAO,SAAY,aAAa,QAAQ,KAAKC,CAAO,EAExD,GAAI,CAMF,MAAM,IAAI,MAAMA,CAAO,CAC7B,MAAM,CAAY,CACf,CACH,CAOA,SAASqF,GAAYhG,EAAIiG,EAAc,CACjCA,IAAiB,SACnBA,EAAe,KAGjB,GAAI,CACF,SAAUC,EACV,OAAAvG,EAAS,GACT,KAAAC,EAAO,EACX,EAAM,OAAOI,GAAO,SAAWH,GAAUG,CAAE,EAAIA,EAE7C,MAAO,CACL,SAFakG,EAAaA,EAAW,WAAW,GAAG,EAAIA,EAAaC,GAAgBD,EAAYD,CAAY,EAAIA,EAGhH,OAAQG,GAAgBzG,CAAM,EAC9B,KAAM0G,GAAczG,CAAI,CAC5B,CACA,CAEA,SAASuG,GAAgBG,EAAcL,EAAc,CACnD,IAAIhC,EAAWgC,EAAa,QAAQ,OAAQ,EAAE,EAAE,MAAM,GAAG,EAEzD,OADuBK,EAAa,MAAM,GAAG,EAC5B,QAAQlC,GAAW,CAC9BA,IAAY,KAEVH,EAAS,OAAS,GAAGA,EAAS,IAAG,EAC5BG,IAAY,KACrBH,EAAS,KAAKG,CAAO,CAE3B,CAAG,EACMH,EAAS,OAAS,EAAIA,EAAS,KAAK,GAAG,EAAI,GACpD,CAEA,SAASsC,GAAoBC,EAAMC,EAAOC,EAAMzF,EAAM,CACpD,MAAO,qBAAuBuF,EAAO,wCAA0C,OAASC,EAAQ,YAAc,KAAK,UAAUxF,CAAI,EAAI,uCAAyC,OAASyF,EAAO,4DAA8D,mEAC9P,CA0BA,SAASC,GAA2BhE,EAAS,CAC3C,OAAOA,EAAQ,OAAO,CAACgC,EAAO1B,IAAUA,IAAU,GAAK0B,EAAM,MAAM,MAAQA,EAAM,MAAM,KAAK,OAAS,CAAC,CACxG,CAKA,SAASiC,GAAUC,EAAOC,EAAgBC,EAAkBC,EAAgB,CACtEA,IAAmB,SACrBA,EAAiB,IAGnB,IAAIhH,EAEA,OAAO6G,GAAU,SACnB7G,EAAKH,GAAUgH,CAAK,GAEpB7G,EAAKlB,GAAS,GAAI+H,CAAK,EACvB1D,EAAU,CAACnD,EAAG,UAAY,CAACA,EAAG,SAAS,SAAS,GAAG,EAAGuG,GAAoB,IAAK,WAAY,SAAUvG,CAAE,CAAC,EACxGmD,EAAU,CAACnD,EAAG,UAAY,CAACA,EAAG,SAAS,SAAS,GAAG,EAAGuG,GAAoB,IAAK,WAAY,OAAQvG,CAAE,CAAC,EACtGmD,EAAU,CAACnD,EAAG,QAAU,CAACA,EAAG,OAAO,SAAS,GAAG,EAAGuG,GAAoB,IAAK,SAAU,OAAQvG,CAAE,CAAC,GAGlG,IAAIiH,EAAcJ,IAAU,IAAM7G,EAAG,WAAa,GAC9CkG,EAAae,EAAc,IAAMjH,EAAG,SACpCkH,EAUJ,GAAIF,GAAkBd,GAAc,KAClCgB,EAAOH,MACF,CACL,IAAII,EAAqBL,EAAe,OAAS,EAEjD,GAAIZ,EAAW,WAAW,IAAI,EAAG,CAC/B,IAAIkB,EAAalB,EAAW,MAAM,GAAG,EAIrC,KAAOkB,EAAW,KAAO,MACvBA,EAAW,MAAK,EAChBD,GAAsB,EAGxBnH,EAAG,SAAWoH,EAAW,KAAK,GAAG,CAClC,CAIDF,EAAOC,GAAsB,EAAIL,EAAeK,GAAsB,GACvE,CAED,IAAIlG,EAAO+E,GAAYhG,EAAIkH,CAAI,EAE3BG,EAA2BnB,GAAcA,IAAe,KAAOA,EAAW,SAAS,GAAG,EAEtFoB,GAA2BL,GAAef,IAAe,MAAQa,EAAiB,SAAS,GAAG,EAElG,MAAI,CAAC9F,EAAK,SAAS,SAAS,GAAG,IAAMoG,GAA4BC,KAC/DrG,EAAK,UAAY,KAGZA,CACT,CAaA,MAAMmC,EAAYmE,GAASA,EAAM,KAAK,GAAG,EAAE,QAAQ,SAAU,GAAG,EAK1D1C,GAAoBnF,GAAYA,EAAS,QAAQ,OAAQ,EAAE,EAAE,QAAQ,OAAQ,GAAG,EAKhF0G,GAAkBzG,GAAU,CAACA,GAAUA,IAAW,IAAM,GAAKA,EAAO,WAAW,GAAG,EAAIA,EAAS,IAAMA,EAKrG0G,GAAgBzG,GAAQ,CAACA,GAAQA,IAAS,IAAM,GAAKA,EAAK,WAAW,GAAG,EAAIA,EAAO,IAAMA,EAsM/F,MAAM4H,EAAc,CAClB,YAAYC,EAAQC,EAAYC,EAAM,CACpC,KAAK,OAASF,EACd,KAAK,WAAaC,GAAc,GAChC,KAAK,KAAOC,CACb,CAEH,CAMA,SAASC,GAAqBC,EAAG,CAC/B,OAAOA,aAAaL,EACtB,CA8lCA,MAAMM,GAAqB,IAAI,IAAI,CAAC,OAAQ,MAAO,QAAS,QAAQ,CAAC,EACjC,CAAgB,GAAGA,EAAkB,EChzEzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAcA,SAAShJ,IAAW,CAClBA,OAAAA,GAAW,OAAO,OAAS,OAAO,OAAO,KAAI,EAAK,SAAUC,EAAQ,CAClE,QAASC,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CACzC,IAAIC,EAAS,UAAUD,GAEvB,QAASE,KAAOD,EACV,OAAO,UAAU,eAAe,KAAKA,EAAQC,CAAG,IAClDH,EAAOG,GAAOD,EAAOC,GAG1B,CAED,OAAOH,CACX,EACSD,GAAS,MAAM,KAAM,SAAS,CACvC,CAaA,SAASiJ,GAAWC,EAAGC,EAAG,CACxB,OAAOD,IAAMC,IAAMD,IAAM,GAAK,EAAIA,IAAM,EAAIC,IAAMD,IAAMA,GAAKC,IAAMA,CAErE,CAEA,MAAMC,GAAK,OAAO,OAAO,IAAO,WAAa,OAAO,GAAKH,GAGnD,CACJ,SAAAI,GACA,UAAAC,GACA,gBAAAC,GACA,cAAAC,EACF,EAAIC,GAaJ,SAASC,GAAuBC,EAAWC,EAI3CC,EAAmB,CAcjB,MAAM/C,EAAQ8C,IA2BR,CAAC,CACL,KAAAE,CACJ,EAAKC,CAAW,EAAIV,GAAS,CACzB,KAAM,CACJ,MAAAvC,EACA,YAAA8C,CACD,CACL,CAAG,EAID,OAAAL,GAAgB,IAAM,CACpBO,EAAK,MAAQhD,EACbgD,EAAK,YAAcF,EAKfI,GAAuBF,CAAI,GAE7BC,EAAY,CACV,KAAAD,CACR,CAAO,CAGJ,EAAE,CAACH,EAAW7C,EAAO8C,CAAW,CAAC,EAClCN,GAAU,KAGJU,GAAuBF,CAAI,GAE7BC,EAAY,CACV,KAAAD,CACR,CAAO,EAmBIH,EAhBmB,IAAM,CAO1BK,GAAuBF,CAAI,GAE7BC,EAAY,CACV,KAAAD,CACV,CAAS,CAET,CAGsC,GACjC,CAACH,CAAS,CAAC,EACdH,GAAc1C,CAAK,EACZA,CACT,CAEA,SAASkD,GAAuBF,EAAM,CACpC,MAAMG,EAAoBH,EAAK,YACzBI,EAAYJ,EAAK,MAEvB,GAAI,CACF,MAAMK,EAAYF,IAClB,MAAO,CAACb,GAAGc,EAAWC,CAAS,CAChC,MAAC,CACA,MAAO,EACR,CACH,CAUA,SAASC,GAAuBT,EAAWC,EAAaC,EAAmB,CAKzE,OAAOD,EAAW,CACpB,CAOA,MAAMS,GAAe,OAAO,QAAW,aAAe,OAAO,OAAO,UAAa,aAAe,OAAO,OAAO,SAAS,eAAkB,YACnIC,GAAsB,CAACD,GACvBE,GAAOD,GAAsBF,GAAyBV,GAC/B,yBAA0BD,KAASe,GAAUA,EAAO,sBAAsBf,EAAK,EAG5G,MAAMgB,GAAuCC,EAAAA,QAAAA,cAAoB,IAAI,EAM/DC,GAAiCD,EAAAA,QAAAA,cAAoB,IAAI,EAMzDE,GAAsCF,EAAAA,QAAAA,cAAoB,IAAI,EAY9DG,GAAiCH,EAAAA,QAAAA,cAAoB,IAAI,EAMzDI,GAA+BJ,EAAAA,QAAAA,cAAoB,IAAI,EAMvDK,GAA4BL,EAAAA,QAAAA,cAAoB,CACpD,OAAQ,KACR,QAAS,CAAE,CACb,CAAC,EAMKM,GAAiCN,EAAAA,QAAAA,cAAoB,IAAI,EAa/D,SAASO,GAAQ/J,EAAIgK,EAAO,CAC1B,GAAI,CACF,SAAAC,CACD,EAAGD,IAAU,OAAS,CAAA,EAAKA,EAC3BE,GAAkB,GAEqD/G,EAAU,EAAK,EACvF,GAAI,CACF,SAAAb,EACA,UAAA6H,CACJ,EAAMC,EAAAA,QAAAA,WAAiBT,EAAiB,EAClC,CACF,KAAA/J,EACA,SAAAF,EACA,OAAAC,CACJ,EAAM0K,GAAgBrK,EAAI,CACtB,SAAAiK,CACJ,CAAG,EACGK,EAAiB5K,EAKrB,OAAI4C,IAAa,MACfgI,EAAiB5K,IAAa,IAAM4C,EAAWc,EAAU,CAACd,EAAU5C,CAAQ,CAAC,GAGxEyK,EAAU,WAAW,CAC1B,SAAUG,EACV,OAAA3K,EACA,KAAAC,CACJ,CAAG,CACH,CAOA,SAASsK,IAAqB,CAC5B,OAAOE,EAAgB,QAAA,WAACR,EAAe,GAAK,IAC9C,CAYA,SAASW,IAAc,CACrB,OAACL,GAAkB,GAEyD/G,EAAU,EAAK,EACpFiH,EAAgB,QAAA,WAACR,EAAe,EAAE,QAC3C,CAsCA,SAASY,IAAc,CACpBN,GAAkB,GAEyD/G,EAAU,EAAK,EAC3F,GAAI,CACF,SAAAb,EACA,UAAA6H,CACJ,EAAMC,EAAAA,QAAAA,WAAiBT,EAAiB,EAClC,CACF,QAAAhH,CACJ,EAAMyH,EAAAA,QAAAA,WAAiBP,EAAY,EAC7B,CACF,SAAU9C,CACX,EAAGwD,GAAW,EACXE,EAAqB,KAAK,UAAUC,GAAkC/H,CAAO,EAAE,IAAIgC,GAASA,EAAM,YAAY,CAAC,EAC/GgG,EAAYC,iBAAa,EAAK,EAClCC,OAAAA,EAAAA,QAAAA,UAAgB,IAAM,CACpBF,EAAU,QAAU,EACxB,CAAG,EACcG,EAAAA,QAAAA,YAAkB,SAAU9K,EAAIV,EAAS,CAMtD,GALIA,IAAY,SACdA,EAAU,CAAA,GAIR,CAACqL,EAAU,QAAS,OAExB,GAAI,OAAO3K,GAAO,SAAU,CAC1BmK,EAAU,GAAGnK,CAAE,EACf,MACD,CAED,IAAIiB,EAAO2F,GAAU5G,EAAI,KAAK,MAAMyK,CAAkB,EAAG1D,EAAkBzH,EAAQ,WAAa,MAAM,EAKlGgD,IAAa,MACfrB,EAAK,SAAWA,EAAK,WAAa,IAAMqB,EAAWc,EAAU,CAACd,EAAUrB,EAAK,QAAQ,CAAC,IAGrF3B,EAAQ,QAAU6K,EAAU,QAAUA,EAAU,MAAMlJ,EAAM3B,EAAQ,MAAOA,CAAO,CACtF,EAAE,CAACgD,EAAU6H,EAAWM,EAAoB1D,CAAgB,CAAC,CAEhE,CAoCA,SAASgE,IAAY,CACnB,GAAI,CACF,QAAApI,CACJ,EAAMyH,EAAAA,QAAAA,WAAiBP,EAAY,EAC7BmB,EAAarI,EAAQA,EAAQ,OAAS,GAC1C,OAAOqI,EAAaA,EAAW,OAAS,EAC1C,CAOA,SAASX,GAAgBrK,EAAIiL,EAAQ,CACnC,GAAI,CACF,SAAAhB,CACD,EAAGgB,IAAW,OAAS,CAAA,EAAKA,EACzB,CACF,QAAAtI,CACJ,EAAMyH,EAAAA,QAAAA,WAAiBP,EAAY,EAC7B,CACF,SAAU9C,CACX,EAAGwD,GAAW,EACXE,EAAqB,KAAK,UAAUC,GAAkC/H,CAAO,EAAE,IAAIgC,GAASA,EAAM,YAAY,CAAC,EACnH,OAAOuG,EAAAA,QAAAA,QAAc,IAAMtE,GAAU5G,EAAI,KAAK,MAAMyK,CAAkB,EAAG1D,EAAkBkD,IAAa,MAAM,EAAG,CAACjK,EAAIyK,EAAoB1D,EAAkBkD,CAAQ,CAAC,CACvK,CAUA,SAASkB,GAAU/I,EAAQC,EAAa,CACrC6H,GAAkB,GAEuD/G,EAAU,EAAK,EACzF,IAAIiI,EAAyBhB,qBAAiBV,EAAsB,EAChE,CACF,QAAS2B,CACb,EAAMjB,EAAAA,QAAAA,WAAiBP,EAAY,EAC7BmB,EAAaK,EAAcA,EAAc,OAAS,GAClDC,EAAeN,EAAaA,EAAW,OAAS,CAAA,EAC/BA,GAAaA,EAAW,SAC7C,IAAIO,EAAqBP,EAAaA,EAAW,aAAe,IAC9CA,GAAcA,EAAW,MA2B3C,IAAIQ,EAAsBjB,KACtBhK,EAEJ,GAAI8B,EAAa,CACf,IAAIoJ,EAEJ,IAAIC,EAAoB,OAAOrJ,GAAgB,SAAWxC,GAAUwC,CAAW,EAAIA,EACjFkJ,IAAuB,OAASE,EAAwBC,EAAkB,WAAa,KAAO,OAASD,EAAsB,WAAWF,CAAkB,IAA+apI,EAAU,EAAK,EAC1lB5C,EAAWmL,CACf,MACInL,EAAWiL,EAGb,IAAI9L,EAAWa,EAAS,UAAY,IAChCmE,EAAoB6G,IAAuB,IAAM7L,EAAWA,EAAS,MAAM6L,EAAmB,MAAM,GAAK,IACzG5I,EAAUR,GAAYC,EAAQ,CAChC,SAAUsC,CACd,CAAG,EAOGiH,EAAkBC,GAAejJ,GAAWA,EAAQ,IAAIgC,GAAS,OAAO,OAAO,CAAE,EAAEA,EAAO,CAC5F,OAAQ,OAAO,OAAO,CAAE,EAAE2G,EAAc3G,EAAM,MAAM,EACpD,SAAUvB,EAAU,CAACmI,EAAoB5G,EAAM,QAAQ,CAAC,EACxD,aAAcA,EAAM,eAAiB,IAAM4G,EAAqBnI,EAAU,CAACmI,EAAoB5G,EAAM,YAAY,CAAC,CACnH,CAAA,CAAC,EAAG0G,EAAeD,GAA0B,MAAS,EAKvD,OAAI/I,GAAesJ,EACGE,EAAmB,QAAA,cAACjC,GAAgB,SAAU,CAChE,MAAO,CACL,SAAU9K,GAAS,CACjB,SAAU,IACV,OAAQ,GACR,KAAM,GACN,MAAO,KACP,IAAK,SACN,EAAEyB,CAAQ,EACX,eAAgBpB,EAAO,GACxB,CACF,EAAEwM,CAAe,EAGbA,CACT,CAEA,SAASG,IAAsB,CAC7B,IAAIjG,EAAQkG,KACRpL,EAAUiH,GAAqB/B,CAAK,EAAIA,EAAM,OAAS,IAAMA,EAAM,WAAaA,aAAiB,MAAQA,EAAM,QAAU,KAAK,UAAUA,CAAK,EAC7ImG,EAAQnG,aAAiB,MAAQA,EAAM,MAAQ,KAC/CoG,EAAY,yBACZC,EAAY,CACd,QAAS,SACT,gBAAiBD,CACrB,EACME,EAAa,CACf,QAAS,UACT,gBAAiBF,CACrB,EACE,OAAoBJ,EAAmB,QAAA,cAACO,mBAAgB,KAAmBP,EAAmB,QAAA,cAAC,KAAM,KAAM,yBAAyB,EAAgBA,EAAmB,QAAA,cAAC,KAAM,CAC5K,MAAO,CACL,UAAW,QACZ,CACF,EAAElL,CAAO,EAAGqL,EAAqBH,EAAAA,QAAAA,cAAoB,MAAO,CAC3D,MAAOK,CACR,EAAEF,CAAK,EAAI,KAAmBH,EAAAA,QAAAA,cAAoB,IAAK,KAAM,mCAAyC,EAAgBA,EAAAA,QAAAA,cAAoB,IAAK,KAAM,kGAAgHA,EAAAA,QAAAA,cAAoB,OAAQ,CAChS,MAAOM,CACR,EAAE,cAAc,EAAG,gBAA8BN,EAAAA,QAAAA,cAAoB,OAAQ,CAC5E,MAAOM,CACX,EAAK,SAAS,CAAC,CAAC,CAChB,CAEA,MAAME,WAA4BC,EAAAA,QAAAA,SAAgB,CAChD,YAAYC,EAAO,CACjB,MAAMA,CAAK,EACX,KAAK,MAAQ,CACX,SAAUA,EAAM,SAChB,MAAOA,EAAM,KACnB,CACG,CAED,OAAO,yBAAyB1G,EAAO,CACrC,MAAO,CACL,MAAOA,CACb,CACG,CAED,OAAO,yBAAyB0G,EAAOxL,EAAO,CAS5C,OAAIA,EAAM,WAAawL,EAAM,SACpB,CACL,MAAOA,EAAM,MACb,SAAUA,EAAM,QACxB,EAOW,CACL,MAAOA,EAAM,OAASxL,EAAM,MAC5B,SAAUA,EAAM,QACtB,CACG,CAED,kBAAkB8E,EAAO2G,EAAW,CAClC,QAAQ,MAAM,wDAAyD3G,EAAO2G,CAAS,CACxF,CAED,QAAS,CACP,OAAO,KAAK,MAAM,MAAqBX,EAAAA,QAAAA,cAAoB/B,GAAkB,SAAU,CACrF,MAAO,KAAK,MAAM,MAClB,SAAU,KAAK,MAAM,SAC3B,CAAK,EAAI,KAAK,MAAM,QACjB,CAEH,CAEA,SAAS2C,GAAczL,EAAM,CAC3B,GAAI,CACF,aAAA0L,EACA,MAAA/H,EACA,SAAAgI,CACD,EAAG3L,EACA4L,EAA0BxC,qBAAiBb,EAAuB,EAGtE,OAAIqD,GAA2BjI,EAAM,MAAM,eACzCiI,EAAwB,2BAA6BjI,EAAM,MAAM,IAG/CkH,EAAmB,QAAA,cAAChC,GAAa,SAAU,CAC7D,MAAO6C,CACR,EAAEC,CAAQ,CACb,CAEA,SAASf,GAAejJ,EAAS0I,EAAewB,EAAiB,CAK/D,GAJIxB,IAAkB,SACpBA,EAAgB,CAAA,GAGd1I,GAAW,KACb,GAAIkK,GAAmB,MAAQA,EAAgB,OAG7ClK,EAAUkK,EAAgB,YAE1B,QAAO,KAIX,IAAIlB,EAAkBhJ,EAElBmK,EAASD,GAAmB,KAAO,OAASA,EAAgB,OAEhE,GAAIC,GAAU,KAAM,CAClB,IAAIC,EAAapB,EAAgB,UAAUqB,GAAKA,EAAE,MAAM,KAAOF,GAAU,KAAO,OAASA,EAAOE,EAAE,MAAM,IAAI,EAC1GD,GAAc,GAAqI5J,EAAU,EAAK,EACpKwI,EAAkBA,EAAgB,MAAM,EAAG,KAAK,IAAIA,EAAgB,OAAQoB,EAAa,CAAC,CAAC,CAC5F,CAED,OAAOpB,EAAgB,YAAY,CAACsB,EAAQtI,EAAO1B,IAAU,CAC3D,IAAI4C,EAAQlB,EAAM,MAAM,GAAKmI,GAAU,KAAO,OAASA,EAAOnI,EAAM,MAAM,IAAM,KAE5EuI,EAAeL,EAAkBlI,EAAM,MAAM,cAA6BkH,EAAAA,QAAAA,cAAoBC,GAAqB,IAAI,EAAI,KAE3HqB,EAAc,IAAmBtB,EAAmB,QAAA,cAACY,GAAe,CACtE,MAAO9H,EACP,aAAc,CACZ,OAAAsI,EACA,QAAS5B,EAAc,OAAOM,EAAgB,MAAM,EAAG1I,EAAQ,CAAC,CAAC,CAClE,CACF,EAAE4C,EAAQqH,EAAevI,EAAM,MAAM,UAAY,OAAYA,EAAM,MAAM,QAAUsI,CAAM,EAK1F,OAAOJ,IAAoBlI,EAAM,MAAM,cAAgB1B,IAAU,GAAkB4I,EAAmB,QAAA,cAACQ,GAAqB,CAC1H,SAAUQ,EAAgB,SAC1B,UAAWK,EACX,MAAOrH,EACP,SAAUsH,EAAa,CAC7B,CAAK,EAAIA,EAAW,CACjB,EAAE,IAAI,CACT,CACA,IAAIC,IAEH,SAAUA,EAAgB,CACzBA,EAAe,eAAoB,gBACrC,GAAGA,KAAmBA,GAAiB,CAAE,EAAC,EAE1C,IAAIC,IAEH,SAAUA,EAAqB,CAC9BA,EAAoB,cAAmB,gBACvCA,EAAoB,cAAmB,gBACvCA,EAAoB,cAAmB,gBACvCA,EAAoB,cAAmB,gBACvCA,EAAoB,mBAAwB,qBAC5CA,EAAoB,WAAgB,aACpCA,EAAoB,eAAoB,gBAC1C,GAAGA,KAAwBA,GAAsB,CAAE,EAAC,EAYpD,SAASC,GAAmBC,EAAU,CACpC,IAAIxM,EAAQqJ,qBAAiBV,EAAsB,EACnD,OAAC3I,GAAwGoC,EAAU,EAAK,EACjHpC,CACT,CAuFA,SAASgL,IAAgB,CACvB,IAAIyB,EAEJ,IAAI3H,EAAQuE,qBAAiBN,EAAiB,EAC1C/I,EAAQuM,GAAmBD,GAAoB,aAAa,EAC5DrK,EAAQoH,qBAAiBP,EAAY,EACrC4D,EAAYzK,EAAM,QAAQA,EAAM,QAAQ,OAAS,GAGrD,OAAI6C,IAIH7C,GAAuHG,EAAU,EAAK,EACtIsK,EAAU,MAAM,IAAyItK,EAAU,EAAK,GAEjKqK,EAAgBzM,EAAM,SAAW,KAAO,OAASyM,EAAcC,EAAU,MAAM,IACzF,CAmKA,SAASC,GAAMC,EAAQ,CACmLxK,EAAU,EAAK,CACzN,CAWA,SAASyK,GAAOC,EAAO,CACrB,GAAI,CACF,SAAUC,EAAe,IACzB,SAAAnB,EAAW,KACX,SAAUoB,EACV,eAAAC,EAAiB7O,EAAO,IACxB,UAAAgL,EACA,OAAQ8D,EAAa,EACtB,EAAGJ,EACF3D,GAAkB,GAA+K/G,EAAU,EAAK,EAGlN,IAAIb,EAAWwL,EAAa,QAAQ,OAAQ,GAAG,EAC3CI,EAAoBhD,EAAAA,QAAAA,QAAc,KAAO,CAC3C,SAAA5I,EACA,UAAA6H,EACA,OAAQ8D,CACT,GAAG,CAAC3L,EAAU6H,EAAW8D,CAAU,CAAC,EAEjC,OAAOF,GAAiB,WAC1BA,EAAelO,GAAUkO,CAAY,GAGvC,GAAI,CACF,SAAArO,EAAW,IACX,OAAAC,EAAS,GACT,KAAAC,EAAO,GACP,MAAAmB,EAAQ,KACR,IAAA7B,EAAM,SACP,EAAG6O,EACAxN,EAAW2K,EAAAA,QAAAA,QAAc,IAAM,CACjC,IAAIiD,EAAmB5L,GAAc7C,EAAU4C,CAAQ,EAEvD,OAAI6L,GAAoB,KACf,KAGF,CACL,SAAUA,EACV,OAAAxO,EACA,KAAAC,EACA,MAAAmB,EACA,IAAA7B,CACN,CACA,EAAK,CAACoD,EAAU5C,EAAUC,EAAQC,EAAMmB,EAAO7B,CAAG,CAAC,EAGjD,OAAIqB,GAAY,KACP,KAGWsL,EAAmB,QAAA,cAAClC,GAAkB,SAAU,CAClE,MAAOuE,CACX,EAAkBrC,EAAmB,QAAA,cAACjC,GAAgB,SAAU,CAC5D,SAAU+C,EACV,MAAO,CACL,SAAApM,EACA,eAAAyN,CACD,CACF,CAAA,CAAC,CACJ,CAQA,SAASI,GAAOC,EAAO,CACrB,GAAI,CACF,SAAA1B,EACA,SAAApM,CACD,EAAG8N,EACAC,EAAoBlE,qBAAiBX,EAAiB,EAItDrH,EAASkM,GAAqB,CAAC3B,EAAW2B,EAAkB,OAAO,OAASC,GAAyB5B,CAAQ,EACjH,OAAOxB,GAAU/I,EAAQ7B,CAAQ,CACnC,CAiBA,IAAIiO,IAEH,SAAUA,EAAmB,CAC5BA,EAAkBA,EAAkB,QAAa,GAAK,UACtDA,EAAkBA,EAAkB,QAAa,GAAK,UACtDA,EAAkBA,EAAkB,MAAW,GAAK,OACtD,GAAGA,KAAsBA,GAAoB,CAAE,EAAC,EAEpB,IAAI,QAAQ,IAAM,CAAA,CAAE,EAiIhD,SAASD,GAAyB5B,EAAU5J,EAAY,CAClDA,IAAe,SACjBA,EAAa,CAAA,GAGf,IAAIX,EAAS,CAAA,EACbqM,OAAAA,EAAAA,QAAAA,SAAe,QAAQ9B,EAAU,CAAC+B,EAASzL,IAAU,CACnD,GAAI,CAAe0L,EAAAA,QAAAA,eAAqBD,CAAO,EAG7C,OAGF,GAAIA,EAAQ,OAAStC,mBAAgB,CAEnChK,EAAO,KAAK,MAAMA,EAAQmM,GAAyBG,EAAQ,MAAM,SAAU3L,CAAU,CAAC,EACtF,MACD,CAEC2L,EAAQ,OAAShB,IAA4PvK,EAAU,EAAK,EAC5R,CAACuL,EAAQ,MAAM,OAAS,CAACA,EAAQ,MAAM,UAAmHvL,EAAU,EAAK,EAC3K,IAAIyL,EAAW,CAAC,GAAG7L,EAAYE,CAAK,EAChCD,EAAQ,CACV,GAAI0L,EAAQ,MAAM,IAAME,EAAS,KAAK,GAAG,EACzC,cAAeF,EAAQ,MAAM,cAC7B,QAASA,EAAQ,MAAM,QACvB,MAAOA,EAAQ,MAAM,MACrB,KAAMA,EAAQ,MAAM,KACpB,OAAQA,EAAQ,MAAM,OACtB,OAAQA,EAAQ,MAAM,OACtB,aAAcA,EAAQ,MAAM,aAC5B,iBAAkBA,EAAQ,MAAM,cAAgB,KAChD,iBAAkBA,EAAQ,MAAM,iBAChC,OAAQA,EAAQ,MAAM,MAC5B,EAEQA,EAAQ,MAAM,WAChB1L,EAAM,SAAWuL,GAAyBG,EAAQ,MAAM,SAAUE,CAAQ,GAG5ExM,EAAO,KAAKY,CAAK,CACrB,CAAG,EACMZ,CACT,CCxxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAeA,SAAStD,IAAW,CAClB,OAAAA,GAAW,OAAO,OAAS,OAAO,OAAO,KAAI,EAAK,SAAUC,EAAQ,CAClE,QAASC,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CACzC,IAAIC,EAAS,UAAUD,GAEvB,QAASE,KAAOD,EACV,OAAO,UAAU,eAAe,KAAKA,EAAQC,CAAG,IAClDH,EAAOG,GAAOD,EAAOC,GAG1B,CAED,OAAOH,CACX,EACSD,GAAS,MAAM,KAAM,SAAS,CACvC,CAEA,SAAS+P,GAA8B5P,EAAQ6P,EAAU,CACvD,GAAI7P,GAAU,KAAM,MAAO,GAC3B,IAAIF,EAAS,CAAA,EACTgQ,EAAa,OAAO,KAAK9P,CAAM,EAC/BC,EAAKF,EAET,IAAKA,EAAI,EAAGA,EAAI+P,EAAW,OAAQ/P,IACjCE,EAAM6P,EAAW/P,GACb,EAAA8P,EAAS,QAAQ5P,CAAG,GAAK,KAC7BH,EAAOG,GAAOD,EAAOC,IAGvB,OAAOH,CACT,CAiBA,SAASiQ,GAAgBC,EAAO,CAC9B,MAAO,CAAC,EAAEA,EAAM,SAAWA,EAAM,QAAUA,EAAM,SAAWA,EAAM,SACpE,CAEA,SAASC,GAAuBD,EAAOlQ,EAAQ,CAC7C,OAAOkQ,EAAM,SAAW,IACxB,CAAClQ,GAAUA,IAAW,UACtB,CAACiQ,GAAgBC,CAAK,CAExB,CAoHK,MAACE,GAAY,CAAC,UAAW,WAAY,iBAAkB,UAAW,QAAS,SAAU,KAAM,oBAAoB,EAC9GC,GAAa,CAAC,eAAgB,gBAAiB,YAAa,MAAO,QAAS,KAAM,UAAU,EAmElG,SAASC,GAAWC,EAAO,CACzB,GAAI,CACF,SAAAhN,EACA,SAAAqK,EACA,OAAAnN,CACD,EAAG8P,EACAC,EAAa3E,EAAAA,QAAAA,SAEb2E,EAAW,SAAW,OACxBA,EAAW,QAAUlQ,GAAkB,CACrC,OAAAG,EACA,SAAU,EAChB,CAAK,GAGH,IAAIoC,EAAU2N,EAAW,QACrB,CAACxO,EAAOyO,CAAQ,EAAIC,mBAAe,CACrC,OAAQ7N,EAAQ,OAChB,SAAUA,EAAQ,QACtB,CAAG,EACD8N,OAAAA,EAAqB,QAAA,gBAAC,IAAM9N,EAAQ,OAAO4N,CAAQ,EAAG,CAAC5N,CAAO,CAAC,EAC3CiK,EAAAA,QAAAA,cAAoB+B,GAAQ,CAC9C,SAAUtL,EACV,SAAUqK,EACV,SAAU5L,EAAM,SAChB,eAAgBA,EAAM,OACtB,UAAWa,CACf,CAAG,CACH,CAmCA,MAAM+N,GAAoBC,EAAAA,QAAAA,WAAiB,SAAqB/B,EAAOgC,EAAK,CAC1E,GAAI,CACF,QAAAC,EACA,SAAA7F,EACA,eAAA8F,EACA,QAAAhO,EACA,MAAAhB,EACA,OAAAhC,EACA,GAAAiB,EACA,mBAAAgQ,CACJ,EAAMnC,EACAoC,EAAOpB,GAA8BhB,EAAOsB,EAAS,EAErDjP,EAAO6J,GAAQ/J,EAAI,CACrB,SAAAiK,CACJ,CAAG,EACGiG,EAAkBC,GAAoBnQ,EAAI,CAC5C,QAAA+B,EACA,MAAAhB,EACA,OAAAhC,EACA,mBAAAiR,EACA,SAAA/F,CACJ,CAAG,EAED,SAASmG,EAAYnB,EAAO,CACtBa,GAASA,EAAQb,CAAK,EAErBA,EAAM,kBACTiB,EAAgBjB,CAAK,CAExB,CAED,OAGEpD,EAAAA,QAAAA,cAAoB,IAAK/M,GAAS,CAAA,EAAImR,EAAM,CAC1C,KAAM/P,EACN,QAAS6P,EAAiBD,EAAUM,EACpC,IAAKP,EACL,OAAQ9Q,CACd,CAAK,CAAC,CAEN,CAAC,EAUKsR,GAAuBT,EAAAA,QAAAA,WAAiB,SAAwBvB,EAAOwB,EAAK,CAChF,GAAI,CACF,eAAgBS,EAAkB,OAClC,cAAA9K,EAAgB,GAChB,UAAW+K,EAAgB,GAC3B,IAAA9L,EAAM,GACN,MAAO+L,EACP,GAAAxQ,EACA,SAAA2M,CACJ,EAAM0B,EACA4B,EAAOpB,GAA8BR,EAAOe,EAAU,EAEtDnO,EAAOoJ,GAAgBrK,EAAI,CAC7B,SAAUiQ,EAAK,QACnB,CAAG,EACG1P,EAAWgK,KACXkG,EAAcrG,qBAAiBsG,EAA6B,EAC5DxK,EAAajF,EAAK,SAClB8F,EAAmBxG,EAAS,SAC5BoQ,EAAuBF,GAAeA,EAAY,YAAcA,EAAY,WAAW,SAAWA,EAAY,WAAW,SAAS,SAAW,KAE5IjL,IACHuB,EAAmBA,EAAiB,cACpC4J,EAAuBA,EAAuBA,EAAqB,YAAW,EAAK,KACnFzK,EAAaA,EAAW,eAG1B,IAAI0K,EAAW7J,IAAqBb,GAAc,CAACzB,GAAOsC,EAAiB,WAAWb,CAAU,GAAKa,EAAiB,OAAOb,EAAW,MAAM,IAAM,IAChJ2K,EAAYF,GAAwB,OAASA,IAAyBzK,GAAc,CAACzB,GAAOkM,EAAqB,WAAWzK,CAAU,GAAKyK,EAAqB,OAAOzK,EAAW,MAAM,IAAM,KAC9L4K,GAAcF,EAAWN,EAAkB,OAC3CS,EAEA,OAAOR,GAAkB,WAC3BQ,EAAYR,EAAc,CACxB,SAAAK,EACA,UAAAC,CACN,CAAK,EAODE,EAAY,CAACR,EAAeK,EAAW,SAAW,KAAMC,EAAY,UAAY,IAAI,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG,EAGhH,IAAIG,EAAQ,OAAOR,GAAc,WAAaA,EAAU,CACtD,SAAAI,EACA,UAAAC,CACD,CAAA,EAAIL,EACL,OAAoB3E,EAAmB,QAAA,cAAC8D,GAAM7Q,GAAS,CAAA,EAAImR,EAAM,CAC/D,eAAgBa,GAChB,UAAWC,EACX,IAAKlB,EACL,MAAOmB,EACP,GAAIhR,CACL,CAAA,EAAG,OAAO2M,GAAa,WAAaA,EAAS,CAC5C,SAAAiE,EACA,UAAAC,CACJ,CAAG,EAAIlE,CAAQ,CACf,CAAC,EA2FD,IAAIS,IAEH,SAAUA,EAAgB,CACzBA,EAAe,qBAA0B,uBACzCA,EAAe,cAAmB,gBAClCA,EAAe,WAAgB,YACjC,GAAGA,KAAmBA,GAAiB,CAAE,EAAC,EAE1C,IAAIC,IAEH,SAAUA,EAAqB,CAC9BA,EAAoB,YAAiB,cACrCA,EAAoB,qBAA0B,sBAChD,GAAGA,KAAwBA,GAAsB,CAAE,EAAC,EAwBpD,SAAS8C,GAAoBnQ,EAAIgK,EAAO,CACtC,GAAI,CACF,OAAAjL,EACA,QAASkS,EACT,MAAAlQ,EACA,mBAAAiP,EACA,SAAA/F,CACD,EAAGD,IAAU,OAAS,CAAA,EAAKA,EACxBkH,EAAW1G,KACXjK,EAAWgK,KACXtJ,EAAOoJ,GAAgBrK,EAAI,CAC7B,SAAAiK,CACJ,CAAG,EACD,OAAOa,EAAAA,QAAAA,YAAkBmE,GAAS,CAChC,GAAIC,GAAuBD,EAAOlQ,CAAM,EAAG,CACzCkQ,EAAM,eAAc,EAGpB,IAAIlN,EAAUkP,IAAgB,OAAYA,EAAc5Q,GAAWE,CAAQ,IAAMF,GAAWY,CAAI,EAChGiQ,EAASlR,EAAI,CACX,QAAA+B,EACA,MAAAhB,EACA,mBAAAiP,EACA,SAAA/F,CACR,CAAO,CACF,CACF,EAAE,CAAC1J,EAAU2Q,EAAUjQ,EAAMgQ,EAAalQ,EAAOhC,EAAQiB,EAAIgQ,EAAoB/F,CAAQ,CAAC,CAC7F;;;;;kBCnkBC,SAASkH,EAAE,CAA4D7H,EAAA,QAAe6H,EAAC,CAA4O,GAAG,UAAU,CAA2B,OAAQ,SAAStJ,EAAEuJ,EAAEnP,EAAEoP,EAAE,CAAC,SAASrN,EAAEsN,EAAEC,EAAE,CAAC,GAAG,CAACtP,EAAEqP,GAAG,CAAC,GAAG,CAACF,EAAEE,GAAG,CAAC,IAAIjN,EAAE,OAAOmN,IAAS,YAAYA,GAAQ,GAAG,CAACD,GAAGlN,EAAE,OAAOA,EAAEiN,EAAE,EAAE,EAAE,GAAGtS,EAAE,OAAOA,EAAEsS,EAAE,EAAE,EAAE,IAAIH,EAAE,IAAI,MAAM,uBAAuBG,EAAE,GAAG,EAAE,MAAOH,EAAE,KAAK,mBAAoBA,CAAE,CAAC,IAAIM,EAAExP,EAAEqP,GAAG,CAAC,QAAQ,CAAA,CAAE,EAAEF,EAAEE,GAAG,GAAG,KAAKG,EAAE,QAAQ,SAAS5J,EAAE,CAAC,IAAI5F,EAAEmP,EAAEE,GAAG,GAAGzJ,GAAG,OAAO7D,EAAE/B,GAAI4F,CAAC,CAAC,EAAE4J,EAAEA,EAAE,QAAQ5J,EAAEuJ,EAAEnP,EAAEoP,CAAC,CAAC,CAAC,OAAOpP,EAAEqP,GAAG,OAAO,CAA2C,QAAtCtS,EAAE,OAAOwS,IAAS,YAAYA,GAAgBF,EAAE,EAAEA,EAAED,EAAE,OAAOC,IAAItN,EAAEqN,EAAEC,EAAE,EAAE,OAAOtN,CAAC,EAAG,CAAC,EAAE,CAAC,SAAS0N,EAAQpI,EAAOqI,EAAQ,EACp1B,SAAUC,EAAO,CAElB,IAAIC,EAAWD,EAAO,kBAAoBA,EAAO,uBAE7CE,EAGF,GAAID,EAAU,CACZ,IAAIE,EAAS,EACTC,EAAW,IAAIH,EAASI,CAAQ,EAChCvD,EAAUkD,EAAO,SAAS,eAAe,EAAE,EAC/CI,EAAS,QAAQtD,EAAS,CACxB,cAAe,EACrB,CAAK,EACDoD,EAAgB,UAAY,CAC1BpD,EAAQ,KAAQqD,EAAS,EAAEA,EAAS,CAC1C,CACA,SAAa,CAACH,EAAO,cAAgB,OAAOA,EAAO,gBAAmB,YAAa,CAC/E,IAAIM,EAAU,IAAIN,EAAO,eACzBM,EAAQ,MAAM,UAAYD,EAC1BH,EAAgB,UAAY,CAC1BI,EAAQ,MAAM,YAAY,CAAC,CACjC,CACA,KAAa,aAAcN,GAAU,uBAAwBA,EAAO,SAAS,cAAc,QAAQ,EAC/FE,EAAgB,UAAY,CAI1B,IAAIK,EAAWP,EAAO,SAAS,cAAc,QAAQ,EACrDO,EAAS,mBAAqB,UAAY,CACxCF,IAEAE,EAAS,mBAAqB,KAC9BA,EAAS,WAAW,YAAYA,CAAQ,EACxCA,EAAW,IACnB,EACMP,EAAO,SAAS,gBAAgB,YAAYO,CAAQ,CAC1D,EAEIL,EAAgB,UAAY,CAC1B,WAAWG,EAAU,CAAC,CAC5B,EAIA,IAAIG,EACAC,EAAQ,CAAA,EAEZ,SAASJ,GAAW,CAClBG,EAAW,GAGX,QAFIpT,EAAGsT,EACHC,EAAMF,EAAM,OACTE,GAAK,CAIV,IAHAD,EAAWD,EACXA,EAAQ,CAAA,EACRrT,EAAI,GACG,EAAEA,EAAIuT,GACXD,EAAStT,KAEXuT,EAAMF,EAAM,MACb,CACDD,EAAW,EACb,CAEA9I,EAAO,QAAUkJ,EACjB,SAASA,EAAUC,EAAM,CACnBJ,EAAM,KAAKI,CAAI,IAAM,GAAK,CAACL,GAC7BN,GAEJ,CAEA,GAAG,KAAK,KAAK,OAAOF,IAAW,YAAcA,GAAS,OAAO,MAAS,YAAc,KAAO,OAAO,QAAW,YAAc,OAAS,CAAA,CAAE,CACtI,EAAE,CAAA,CAAE,EAAE,EAAE,CAAC,SAASF,EAAQpI,EAAOqI,EAAQ,CAEzC,IAAIa,EAAYd,EAAQ,CAAC,EAGzB,SAASgB,GAAW,CAAE,CAEtB,IAAIC,EAAW,CAAA,EAEXC,EAAW,CAAC,UAAU,EACtBC,EAAY,CAAC,WAAW,EACxBC,EAAU,CAAC,SAAS,EAExBxJ,EAAO,QAAUyJ,EAEjB,SAASA,EAAQC,EAAU,CACzB,GAAI,OAAOA,GAAa,WACtB,MAAM,IAAI,UAAU,6BAA6B,EAEnD,KAAK,MAAQF,EACb,KAAK,MAAQ,GACb,KAAK,QAAU,OACXE,IAAaN,GACfO,EAAsB,KAAMD,CAAQ,CAExC,CAEAD,EAAQ,UAAU,MAAW,SAAUG,EAAY,CACjD,OAAO,KAAK,KAAK,KAAMA,CAAU,CACnC,EACAH,EAAQ,UAAU,KAAO,SAAUI,EAAaD,EAAY,CAC1D,GAAI,OAAOC,GAAgB,YAAc,KAAK,QAAUN,GACtD,OAAOK,GAAe,YAAc,KAAK,QAAUN,EACnD,OAAO,KAET,IAAIQ,EAAU,IAAI,KAAK,YAAYV,CAAQ,EAC3C,GAAI,KAAK,QAAUI,EAAS,CAC1B,IAAIE,EAAW,KAAK,QAAUH,EAAYM,EAAcD,EACxDG,EAAOD,EAASJ,EAAU,KAAK,OAAO,CAC1C,MACI,KAAK,MAAM,KAAK,IAAIM,EAAUF,EAASD,EAAaD,CAAU,CAAC,EAGjE,OAAOE,CACT,EACA,SAASE,EAAUF,EAASD,EAAaD,EAAY,CACnD,KAAK,QAAUE,EACX,OAAOD,GAAgB,aACzB,KAAK,YAAcA,EACnB,KAAK,cAAgB,KAAK,oBAExB,OAAOD,GAAe,aACxB,KAAK,WAAaA,EAClB,KAAK,aAAe,KAAK,kBAE7B,CACAI,EAAU,UAAU,cAAgB,SAAU1N,EAAO,CACnD+M,EAAS,QAAQ,KAAK,QAAS/M,CAAK,CACtC,EACA0N,EAAU,UAAU,mBAAqB,SAAU1N,EAAO,CACxDyN,EAAO,KAAK,QAAS,KAAK,YAAazN,CAAK,CAC9C,EACA0N,EAAU,UAAU,aAAe,SAAU1N,EAAO,CAClD+M,EAAS,OAAO,KAAK,QAAS/M,CAAK,CACrC,EACA0N,EAAU,UAAU,kBAAoB,SAAU1N,EAAO,CACvDyN,EAAO,KAAK,QAAS,KAAK,WAAYzN,CAAK,CAC7C,EAEA,SAASyN,EAAOD,EAASG,EAAM3N,EAAO,CACpC4M,EAAU,UAAY,CACpB,IAAIgB,EACJ,GAAI,CACFA,EAAcD,EAAK3N,CAAK,CACzB,OAAQiC,EAAP,CACA,OAAO8K,EAAS,OAAOS,EAASvL,CAAC,CAClC,CACG2L,IAAgBJ,EAClBT,EAAS,OAAOS,EAAS,IAAI,UAAU,oCAAoC,CAAC,EAE5ET,EAAS,QAAQS,EAASI,CAAW,CAE3C,CAAG,CACH,CAEAb,EAAS,QAAU,SAAUc,EAAM7N,EAAO,CACxC,IAAI8N,EAASC,EAASC,EAAShO,CAAK,EACpC,GAAI8N,EAAO,SAAW,QACpB,OAAOf,EAAS,OAAOc,EAAMC,EAAO,KAAK,EAE3C,IAAIG,EAAWH,EAAO,MAEtB,GAAIG,EACFZ,EAAsBQ,EAAMI,CAAQ,MAC/B,CACLJ,EAAK,MAAQZ,EACbY,EAAK,QAAU7N,EAGf,QAFI5G,EAAI,GACJuT,EAAMkB,EAAK,MAAM,OACd,EAAEzU,EAAIuT,GACXkB,EAAK,MAAMzU,GAAG,cAAc4G,CAAK,CAEpC,CACD,OAAO6N,CACT,EACAd,EAAS,OAAS,SAAUc,EAAM5N,EAAO,CACvC4N,EAAK,MAAQb,EACba,EAAK,QAAU5N,EAGf,QAFI7G,EAAI,GACJuT,EAAMkB,EAAK,MAAM,OACd,EAAEzU,EAAIuT,GACXkB,EAAK,MAAMzU,GAAG,aAAa6G,CAAK,EAElC,OAAO4N,CACT,EAEA,SAASG,EAAQE,EAAK,CAEpB,IAAIC,EAAOD,GAAOA,EAAI,KACtB,GAAIA,IAAQ,OAAOA,GAAQ,UAAY,OAAOA,GAAQ,aAAe,OAAOC,GAAS,WACnF,OAAO,UAAoB,CACzBA,EAAK,MAAMD,EAAK,SAAS,CAC/B,CAEA,CAEA,SAASb,EAAsBQ,EAAMI,EAAU,CAE7C,IAAI9B,EAAS,GACb,SAASiC,EAAQpO,EAAO,CAClBmM,IAGJA,EAAS,GACTY,EAAS,OAAOc,EAAM7N,CAAK,EAC5B,CAED,SAASqO,EAAUrO,EAAO,CACpBmM,IAGJA,EAAS,GACTY,EAAS,QAAQc,EAAM7N,CAAK,EAC7B,CAED,SAASsO,GAAc,CACrBL,EAASI,EAAWD,CAAO,CAC5B,CAED,IAAIN,EAASC,EAASO,CAAW,EAC7BR,EAAO,SAAW,SACpBM,EAAQN,EAAO,KAAK,CAExB,CAEA,SAASC,EAASJ,EAAM3N,EAAO,CAC7B,IAAIuO,EAAM,CAAA,EACV,GAAI,CACFA,EAAI,MAAQZ,EAAK3N,CAAK,EACtBuO,EAAI,OAAS,SACd,OAAQtM,EAAP,CACAsM,EAAI,OAAS,QACbA,EAAI,MAAQtM,CACb,CACD,OAAOsM,CACT,CAEApB,EAAQ,QAAUqB,EAClB,SAASA,EAAQxO,EAAO,CACtB,OAAIA,aAAiB,KACZA,EAEF+M,EAAS,QAAQ,IAAI,KAAKD,CAAQ,EAAG9M,CAAK,CACnD,CAEAmN,EAAQ,OAASsB,EACjB,SAASA,EAAOC,EAAQ,CACtB,IAAIlB,EAAU,IAAI,KAAKV,CAAQ,EAC/B,OAAOC,EAAS,OAAOS,EAASkB,CAAM,CACxC,CAEAvB,EAAQ,IAAMwB,GACd,SAASA,GAAIC,EAAU,CACrB,IAAIf,EAAO,KACX,GAAI,OAAO,UAAU,SAAS,KAAKe,CAAQ,IAAM,iBAC/C,OAAO,KAAK,OAAO,IAAI,UAAU,kBAAkB,CAAC,EAGtD,IAAIjC,EAAMiC,EAAS,OACfzC,EAAS,GACb,GAAI,CAACQ,EACH,OAAO,KAAK,QAAQ,CAAA,CAAE,EAQxB,QALIkC,EAAS,IAAI,MAAMlC,CAAG,EACtBmC,EAAW,EACX1V,EAAI,GACJoU,EAAU,IAAI,KAAKV,CAAQ,EAExB,EAAE1T,EAAIuT,GACXoC,EAAYH,EAASxV,GAAIA,CAAC,EAE5B,OAAOoU,EACP,SAASuB,EAAY/O,GAAO5G,GAAG,CAC7ByU,EAAK,QAAQ7N,EAAK,EAAE,KAAKgP,GAAgB,SAAU/O,GAAO,CACnDkM,IACHA,EAAS,GACTY,EAAS,OAAOS,EAASvN,EAAK,EAEtC,CAAK,EACD,SAAS+O,GAAeC,GAAU,CAChCJ,EAAOzV,IAAK6V,GACR,EAAEH,IAAanC,GAAO,CAACR,IACzBA,EAAS,GACTY,EAAS,QAAQS,EAASqB,CAAM,EAEnC,CACF,CACH,CAEA1B,EAAQ,KAAO+B,EACf,SAASA,EAAKN,EAAU,CACtB,IAAIf,EAAO,KACX,GAAI,OAAO,UAAU,SAAS,KAAKe,CAAQ,IAAM,iBAC/C,OAAO,KAAK,OAAO,IAAI,UAAU,kBAAkB,CAAC,EAGtD,IAAIjC,EAAMiC,EAAS,OACfzC,EAAS,GACb,GAAI,CAACQ,EACH,OAAO,KAAK,QAAQ,CAAA,CAAE,EAMxB,QAHIvT,EAAI,GACJoU,EAAU,IAAI,KAAKV,CAAQ,EAExB,EAAE1T,EAAIuT,GACXS,EAASwB,EAASxV,EAAE,EAEtB,OAAOoU,EACP,SAASJ,EAASpN,EAAO,CACvB6N,EAAK,QAAQ7N,CAAK,EAAE,KAAK,SAAUmP,EAAU,CACtChD,IACHA,EAAS,GACTY,EAAS,QAAQS,EAAS2B,CAAQ,EAErC,EAAE,SAAUlP,EAAO,CACbkM,IACHA,EAAS,GACTY,EAAS,OAAOS,EAASvN,CAAK,EAEtC,CAAK,CACF,CACH,CAEA,EAAE,CAAC,EAAI,CAAC,CAAC,EAAE,EAAE,CAAC,SAAS6L,EAAQpI,EAAOqI,EAAQ,EAC7C,SAAUC,EAAO,CAEd,OAAOA,EAAO,SAAY,aAC5BA,EAAO,QAAUF,EAAQ,CAAC,EAG5B,GAAG,KAAK,KAAK,OAAOE,IAAW,YAAcA,GAAS,OAAO,MAAS,YAAc,KAAO,OAAO,QAAW,YAAc,OAAS,CAAA,CAAE,CACtI,EAAE,CAAC,EAAI,CAAC,CAAC,EAAE,EAAE,CAAC,SAASF,EAAQpI,EAAOqI,EAAQ,CAG9C,IAAIqD,EAAU,OAAO,QAAW,YAAc,OAAO,OAAO,UAAa,SAAW,SAAUlB,EAAK,CAAE,OAAO,OAAOA,CAAI,EAAK,SAAUA,EAAK,CAAE,OAAOA,GAAO,OAAO,QAAW,YAAcA,EAAI,cAAgB,QAAUA,IAAQ,OAAO,UAAY,SAAW,OAAOA,CAAI,EAE1Q,SAASmB,EAAgBC,EAAUC,EAAa,CAAE,GAAI,EAAED,aAAoBC,GAAgB,MAAM,IAAI,UAAU,mCAAmC,CAAM,CAEzJ,SAASC,GAAS,CAEd,GAAI,CACA,GAAI,OAAO,WAAc,YACrB,OAAO,UAEX,GAAI,OAAO,iBAAoB,YAC3B,OAAO,gBAEX,GAAI,OAAO,cAAiB,YACxB,OAAO,aAEX,GAAI,OAAO,YAAe,YACtB,OAAO,WAEX,GAAI,OAAO,aAAgB,YACvB,OAAO,WAEd,MAAC,CACE,MACH,CACL,CAEA,IAAIC,EAAMD,EAAM,EAEhB,SAASE,GAAmB,CACxB,GAAI,CAGA,GAAI,CAACD,GAAO,CAACA,EAAI,KACb,MAAO,GAMX,IAAIE,EAAW,OAAO,cAAiB,aAAe,4BAA4B,KAAK,UAAU,SAAS,GAAK,CAAC,SAAS,KAAK,UAAU,SAAS,GAAK,CAAC,aAAa,KAAK,UAAU,QAAQ,EAEvLC,EAAW,OAAO,OAAU,YAAc,MAAM,SAAU,EAAC,QAAQ,cAAc,IAAM,GAQ3F,OAAQ,CAACD,GAAYC,IAAa,OAAO,WAAc,aAKvD,OAAO,aAAgB,WAC1B,MAAC,CACE,MAAO,EACV,CACL,CAQA,SAASC,EAAWC,EAAOC,EAAY,CAEnCD,EAAQA,GAAS,GACjBC,EAAaA,GAAc,GAC3B,GAAI,CACA,OAAO,IAAI,KAAKD,EAAOC,CAAU,CACpC,OAAQ9N,EAAP,CACE,GAAIA,EAAE,OAAS,YACX,MAAMA,EAIV,QAFI+N,EAAU,OAAO,aAAgB,YAAc,YAAc,OAAO,eAAkB,YAAc,cAAgB,OAAO,gBAAmB,YAAc,eAAiB,kBAC7KC,EAAU,IAAID,EACT5W,EAAI,EAAGA,EAAI0W,EAAM,OAAQ1W,GAAK,EACnC6W,EAAQ,OAAOH,EAAM1W,EAAE,EAE3B,OAAO6W,EAAQ,QAAQF,EAAW,IAAI,CACzC,CACL,CAII,OAAO,SAAY,aAGnBjE,EAAQ,CAAC,EAEb,IAAIoE,EAAY,QAEhB,SAASC,EAAgB3C,EAAS4C,EAAU,CACpCA,GACA5C,EAAQ,KAAK,SAAUM,EAAQ,CAC3BsC,EAAS,KAAMtC,CAAM,CACxB,EAAE,SAAU7N,EAAO,CAChBmQ,EAASnQ,CAAK,CAC1B,CAAS,CAET,CAEA,SAASoQ,EAAoB7C,EAAS4C,EAAUE,EAAe,CACvD,OAAOF,GAAa,YACpB5C,EAAQ,KAAK4C,CAAQ,EAGrB,OAAOE,GAAkB,YACzB9C,EAAQ,MAAS8C,CAAa,CAEtC,CAEA,SAASC,EAAajX,EAAK,CAEvB,OAAI,OAAOA,GAAQ,WACf,QAAQ,KAAKA,EAAM,yCAAyC,EAC5DA,EAAM,OAAOA,CAAG,GAGbA,CACX,CAEA,SAASkX,GAAc,CACnB,GAAI,UAAU,QAAU,OAAO,UAAU,UAAU,OAAS,IAAO,WAC/D,OAAO,UAAU,UAAU,OAAS,EAE5C,CAKA,IAAIC,EAA4B,mCAC5BC,EAAgB,OAChBC,EAAa,CAAA,EACbC,GAAW,OAAO,UAAU,SAG5BC,EAAY,WACZC,EAAa,YAOjB,SAASC,EAAwBC,EAAK,CAIlC,QAHIC,EAASD,EAAI,OACbE,EAAM,IAAI,YAAYD,CAAM,EAC5BE,EAAM,IAAI,WAAWD,CAAG,EACnB9X,EAAI,EAAGA,EAAI6X,EAAQ7X,IACxB+X,EAAI/X,GAAK4X,EAAI,WAAW5X,CAAC,EAE7B,OAAO8X,CACX,CAiBA,SAASE,EAAgC3B,EAAK,CAC1C,OAAO,IAAIS,EAAU,SAAU1B,EAAS,CACpC,IAAI6C,EAAM5B,EAAI,YAAYgB,EAA2BK,CAAU,EAC3DQ,EAAOzB,EAAW,CAAC,EAAE,CAAC,EAC1BwB,EAAI,YAAYZ,CAAyB,EAAE,IAAIa,EAAM,KAAK,EAE1DD,EAAI,QAAU,SAAUpP,EAAG,CAGvBA,EAAE,eAAc,EAChBA,EAAE,gBAAe,EACjBuM,EAAQ,EAAK,CACzB,EAEQ6C,EAAI,WAAa,UAAY,CACzB,IAAIE,EAAgB,UAAU,UAAU,MAAM,eAAe,EACzDC,EAAc,UAAU,UAAU,MAAM,QAAQ,EAGpDhD,EAAQgD,GAAe,CAACD,GAAiB,SAASA,EAAc,GAAI,EAAE,GAAK,EAAE,CACzF,CACA,CAAK,EAAE,MAAS,UAAY,CACpB,MAAO,EACf,CAAK,CACL,CAEA,SAASE,EAAkBhC,EAAK,CAC5B,OAAI,OAAOiB,GAAkB,UAClBR,EAAU,QAAQQ,CAAa,EAEnCU,EAAgC3B,CAAG,EAAE,KAAK,SAAUzP,EAAO,CAC9D,OAAA0Q,EAAgB1Q,EACT0Q,CACf,CAAK,CACL,CAEA,SAASgB,EAAgBC,EAAQ,CAC7B,IAAIC,EAAYjB,EAAWgB,EAAO,MAG9BE,EAAoB,CAAA,EAExBA,EAAkB,QAAU,IAAI3B,EAAU,SAAU1B,EAASC,EAAQ,CACjEoD,EAAkB,QAAUrD,EAC5BqD,EAAkB,OAASpD,CACnC,CAAK,EAGDmD,EAAU,mBAAmB,KAAKC,CAAiB,EAG9CD,EAAU,QAGXA,EAAU,QAAUA,EAAU,QAAQ,KAAK,UAAY,CACnD,OAAOC,EAAkB,OACrC,CAAS,EAJDD,EAAU,QAAUC,EAAkB,OAM9C,CAEA,SAASC,EAAkBH,EAAQ,CAC/B,IAAIC,EAAYjB,EAAWgB,EAAO,MAG9BE,EAAoBD,EAAU,mBAAmB,IAAG,EAIxD,GAAIC,EACA,OAAAA,EAAkB,QAAO,EAClBA,EAAkB,OAEjC,CAEA,SAASE,EAAiBJ,EAAQK,EAAK,CACnC,IAAIJ,EAAYjB,EAAWgB,EAAO,MAG9BE,EAAoBD,EAAU,mBAAmB,IAAG,EAIxD,GAAIC,EACA,OAAAA,EAAkB,OAAOG,CAAG,EACrBH,EAAkB,OAEjC,CAEA,SAASI,EAAeN,EAAQO,EAAe,CAC3C,OAAO,IAAIhC,EAAU,SAAU1B,EAASC,EAAQ,CAG5C,GAFAkC,EAAWgB,EAAO,MAAQhB,EAAWgB,EAAO,OAASQ,KAEjDR,EAAO,GACP,GAAIO,EACAR,EAAgBC,CAAM,EACtBA,EAAO,GAAG,YAEV,QAAOnD,EAAQmD,EAAO,EAAE,EAIhC,IAAIS,EAAS,CAACT,EAAO,IAAI,EAErBO,GACAE,EAAO,KAAKT,EAAO,OAAO,EAG9B,IAAIU,EAAU5C,EAAI,KAAK,MAAMA,EAAK2C,CAAM,EAEpCF,IACAG,EAAQ,gBAAkB,SAAUpQ,EAAG,CACnC,IAAIqQ,EAAKD,EAAQ,OACjB,GAAI,CACAC,EAAG,kBAAkBX,EAAO,SAAS,EACjC1P,EAAE,YAAc,GAEhBqQ,EAAG,kBAAkB7B,CAAyB,CAErD,OAAQ8B,EAAP,CACE,GAAIA,EAAG,OAAS,kBACZ,QAAQ,KAAK,iBAAmBZ,EAAO,KAAO,oCAA2C1P,EAAE,WAAa,eAAiBA,EAAE,WAAa,sBAAwB0P,EAAO,UAAY,mBAAmB,MAEtM,OAAMY,CAEb,CACjB,GAGQF,EAAQ,QAAU,SAAUpQ,EAAG,CAC3BA,EAAE,eAAc,EAChBwM,EAAO4D,EAAQ,KAAK,CAChC,EAEQA,EAAQ,UAAY,UAAY,CAC5B,IAAIC,EAAKD,EAAQ,OACjBC,EAAG,gBAAkB,SAAUrQ,EAAG,CAM9BA,EAAE,OAAO,OACzB,EACYuM,EAAQ8D,CAAE,EACVR,EAAkBH,CAAM,CACpC,CACA,CAAK,CACL,CAEA,SAASa,EAAuBb,EAAQ,CACpC,OAAOM,EAAeN,EAAQ,EAAK,CACvC,CAEA,SAASc,GAAuBd,EAAQ,CACpC,OAAOM,EAAeN,EAAQ,EAAI,CACtC,CAEA,SAASe,GAAiBf,EAAQgB,EAAgB,CAC9C,GAAI,CAAChB,EAAO,GACR,MAAO,GAGX,IAAIiB,EAAa,CAACjB,EAAO,GAAG,iBAAiB,SAASA,EAAO,SAAS,EAClEkB,EAAclB,EAAO,QAAUA,EAAO,GAAG,QACzCmB,EAAYnB,EAAO,QAAUA,EAAO,GAAG,QAY3C,GAVIkB,IAGIlB,EAAO,UAAYgB,GACnB,QAAQ,KAAK,iBAAmBhB,EAAO,KAAO,sCAA6CA,EAAO,GAAG,QAAU,eAAiBA,EAAO,QAAU,GAAG,EAGxJA,EAAO,QAAUA,EAAO,GAAG,SAG3BmB,GAAaF,EAAY,CAIzB,GAAIA,EAAY,CACZ,IAAIG,EAAapB,EAAO,GAAG,QAAU,EACjCoB,EAAapB,EAAO,UACpBA,EAAO,QAAUoB,EAExB,CAED,MAAO,EACV,CAED,MAAO,EACX,CAGA,SAASC,GAAY1B,EAAM,CACvB,OAAO,IAAIpB,EAAU,SAAU1B,EAASC,EAAQ,CAC5C,IAAIwE,EAAS,IAAI,WACjBA,EAAO,QAAUxE,EACjBwE,EAAO,UAAY,SAAUhR,EAAG,CAC5B,IAAIiR,EAAS,KAAKjR,EAAE,OAAO,QAAU,EAAE,EACvCuM,EAAQ,CACJ,4BAA6B,GAC7B,KAAM0E,EACN,KAAM5B,EAAK,IAC3B,CAAa,CACb,EACQ2B,EAAO,mBAAmB3B,CAAI,CACtC,CAAK,CACL,CAGA,SAAS6B,GAAYC,EAAa,CAC9B,IAAIC,EAAYtC,EAAwB,KAAKqC,EAAY,IAAI,CAAC,EAC9D,OAAOvD,EAAW,CAACwD,CAAS,EAAG,CAAE,KAAMD,EAAY,IAAI,CAAE,CAC7D,CAGA,SAASE,GAAetT,EAAO,CAC3B,OAAOA,GAASA,EAAM,2BAC1B,CAMA,SAASuT,GAAYnD,EAAU,CAC3B,IAAIvC,EAAO,KAEPL,EAAUK,EAAK,WAAY,EAAC,KAAK,UAAY,CAC7C,IAAI+D,EAAYjB,EAAW9C,EAAK,QAAQ,MAExC,GAAI+D,GAAaA,EAAU,QACvB,OAAOA,EAAU,OAE7B,CAAK,EAED,OAAAvB,EAAoB7C,EAAS4C,EAAUA,CAAQ,EACxC5C,CACX,CAKA,SAASgG,GAAc7B,EAAQ,CAC3BD,EAAgBC,CAAM,EAKtB,QAHIC,EAAYjB,EAAWgB,EAAO,MAC9B8B,EAAU7B,EAAU,QAEf,EAAI,EAAG,EAAI6B,EAAQ,OAAQ,IAAK,CACrC,IAAIC,EAASD,EAAQ,GACjBC,EAAO,QAAQ,KACfA,EAAO,QAAQ,GAAG,QAClBA,EAAO,QAAQ,GAAK,KAE3B,CACD,OAAA/B,EAAO,GAAK,KAELa,EAAuBb,CAAM,EAAE,KAAK,SAAUW,EAAI,CAErD,OADAX,EAAO,GAAKW,EACRI,GAAiBf,CAAM,EAEhBc,GAAuBd,CAAM,EAEjCW,CACf,CAAK,EAAE,KAAK,SAAUA,EAAI,CAGlBX,EAAO,GAAKC,EAAU,GAAKU,EAC3B,QAASlZ,EAAI,EAAGA,EAAIqa,EAAQ,OAAQra,IAChCqa,EAAQra,GAAG,QAAQ,GAAKkZ,CAEpC,CAAK,EAAE,MAAS,SAAUN,EAAK,CACvB,MAAAD,EAAiBJ,EAAQK,CAAG,EACtBA,CACd,CAAK,CACL,CAIA,SAAS2B,EAAkBhC,EAAQiC,EAAMxD,EAAUyD,EAAS,CACpDA,IAAY,SACZA,EAAU,GAGd,GAAI,CACA,IAAIC,EAAKnC,EAAO,GAAG,YAAYA,EAAO,UAAWiC,CAAI,EACrDxD,EAAS,KAAM0D,CAAE,CACpB,OAAQ9B,EAAP,CACE,GAAI6B,EAAU,IAAM,CAAClC,EAAO,IAAMK,EAAI,OAAS,qBAAuBA,EAAI,OAAS,iBAC/E,OAAO9B,EAAU,UAAU,KAAK,UAAY,CACxC,GAAI,CAACyB,EAAO,IAAMK,EAAI,OAAS,iBAAmB,CAACL,EAAO,GAAG,iBAAiB,SAASA,EAAO,SAAS,GAAKA,EAAO,SAAWA,EAAO,GAAG,QAEpI,OAAIA,EAAO,KACPA,EAAO,QAAUA,EAAO,GAAG,QAAU,GAGlCc,GAAuBd,CAAM,CAExD,CAAa,EAAE,KAAK,UAAY,CAChB,OAAO6B,GAAc7B,CAAM,EAAE,KAAK,UAAY,CAC1CgC,EAAkBhC,EAAQiC,EAAMxD,EAAUyD,EAAU,CAAC,CACzE,CAAiB,CACjB,CAAa,EAAE,MAASzD,CAAQ,EAGxBA,EAAS4B,CAAG,CACf,CACL,CAEA,SAASG,IAAkB,CACvB,MAAO,CAEH,QAAS,CAAE,EAEX,GAAI,KAEJ,QAAS,KAET,mBAAoB,CAAE,CAC9B,CACA,CAIA,SAAS4B,GAAara,EAAS,CAC3B,IAAImU,EAAO,KACP8D,EAAS,CACT,GAAI,IACZ,EAEI,GAAIjY,EACA,QAAS,KAAKA,EACViY,EAAO,GAAKjY,EAAQ,GAK5B,IAAIkY,EAAYjB,EAAWgB,EAAO,MAG7BC,IACDA,EAAYO,GAAe,EAE3BxB,EAAWgB,EAAO,MAAQC,GAI9BA,EAAU,QAAQ,KAAK/D,CAAI,EAGtBA,EAAK,aACNA,EAAK,WAAaA,EAAK,MACvBA,EAAK,MAAQ0F,IAIjB,IAAIS,EAAe,CAAA,EAEnB,SAASC,GAAe,CAGpB,OAAO/D,EAAU,SACpB,CAED,QAASgE,EAAI,EAAGA,EAAItC,EAAU,QAAQ,OAAQsC,IAAK,CAC/C,IAAIR,EAAS9B,EAAU,QAAQsC,GAC3BR,IAAW7F,GAEXmG,EAAa,KAAKN,EAAO,WAAY,EAAC,MAASO,CAAY,CAAC,CAEnE,CAGD,IAAIR,EAAU7B,EAAU,QAAQ,MAAM,CAAC,EAIvC,OAAO1B,EAAU,IAAI8D,CAAY,EAAE,KAAK,UAAY,CAChD,OAAArC,EAAO,GAAKC,EAAU,GAEfY,EAAuBb,CAAM,CAC5C,CAAK,EAAE,KAAK,SAAUW,EAAI,CAElB,OADAX,EAAO,GAAKW,EACRI,GAAiBf,EAAQ9D,EAAK,eAAe,OAAO,EAE7C4E,GAAuBd,CAAM,EAEjCW,CACf,CAAK,EAAE,KAAK,SAAUA,EAAI,CAClBX,EAAO,GAAKC,EAAU,GAAKU,EAC3BzE,EAAK,QAAU8D,EAEf,QAASwC,EAAI,EAAGA,EAAIV,EAAQ,OAAQU,IAAK,CACrC,IAAIT,EAASD,EAAQU,GACjBT,IAAW7F,IAEX6F,EAAO,QAAQ,GAAK/B,EAAO,GAC3B+B,EAAO,QAAQ,QAAU/B,EAAO,QAEvC,CACT,CAAK,CACL,CAEA,SAASyC,GAAQ9a,EAAK8W,EAAU,CAC5B,IAAIvC,EAAO,KAEXvU,EAAMiX,EAAajX,CAAG,EAEtB,IAAIkU,EAAU,IAAI0C,EAAU,SAAU1B,EAASC,EAAQ,CACnDZ,EAAK,QAAQ,KAAK,UAAY,CAC1B8F,EAAkB9F,EAAK,QAASgD,EAAW,SAAUmB,EAAKqC,EAAa,CACnE,GAAIrC,EACA,OAAOvD,EAAOuD,CAAG,EAGrB,GAAI,CACA,IAAIsC,EAAQD,EAAY,YAAYxG,EAAK,QAAQ,SAAS,EACtD0G,EAAMD,EAAM,IAAIhb,CAAG,EAEvBib,EAAI,UAAY,UAAY,CACxB,IAAIvU,EAAQuU,EAAI,OACZvU,IAAU,SACVA,EAAQ,MAERsT,GAAetT,CAAK,IACpBA,EAAQmT,GAAYnT,CAAK,GAE7BwO,EAAQxO,CAAK,CACrC,EAEoBuU,EAAI,QAAU,UAAY,CACtB9F,EAAO8F,EAAI,KAAK,CACxC,CACiB,OAAQtS,EAAP,CACEwM,EAAOxM,CAAC,CACX,CACjB,CAAa,CACb,CAAS,EAAE,MAASwM,CAAM,CAC1B,CAAK,EAED,OAAA0B,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAGA,SAASgH,GAAQC,EAAUrE,EAAU,CACjC,IAAIvC,EAAO,KAEPL,EAAU,IAAI0C,EAAU,SAAU1B,EAASC,EAAQ,CACnDZ,EAAK,QAAQ,KAAK,UAAY,CAC1B8F,EAAkB9F,EAAK,QAASgD,EAAW,SAAUmB,EAAKqC,EAAa,CACnE,GAAIrC,EACA,OAAOvD,EAAOuD,CAAG,EAGrB,GAAI,CACA,IAAIsC,EAAQD,EAAY,YAAYxG,EAAK,QAAQ,SAAS,EACtD0G,EAAMD,EAAM,aACZI,EAAkB,EAEtBH,EAAI,UAAY,UAAY,CACxB,IAAII,EAASJ,EAAI,OAEjB,GAAII,EAAQ,CACR,IAAI3U,EAAQ2U,EAAO,MACfrB,GAAetT,CAAK,IACpBA,EAAQmT,GAAYnT,CAAK,GAE7B,IAAI8N,EAAS2G,EAASzU,EAAO2U,EAAO,IAAKD,GAAiB,EAKtD5G,IAAW,OACXU,EAAQV,CAAM,EAEd6G,EAAO,UAEvC,MAC4BnG,GAE5B,EAEoB+F,EAAI,QAAU,UAAY,CACtB9F,EAAO8F,EAAI,KAAK,CACxC,CACiB,OAAQtS,EAAP,CACEwM,EAAOxM,CAAC,CACX,CACjB,CAAa,CACb,CAAS,EAAE,MAASwM,CAAM,CAC1B,CAAK,EAED,OAAA0B,EAAgB3C,EAAS4C,CAAQ,EAE1B5C,CACX,CAEA,SAASoH,GAAQtb,EAAK0G,EAAOoQ,EAAU,CACnC,IAAIvC,EAAO,KAEXvU,EAAMiX,EAAajX,CAAG,EAEtB,IAAIkU,EAAU,IAAI0C,EAAU,SAAU1B,EAASC,EAAQ,CACnD,IAAIkD,EACJ9D,EAAK,QAAQ,KAAK,UAAY,CAE1B,OADA8D,EAAS9D,EAAK,QACV+C,GAAS,KAAK5Q,CAAK,IAAM,gBAClByR,EAAkBE,EAAO,EAAE,EAAE,KAAK,SAAUkD,EAAa,CAC5D,OAAIA,EACO7U,EAEJgT,GAAYhT,CAAK,CAC5C,CAAiB,EAEEA,CACnB,CAAS,EAAE,KAAK,SAAUA,EAAO,CACrB2T,EAAkB9F,EAAK,QAASiD,EAAY,SAAUkB,EAAKqC,EAAa,CACpE,GAAIrC,EACA,OAAOvD,EAAOuD,CAAG,EAGrB,GAAI,CACA,IAAIsC,EAAQD,EAAY,YAAYxG,EAAK,QAAQ,SAAS,EAMtD7N,IAAU,OACVA,EAAQ,QAGZ,IAAIuU,EAAMD,EAAM,IAAItU,EAAO1G,CAAG,EAE9B+a,EAAY,WAAa,UAAY,CAO7BrU,IAAU,SACVA,EAAQ,MAGZwO,EAAQxO,CAAK,CACrC,EACoBqU,EAAY,QAAUA,EAAY,QAAU,UAAY,CACpD,IAAIrC,EAAMuC,EAAI,MAAQA,EAAI,MAAQA,EAAI,YAAY,MAClD9F,EAAOuD,CAAG,CAClC,CACiB,OAAQ/P,EAAP,CACEwM,EAAOxM,CAAC,CACX,CACjB,CAAa,CACb,CAAS,EAAE,MAASwM,CAAM,CAC1B,CAAK,EAED,OAAA0B,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAEA,SAASsH,GAAWxb,EAAK8W,EAAU,CAC/B,IAAIvC,EAAO,KAEXvU,EAAMiX,EAAajX,CAAG,EAEtB,IAAIkU,EAAU,IAAI0C,EAAU,SAAU1B,EAASC,EAAQ,CACnDZ,EAAK,QAAQ,KAAK,UAAY,CAC1B8F,EAAkB9F,EAAK,QAASiD,EAAY,SAAUkB,EAAKqC,EAAa,CACpE,GAAIrC,EACA,OAAOvD,EAAOuD,CAAG,EAGrB,GAAI,CACA,IAAIsC,EAAQD,EAAY,YAAYxG,EAAK,QAAQ,SAAS,EAMtD0G,EAAMD,EAAM,OAAUhb,CAAG,EAC7B+a,EAAY,WAAa,UAAY,CACjC7F,GACxB,EAEoB6F,EAAY,QAAU,UAAY,CAC9B5F,EAAO8F,EAAI,KAAK,CACxC,EAIoBF,EAAY,QAAU,UAAY,CAC9B,IAAIrC,EAAMuC,EAAI,MAAQA,EAAI,MAAQA,EAAI,YAAY,MAClD9F,EAAOuD,CAAG,CAClC,CACiB,OAAQ/P,EAAP,CACEwM,EAAOxM,CAAC,CACX,CACjB,CAAa,CACb,CAAS,EAAE,MAASwM,CAAM,CAC1B,CAAK,EAED,OAAA0B,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAEA,SAASuH,GAAM3E,EAAU,CACrB,IAAIvC,EAAO,KAEPL,EAAU,IAAI0C,EAAU,SAAU1B,EAASC,EAAQ,CACnDZ,EAAK,QAAQ,KAAK,UAAY,CAC1B8F,EAAkB9F,EAAK,QAASiD,EAAY,SAAUkB,EAAKqC,EAAa,CACpE,GAAIrC,EACA,OAAOvD,EAAOuD,CAAG,EAGrB,GAAI,CACA,IAAIsC,EAAQD,EAAY,YAAYxG,EAAK,QAAQ,SAAS,EACtD0G,EAAMD,EAAM,QAEhBD,EAAY,WAAa,UAAY,CACjC7F,GACxB,EAEoB6F,EAAY,QAAUA,EAAY,QAAU,UAAY,CACpD,IAAIrC,EAAMuC,EAAI,MAAQA,EAAI,MAAQA,EAAI,YAAY,MAClD9F,EAAOuD,CAAG,CAClC,CACiB,OAAQ/P,EAAP,CACEwM,EAAOxM,CAAC,CACX,CACjB,CAAa,CACb,CAAS,EAAE,MAASwM,CAAM,CAC1B,CAAK,EAED,OAAA0B,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAEA,SAASyD,GAAOb,EAAU,CACtB,IAAIvC,EAAO,KAEPL,EAAU,IAAI0C,EAAU,SAAU1B,EAASC,EAAQ,CACnDZ,EAAK,QAAQ,KAAK,UAAY,CAC1B8F,EAAkB9F,EAAK,QAASgD,EAAW,SAAUmB,EAAKqC,EAAa,CACnE,GAAIrC,EACA,OAAOvD,EAAOuD,CAAG,EAGrB,GAAI,CACA,IAAIsC,EAAQD,EAAY,YAAYxG,EAAK,QAAQ,SAAS,EACtD0G,EAAMD,EAAM,QAEhBC,EAAI,UAAY,UAAY,CACxB/F,EAAQ+F,EAAI,MAAM,CAC1C,EAEoBA,EAAI,QAAU,UAAY,CACtB9F,EAAO8F,EAAI,KAAK,CACxC,CACiB,OAAQtS,EAAP,CACEwM,EAAOxM,CAAC,CACX,CACjB,CAAa,CACb,CAAS,EAAE,MAASwM,CAAM,CAC1B,CAAK,EAED,OAAA0B,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAEA,SAASlU,GAAI+C,EAAG+T,EAAU,CACtB,IAAIvC,EAAO,KAEPL,EAAU,IAAI0C,EAAU,SAAU1B,EAASC,EAAQ,CACnD,GAAIpS,EAAI,EAAG,CACPmS,EAAQ,IAAI,EAEZ,MACH,CAEDX,EAAK,QAAQ,KAAK,UAAY,CAC1B8F,EAAkB9F,EAAK,QAASgD,EAAW,SAAUmB,EAAKqC,EAAa,CACnE,GAAIrC,EACA,OAAOvD,EAAOuD,CAAG,EAGrB,GAAI,CACA,IAAIsC,EAAQD,EAAY,YAAYxG,EAAK,QAAQ,SAAS,EACtDmH,EAAW,GACXT,EAAMD,EAAM,gBAEhBC,EAAI,UAAY,UAAY,CACxB,IAAII,EAASJ,EAAI,OACjB,GAAI,CAACI,EAAQ,CAETnG,EAAQ,IAAI,EAEZ,MACH,CAEGnS,IAAM,GAKD2Y,EAFLxG,EAAQmG,EAAO,GAAG,GAKdK,EAAW,GACXL,EAAO,QAAQtY,CAAC,EAMhD,EAEoBkY,EAAI,QAAU,UAAY,CACtB9F,EAAO8F,EAAI,KAAK,CACxC,CACiB,OAAQtS,EAAP,CACEwM,EAAOxM,CAAC,CACX,CACjB,CAAa,CACb,CAAS,EAAE,MAASwM,CAAM,CAC1B,CAAK,EAED,OAAA0B,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAEA,SAASyH,GAAK7E,EAAU,CACpB,IAAIvC,EAAO,KAEPL,EAAU,IAAI0C,EAAU,SAAU1B,EAASC,EAAQ,CACnDZ,EAAK,QAAQ,KAAK,UAAY,CAC1B8F,EAAkB9F,EAAK,QAASgD,EAAW,SAAUmB,EAAKqC,EAAa,CACnE,GAAIrC,EACA,OAAOvD,EAAOuD,CAAG,EAGrB,GAAI,CACA,IAAIsC,EAAQD,EAAY,YAAYxG,EAAK,QAAQ,SAAS,EACtD0G,EAAMD,EAAM,gBACZW,EAAO,CAAA,EAEXV,EAAI,UAAY,UAAY,CACxB,IAAII,EAASJ,EAAI,OAEjB,GAAI,CAACI,EAAQ,CACTnG,EAAQyG,CAAI,EACZ,MACH,CAEDA,EAAK,KAAKN,EAAO,GAAG,EACpBA,EAAO,UAC/B,EAEoBJ,EAAI,QAAU,UAAY,CACtB9F,EAAO8F,EAAI,KAAK,CACxC,CACiB,OAAQtS,EAAP,CACEwM,EAAOxM,CAAC,CACX,CACjB,CAAa,CACb,CAAS,EAAE,MAASwM,CAAM,CAC1B,CAAK,EAED,OAAA0B,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAEA,SAAS0H,GAAaxb,EAAS0W,EAAU,CACrCA,EAAWI,EAAY,MAAM,KAAM,SAAS,EAE5C,IAAI2E,EAAgB,KAAK,SACzBzb,EAAU,OAAOA,GAAY,YAAcA,GAAW,CAAA,EACjDA,EAAQ,OACTA,EAAQ,KAAOA,EAAQ,MAAQyb,EAAc,KAC7Czb,EAAQ,UAAYA,EAAQ,WAAayb,EAAc,WAG3D,IAAItH,EAAO,KACPL,EACJ,GAAI,CAAC9T,EAAQ,KACT8T,EAAU0C,EAAU,OAAO,mBAAmB,MAC3C,CACH,IAAIkF,EAAc1b,EAAQ,OAASyb,EAAc,MAAQtH,EAAK,QAAQ,GAElEwH,EAAYD,EAAclF,EAAU,QAAQrC,EAAK,QAAQ,EAAE,EAAI2E,EAAuB9Y,CAAO,EAAE,KAAK,SAAU4Y,EAAI,CAClH,IAAIV,EAAYjB,EAAWjX,EAAQ,MAC/B+Z,EAAU7B,EAAU,QACxBA,EAAU,GAAKU,EACf,QAASlZ,EAAI,EAAGA,EAAIqa,EAAQ,OAAQra,IAChCqa,EAAQra,GAAG,QAAQ,GAAKkZ,EAE5B,OAAOA,CACnB,CAAS,EAEI5Y,EAAQ,UAmDT8T,EAAU6H,EAAU,KAAK,SAAU/C,EAAI,CACnC,GAAI,EAACA,EAAG,iBAAiB,SAAS5Y,EAAQ,SAAS,EAInD,KAAI4b,EAAahD,EAAG,QAAU,EAE9BZ,EAAgBhY,CAAO,EAEvB,IAAIkY,EAAYjB,EAAWjX,EAAQ,MAC/B+Z,EAAU7B,EAAU,QAExBU,EAAG,MAAK,EACR,QAASlZ,EAAI,EAAGA,EAAIqa,EAAQ,OAAQra,IAAK,CACrC,IAAIsa,EAASD,EAAQra,GACrBsa,EAAO,QAAQ,GAAK,KACpBA,EAAO,QAAQ,QAAU4B,CAC5B,CAED,IAAIC,EAAoB,IAAIrF,EAAU,SAAU1B,EAASC,EAAQ,CAC7D,IAAI8F,EAAM9E,EAAI,KAAK/V,EAAQ,KAAM4b,CAAU,EAE3Cf,EAAI,QAAU,SAAUvC,EAAK,CACzB,IAAIM,GAAKiC,EAAI,OACbjC,GAAG,MAAK,EACR7D,EAAOuD,CAAG,CAClC,EAEoBuC,EAAI,gBAAkB,UAAY,CAC9B,IAAIjC,EAAKiC,EAAI,OACbjC,EAAG,kBAAkB5Y,EAAQ,SAAS,CAC9D,EAEoB6a,EAAI,UAAY,UAAY,CACxB,IAAIjC,EAAKiC,EAAI,OACbjC,EAAG,MAAK,EACR9D,EAAQ8D,CAAE,CAClC,CACA,CAAiB,EAED,OAAOiD,EAAkB,KAAK,SAAUjD,EAAI,CACxCV,EAAU,GAAKU,EACf,QAAS4B,EAAI,EAAGA,EAAIT,EAAQ,OAAQS,IAAK,CACrC,IAAIsB,EAAW/B,EAAQS,GACvBsB,EAAS,QAAQ,GAAKlD,EACtBR,EAAkB0D,EAAS,OAAO,CACrC,CACrB,CAAiB,EAAE,MAAS,SAAUxD,EAAK,CACvB,MAACD,EAAiBrY,EAASsY,CAAG,GAAK9B,EAAU,QAAO,GAAI,MAAS,UAAY,CAAA,CAAE,EACzE8B,CAC1B,CAAiB,EACjB,CAAa,EArGDxE,EAAU6H,EAAU,KAAK,SAAU/C,EAAI,CACnCZ,EAAgBhY,CAAO,EAEvB,IAAIkY,EAAYjB,EAAWjX,EAAQ,MAC/B+Z,EAAU7B,EAAU,QAExBU,EAAG,MAAK,EACR,QAASlZ,EAAI,EAAGA,EAAIqa,EAAQ,OAAQra,IAAK,CACrC,IAAIsa,EAASD,EAAQra,GACrBsa,EAAO,QAAQ,GAAK,IACvB,CAED,IAAI+B,EAAgB,IAAIvF,EAAU,SAAU1B,EAASC,EAAQ,CACzD,IAAI8F,EAAM9E,EAAI,eAAe/V,EAAQ,IAAI,EAEzC6a,EAAI,QAAU,UAAY,CACtB,IAAIjC,EAAKiC,EAAI,OACTjC,GACAA,EAAG,MAAK,EAEZ7D,EAAO8F,EAAI,KAAK,CACxC,EAEoBA,EAAI,UAAY,UAAY,CAGxB,QAAQ,KAAK,sCAAwC7a,EAAQ,KAAO,yCAAyC,CACrI,EAEoB6a,EAAI,UAAY,UAAY,CACxB,IAAIjC,EAAKiC,EAAI,OACTjC,GACAA,EAAG,MAAK,EAEZ9D,EAAQ8D,CAAE,CAClC,CACA,CAAiB,EAED,OAAOmD,EAAc,KAAK,SAAUnD,EAAI,CACpCV,EAAU,GAAKU,EACf,QAASlZ,EAAI,EAAGA,EAAIqa,EAAQ,OAAQra,IAAK,CACrC,IAAIsc,EAAUjC,EAAQra,GACtB0Y,EAAkB4D,EAAQ,OAAO,CACpC,CACrB,CAAiB,EAAE,MAAS,SAAU1D,EAAK,CACvB,MAACD,EAAiBrY,EAASsY,CAAG,GAAK9B,EAAU,QAAO,GAAI,MAAS,UAAY,CAAA,CAAE,EACzE8B,CAC1B,CAAiB,CACjB,CAAa,CAuDR,CAED,OAAA7B,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAEA,IAAImI,GAAe,CACf,QAAS,eACT,aAAc5B,GACd,SAAUrE,EAAkB,EAC5B,QAAS8E,GACT,QAASJ,GACT,QAASQ,GACT,WAAYE,GACZ,MAAOC,GACP,OAAQ9D,GACR,IAAK3X,GACL,KAAM2b,GACN,aAAcC,EAClB,EAEA,SAASU,IAAgB,CACrB,OAAO,OAAO,cAAiB,UACnC,CAKA,IAAIC,EAAa,mEAEbC,GAAmB,uBACnBC,GAAyB,gCAEzBC,GAAoB,YACpBC,GAA2BD,GAAkB,OAG7CE,GAAmB,OACnBC,GAAY,OACZC,GAAiB,OACjBC,GAAkB,OAClBC,GAAyB,OACzBC,GAAkB,OAClBC,GAAkB,OAClBC,GAAmB,OACnBC,GAAmB,OACnBC,GAAoB,OACpBC,GAAoB,OACpBC,GAAgCZ,GAA2BC,GAAiB,OAE5EY,GAAa,OAAO,UAAU,SAElC,SAASC,GAAeC,EAAkB,CAEtC,IAAIC,EAAeD,EAAiB,OAAS,IACzCrK,EAAMqK,EAAiB,OACvB,EACAE,EAAI,EACJC,EAAUC,EAAUC,EAAUC,EAE9BN,EAAiBA,EAAiB,OAAS,KAAO,MAClDC,IACID,EAAiBA,EAAiB,OAAS,KAAO,KAClDC,KAIR,IAAIM,EAAS,IAAI,YAAYN,CAAY,EACrCO,EAAQ,IAAI,WAAWD,CAAM,EAEjC,IAAK,EAAI,EAAG,EAAI5K,EAAK,GAAK,EACtBwK,EAAWtB,EAAW,QAAQmB,EAAiB,EAAE,EACjDI,EAAWvB,EAAW,QAAQmB,EAAiB,EAAI,EAAE,EACrDK,EAAWxB,EAAW,QAAQmB,EAAiB,EAAI,EAAE,EACrDM,EAAWzB,EAAW,QAAQmB,EAAiB,EAAI,EAAE,EAGrDQ,EAAMN,KAAOC,GAAY,EAAIC,GAAY,EACzCI,EAAMN,MAAQE,EAAW,KAAO,EAAIC,GAAY,EAChDG,EAAMN,MAAQG,EAAW,IAAM,EAAIC,EAAW,GAElD,OAAOC,CACX,CAIA,SAASE,GAAeF,EAAQ,CAE5B,IAAIC,EAAQ,IAAI,WAAWD,CAAM,EAC7BG,EAAe,GACf,EAEJ,IAAK,EAAI,EAAG,EAAIF,EAAM,OAAQ,GAAK,EAE/BE,GAAgB7B,EAAW2B,EAAM,IAAM,GACvCE,GAAgB7B,GAAY2B,EAAM,GAAK,IAAM,EAAIA,EAAM,EAAI,IAAM,GACjEE,GAAgB7B,GAAY2B,EAAM,EAAI,GAAK,KAAO,EAAIA,EAAM,EAAI,IAAM,GACtEE,GAAgB7B,EAAW2B,EAAM,EAAI,GAAK,IAG9C,OAAIA,EAAM,OAAS,IAAM,EACrBE,EAAeA,EAAa,UAAU,EAAGA,EAAa,OAAS,CAAC,EAAI,IAC7DF,EAAM,OAAS,IAAM,IAC5BE,EAAeA,EAAa,UAAU,EAAGA,EAAa,OAAS,CAAC,EAAI,MAGjEA,CACX,CAKA,SAASC,GAAU3X,EAAOoQ,EAAU,CAChC,IAAIwH,EAAY,GAShB,GARI5X,IACA4X,EAAYd,GAAW,KAAK9W,CAAK,GAOjCA,IAAU4X,IAAc,wBAA0B5X,EAAM,QAAU8W,GAAW,KAAK9W,EAAM,MAAM,IAAM,wBAAyB,CAG7H,IAAIuX,EACAM,EAAS7B,GAEThW,aAAiB,aACjBuX,EAASvX,EACT6X,GAAU3B,KAEVqB,EAASvX,EAAM,OAEX4X,IAAc,qBACdC,GAAUzB,GACHwB,IAAc,sBACrBC,GAAUxB,GACHuB,IAAc,6BACrBC,GAAUvB,GACHsB,IAAc,sBACrBC,GAAUtB,GACHqB,IAAc,uBACrBC,GAAUpB,GACHmB,IAAc,sBACrBC,GAAUrB,GACHoB,IAAc,uBACrBC,GAAUnB,GACHkB,IAAc,wBACrBC,GAAUlB,GACHiB,IAAc,wBACrBC,GAAUjB,GAEVxG,EAAS,IAAI,MAAM,oCAAoC,CAAC,GAIhEA,EAASyH,EAASJ,GAAeF,CAAM,CAAC,CAChD,SAAeK,IAAc,gBAAiB,CAEtC,IAAIE,EAAa,IAAI,WAErBA,EAAW,OAAS,UAAY,CAE5B,IAAIC,EAAMjC,GAAmB9V,EAAM,KAAO,IAAMyX,GAAe,KAAK,MAAM,EAE1ErH,EAAS4F,GAAoBG,GAAY4B,CAAG,CACxD,EAEQD,EAAW,kBAAkB9X,CAAK,CAC1C,KACQ,IAAI,CACAoQ,EAAS,KAAK,UAAUpQ,CAAK,CAAC,CACjC,OAAQiC,EAAP,CACE,QAAQ,MAAM,8CAA+CjC,CAAK,EAElEoQ,EAAS,KAAMnO,CAAC,CACnB,CAET,CAUA,SAAS+V,GAAYhY,EAAO,CAIxB,GAAIA,EAAM,UAAU,EAAGiW,EAAwB,IAAMD,GACjD,OAAO,KAAK,MAAMhW,CAAK,EAM3B,IAAIgX,EAAmBhX,EAAM,UAAU6W,EAA6B,EAChEoB,EAAOjY,EAAM,UAAUiW,GAA0BY,EAA6B,EAE9EqB,EAGJ,GAAID,IAAS9B,IAAaJ,GAAuB,KAAKiB,CAAgB,EAAG,CACrE,IAAI7X,EAAU6X,EAAiB,MAAMjB,EAAsB,EAC3DmC,EAAW/Y,EAAQ,GACnB6X,EAAmBA,EAAiB,UAAU7X,EAAQ,GAAG,MAAM,CAClE,CACD,IAAIoY,EAASR,GAAeC,CAAgB,EAI5C,OAAQiB,QACC/B,GACD,OAAOqB,OACNpB,GACD,OAAOtG,EAAW,CAAC0H,CAAM,EAAG,CAAE,KAAMW,CAAQ,CAAE,OAC7C9B,GACD,OAAO,IAAI,UAAUmB,CAAM,OAC1BlB,GACD,OAAO,IAAI,WAAWkB,CAAM,OAC3BjB,GACD,OAAO,IAAI,kBAAkBiB,CAAM,OAClChB,GACD,OAAO,IAAI,WAAWgB,CAAM,OAC3Bd,GACD,OAAO,IAAI,YAAYc,CAAM,OAC5Bf,GACD,OAAO,IAAI,WAAWe,CAAM,OAC3Bb,GACD,OAAO,IAAI,YAAYa,CAAM,OAC5BZ,GACD,OAAO,IAAI,aAAaY,CAAM,OAC7BX,GACD,OAAO,IAAI,aAAaW,CAAM,UAE9B,MAAM,IAAI,MAAM,gBAAkBU,CAAI,EAElD,CAEA,IAAIE,GAAwB,CACxB,UAAWR,GACX,YAAaK,GACb,eAAgBjB,GAChB,eAAgBU,EACpB,EAYA,SAASW,GAAc5M,EAAGmG,EAAQvB,EAAUE,EAAe,CACvD9E,EAAE,WAAW,8BAAgCmG,EAAO,UAAY,+CAAqD,CAAE,EAAEvB,EAAUE,CAAa,CACpJ,CAIA,SAAS+H,GAAe3e,EAAS,CAC7B,IAAImU,EAAO,KACP8D,EAAS,CACT,GAAI,IACZ,EAEI,GAAIjY,EACA,QAAS,KAAKA,EACViY,EAAO,GAAK,OAAOjY,EAAQ,IAAO,SAAWA,EAAQ,GAAG,SAAU,EAAGA,EAAQ,GAIrF,IAAI4e,EAAgB,IAAIpI,EAAU,SAAU1B,EAASC,EAAQ,CAGzD,GAAI,CACAkD,EAAO,GAAK,aAAaA,EAAO,KAAM,OAAOA,EAAO,OAAO,EAAGA,EAAO,YAAaA,EAAO,IAAI,CAChG,OAAQ1P,EAAP,CACE,OAAOwM,EAAOxM,CAAC,CAClB,CAGD0P,EAAO,GAAG,YAAY,SAAUnG,EAAG,CAC/B4M,GAAc5M,EAAGmG,EAAQ,UAAY,CACjC9D,EAAK,QAAU8D,EACfnD,GAChB,EAAe,SAAUhD,EAAGvL,EAAO,CACnBwO,EAAOxO,CAAK,CAC5B,CAAa,CACJ,EAAEwO,CAAM,CACjB,CAAK,EAED,OAAAkD,EAAO,WAAawG,GACbG,CACX,CAEA,SAASC,EAAc/M,EAAGmG,EAAQ6G,EAAcC,EAAMrI,EAAUE,EAAe,CAC3E9E,EAAE,WAAWgN,EAAcC,EAAMrI,EAAU,SAAU5E,EAAGvL,EAAO,CACvDA,EAAM,OAASA,EAAM,WACrBuL,EAAE,WAAW,iEAAuE,CAACmG,EAAO,SAAS,EAAG,SAAUnG,EAAGkN,EAAS,CACrHA,EAAQ,KAAK,OAOdpI,EAAc9E,EAAGvL,CAAK,EAJtBmY,GAAc5M,EAAGmG,EAAQ,UAAY,CACjCnG,EAAE,WAAWgN,EAAcC,EAAMrI,EAAUE,CAAa,CAC3D,EAAEA,CAAa,CAIvB,EAAEA,CAAa,EAEhBA,EAAc9E,EAAGvL,CAAK,CAE7B,EAAEqQ,CAAa,CACpB,CAEA,SAASqI,GAAUrf,EAAK8W,EAAU,CAC9B,IAAIvC,EAAO,KAEXvU,EAAMiX,EAAajX,CAAG,EAEtB,IAAIkU,EAAU,IAAI0C,EAAU,SAAU1B,EAASC,EAAQ,CACnDZ,EAAK,QAAQ,KAAK,UAAY,CAC1B,IAAI8D,EAAS9D,EAAK,QAClB8D,EAAO,GAAG,YAAY,SAAUnG,EAAG,CAC/B+M,EAAc/M,EAAGmG,EAAQ,iBAAmBA,EAAO,UAAY,yBAA0B,CAACrY,CAAG,EAAG,SAAUkS,EAAGkN,EAAS,CAClH,IAAI5K,EAAS4K,EAAQ,KAAK,OAASA,EAAQ,KAAK,KAAK,CAAC,EAAE,MAAQ,KAI5D5K,IACAA,EAAS6D,EAAO,WAAW,YAAY7D,CAAM,GAGjDU,EAAQV,CAAM,CAClC,EAAmB,SAAUtC,EAAGvL,EAAO,CACnBwO,EAAOxO,CAAK,CAChC,CAAiB,CACjB,CAAa,CACb,CAAS,EAAE,MAASwO,CAAM,CAC1B,CAAK,EAED,OAAA0B,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAEA,SAASoL,GAAUnE,EAAUrE,EAAU,CACnC,IAAIvC,EAAO,KAEPL,EAAU,IAAI0C,EAAU,SAAU1B,EAASC,EAAQ,CACnDZ,EAAK,QAAQ,KAAK,UAAY,CAC1B,IAAI8D,EAAS9D,EAAK,QAElB8D,EAAO,GAAG,YAAY,SAAUnG,EAAG,CAC/B+M,EAAc/M,EAAGmG,EAAQ,iBAAmBA,EAAO,UAAW,CAAE,EAAE,SAAUnG,EAAGkN,EAAS,CAIpF,QAHIG,EAAOH,EAAQ,KACfzH,EAAS4H,EAAK,OAETzf,EAAI,EAAGA,EAAI6X,EAAQ7X,IAAK,CAC7B,IAAI0f,EAAOD,EAAK,KAAKzf,CAAC,EAClB0U,EAASgL,EAAK,MAYlB,GARIhL,IACAA,EAAS6D,EAAO,WAAW,YAAY7D,CAAM,GAGjDA,EAAS2G,EAAS3G,EAAQgL,EAAK,IAAK1f,EAAI,CAAC,EAIrC0U,IAAW,OAAQ,CACnBU,EAAQV,CAAM,EACd,MACH,CACJ,CAEDU,GACpB,EAAmB,SAAUhD,EAAGvL,EAAO,CACnBwO,EAAOxO,CAAK,CAChC,CAAiB,CACjB,CAAa,CACb,CAAS,EAAE,MAASwO,CAAM,CAC1B,CAAK,EAED,OAAA0B,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAEA,SAASuL,GAASzf,EAAK0G,EAAOoQ,EAAU4I,EAAa,CACjD,IAAInL,EAAO,KAEXvU,EAAMiX,EAAajX,CAAG,EAEtB,IAAIkU,EAAU,IAAI0C,EAAU,SAAU1B,EAASC,EAAQ,CACnDZ,EAAK,QAAQ,KAAK,UAAY,CAItB7N,IAAU,SACVA,EAAQ,MAIZ,IAAIiZ,EAAgBjZ,EAEhB2R,EAAS9D,EAAK,QAClB8D,EAAO,WAAW,UAAU3R,EAAO,SAAUA,EAAOC,EAAO,CACnDA,EACAwO,EAAOxO,CAAK,EAEZ0R,EAAO,GAAG,YAAY,SAAUnG,EAAG,CAC/B+M,EAAc/M,EAAGmG,EAAQ,0BAA4BA,EAAO,UAAY,8BAAoC,CAACrY,EAAK0G,CAAK,EAAG,UAAY,CAClIwO,EAAQyK,CAAa,CACjD,EAA2B,SAAUzN,EAAGvL,EAAO,CACnBwO,EAAOxO,CAAK,CACxC,CAAyB,CACJ,EAAE,SAAUiZ,EAAU,CAGnB,GAAIA,EAAS,OAASA,EAAS,UAAW,CAQtC,GAAIF,EAAc,EAAG,CACjBxK,EAAQuK,GAAS,MAAMlL,EAAM,CAACvU,EAAK2f,EAAe7I,EAAU4I,EAAc,CAAC,CAAC,CAAC,EAC7E,MACH,CACDvK,EAAOyK,CAAQ,CAClB,CACzB,CAAqB,CAErB,CAAa,CACb,CAAS,EAAE,MAASzK,CAAM,CAC1B,CAAK,EAED,OAAA0B,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAEA,SAAS2L,GAAU7f,EAAK0G,EAAOoQ,EAAU,CACrC,OAAO2I,GAAS,MAAM,KAAM,CAACzf,EAAK0G,EAAOoQ,EAAU,CAAC,CAAC,CACzD,CAEA,SAASgJ,GAAa9f,EAAK8W,EAAU,CACjC,IAAIvC,EAAO,KAEXvU,EAAMiX,EAAajX,CAAG,EAEtB,IAAIkU,EAAU,IAAI0C,EAAU,SAAU1B,EAASC,EAAQ,CACnDZ,EAAK,QAAQ,KAAK,UAAY,CAC1B,IAAI8D,EAAS9D,EAAK,QAClB8D,EAAO,GAAG,YAAY,SAAUnG,EAAG,CAC/B+M,EAAc/M,EAAGmG,EAAQ,eAAiBA,EAAO,UAAY,iBAAkB,CAACrY,CAAG,EAAG,UAAY,CAC9FkV,GACpB,EAAmB,SAAUhD,EAAGvL,EAAO,CACnBwO,EAAOxO,CAAK,CAChC,CAAiB,CACjB,CAAa,CACb,CAAS,EAAE,MAASwO,CAAM,CAC1B,CAAK,EAED,OAAA0B,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAIA,SAAS6L,GAAQjJ,EAAU,CACvB,IAAIvC,EAAO,KAEPL,EAAU,IAAI0C,EAAU,SAAU1B,EAASC,EAAQ,CACnDZ,EAAK,QAAQ,KAAK,UAAY,CAC1B,IAAI8D,EAAS9D,EAAK,QAClB8D,EAAO,GAAG,YAAY,SAAUnG,EAAG,CAC/B+M,EAAc/M,EAAGmG,EAAQ,eAAiBA,EAAO,UAAW,CAAA,EAAI,UAAY,CACxEnD,GACpB,EAAmB,SAAUhD,EAAGvL,EAAO,CACnBwO,EAAOxO,CAAK,CAChC,CAAiB,CACjB,CAAa,CACb,CAAS,EAAE,MAASwO,CAAM,CAC1B,CAAK,EAED,OAAA0B,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAIA,SAAS8L,GAASlJ,EAAU,CACxB,IAAIvC,EAAO,KAEPL,EAAU,IAAI0C,EAAU,SAAU1B,EAASC,EAAQ,CACnDZ,EAAK,QAAQ,KAAK,UAAY,CAC1B,IAAI8D,EAAS9D,EAAK,QAClB8D,EAAO,GAAG,YAAY,SAAUnG,EAAG,CAE/B+M,EAAc/M,EAAGmG,EAAQ,+BAAiCA,EAAO,UAAW,CAAE,EAAE,SAAUnG,EAAGkN,EAAS,CAClG,IAAI5K,EAAS4K,EAAQ,KAAK,KAAK,CAAC,EAAE,EAClClK,EAAQV,CAAM,CAClC,EAAmB,SAAUtC,EAAGvL,EAAO,CACnBwO,EAAOxO,CAAK,CAChC,CAAiB,CACjB,CAAa,CACb,CAAS,EAAE,MAASwO,CAAM,CAC1B,CAAK,EAED,OAAA0B,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CASA,SAAS+L,GAAMld,EAAG+T,EAAU,CACxB,IAAIvC,EAAO,KAEPL,EAAU,IAAI0C,EAAU,SAAU1B,EAASC,EAAQ,CACnDZ,EAAK,QAAQ,KAAK,UAAY,CAC1B,IAAI8D,EAAS9D,EAAK,QAClB8D,EAAO,GAAG,YAAY,SAAUnG,EAAG,CAC/B+M,EAAc/M,EAAGmG,EAAQ,mBAAqBA,EAAO,UAAY,wBAAyB,CAACtV,EAAI,CAAC,EAAG,SAAUmP,EAAGkN,EAAS,CACrH,IAAI5K,EAAS4K,EAAQ,KAAK,OAASA,EAAQ,KAAK,KAAK,CAAC,EAAE,IAAM,KAC9DlK,EAAQV,CAAM,CAClC,EAAmB,SAAUtC,EAAGvL,EAAO,CACnBwO,EAAOxO,CAAK,CAChC,CAAiB,CACjB,CAAa,CACb,CAAS,EAAE,MAASwO,CAAM,CAC1B,CAAK,EAED,OAAA0B,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAEA,SAASgM,GAAOpJ,EAAU,CACtB,IAAIvC,EAAO,KAEPL,EAAU,IAAI0C,EAAU,SAAU1B,EAASC,EAAQ,CACnDZ,EAAK,QAAQ,KAAK,UAAY,CAC1B,IAAI8D,EAAS9D,EAAK,QAClB8D,EAAO,GAAG,YAAY,SAAUnG,EAAG,CAC/B+M,EAAc/M,EAAGmG,EAAQ,mBAAqBA,EAAO,UAAW,CAAE,EAAE,SAAUnG,EAAGkN,EAAS,CAGtF,QAFIzD,EAAO,CAAA,EAEF7b,EAAI,EAAGA,EAAIsf,EAAQ,KAAK,OAAQtf,IACrC6b,EAAK,KAAKyD,EAAQ,KAAK,KAAKtf,CAAC,EAAE,GAAG,EAGtCoV,EAAQyG,CAAI,CAChC,EAAmB,SAAUzJ,EAAGvL,EAAO,CACnBwO,EAAOxO,CAAK,CAChC,CAAiB,CACjB,CAAa,CACb,CAAS,EAAE,MAASwO,CAAM,CAC1B,CAAK,EAED,OAAA0B,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAIA,SAASiM,GAAiBnH,EAAI,CAC1B,OAAO,IAAIpC,EAAU,SAAU1B,EAASC,EAAQ,CAC5C6D,EAAG,YAAY,SAAU9G,EAAG,CACxBA,EAAE,WAAW,8FAAoG,CAAA,EAAI,SAAUA,EAAGkN,EAAS,CAGvI,QAFIgB,EAAa,CAAA,EAERtgB,EAAI,EAAGA,EAAIsf,EAAQ,KAAK,OAAQtf,IACrCsgB,EAAW,KAAKhB,EAAQ,KAAK,KAAKtf,CAAC,EAAE,IAAI,EAG7CoV,EAAQ,CACJ,GAAI8D,EACJ,WAAYoH,CAChC,CAAiB,CACjB,EAAe,SAAUlO,EAAGvL,EAAO,CACnBwO,EAAOxO,CAAK,CAC5B,CAAa,CACJ,EAAE,SAAUiZ,EAAU,CACnBzK,EAAOyK,CAAQ,CAC3B,CAAS,CACT,CAAK,CACL,CAEA,SAASS,GAAejgB,EAAS0W,EAAU,CACvCA,EAAWI,EAAY,MAAM,KAAM,SAAS,EAE5C,IAAI2E,EAAgB,KAAK,SACzBzb,EAAU,OAAOA,GAAY,YAAcA,GAAW,CAAA,EACjDA,EAAQ,OACTA,EAAQ,KAAOA,EAAQ,MAAQyb,EAAc,KAC7Czb,EAAQ,UAAYA,EAAQ,WAAayb,EAAc,WAG3D,IAAItH,EAAO,KACPL,EACJ,OAAK9T,EAAQ,KAGT8T,EAAU,IAAI0C,EAAU,SAAU1B,EAAS,CACvC,IAAI8D,EACA5Y,EAAQ,OAASyb,EAAc,KAE/B7C,EAAKzE,EAAK,QAAQ,GAElByE,EAAK,aAAa5Y,EAAQ,KAAM,GAAI,GAAI,CAAC,EAGxCA,EAAQ,UAIT8U,EAAQ,CACJ,GAAI8D,EACJ,WAAY,CAAC5Y,EAAQ,SAAS,CAClD,CAAiB,EALD8U,EAAQiL,GAAiBnH,CAAE,CAAC,CAO5C,CAAS,EAAE,KAAK,SAAUsH,EAAe,CAC7B,OAAO,IAAI1J,EAAU,SAAU1B,EAASC,EAAQ,CAC5CmL,EAAc,GAAG,YAAY,SAAUpO,EAAG,CACtC,SAASqO,EAAUC,EAAW,CAC1B,OAAO,IAAI5J,EAAU,SAAU1B,EAASC,EAAQ,CAC5CjD,EAAE,WAAW,wBAA0BsO,EAAW,CAAE,EAAE,UAAY,CAC9DtL,GAChC,EAA+B,SAAUhD,EAAGvL,EAAO,CACnBwO,EAAOxO,CAAK,CAC5C,CAA6B,CAC7B,CAAyB,CACJ,CAGD,QADI8Z,EAAa,CAAA,EACR3gB,EAAI,EAAGuT,EAAMiN,EAAc,WAAW,OAAQxgB,EAAIuT,EAAKvT,IAC5D2gB,EAAW,KAAKF,EAAUD,EAAc,WAAWxgB,EAAE,CAAC,EAG1D8W,EAAU,IAAI6J,CAAU,EAAE,KAAK,UAAY,CACvCvL,GACxB,CAAqB,EAAE,MAAS,SAAUvM,EAAG,CACrBwM,EAAOxM,CAAC,CAChC,CAAqB,CACJ,EAAE,SAAUiX,EAAU,CACnBzK,EAAOyK,CAAQ,CACnC,CAAiB,CACjB,CAAa,CACb,CAAS,EA/CD1L,EAAU0C,EAAU,OAAO,mBAAmB,EAkDlDC,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAEA,IAAIwM,GAAgB,CAChB,QAAS,gBACT,aAAc3B,GACd,SAAUzC,GAAe,EACzB,QAASgD,GACT,QAASD,GACT,QAASQ,GACT,WAAYC,GACZ,MAAOC,GACP,OAAQC,GACR,IAAKC,GACL,KAAMC,GACN,aAAcG,EAClB,EAEA,SAASM,IAAsB,CAC3B,GAAI,CACA,OAAO,OAAO,cAAiB,aAAe,YAAa,cAE3D,CAAC,CAAC,aAAa,OAClB,MAAC,CACE,MAAO,EACV,CACL,CAEA,SAASC,GAAcxgB,EAASygB,EAAe,CAC3C,IAAIC,EAAY1gB,EAAQ,KAAO,IAE/B,OAAIA,EAAQ,YAAcygB,EAAc,YACpCC,GAAa1gB,EAAQ,UAAY,KAE9B0gB,CACX,CAGA,SAASC,IAA4B,CACjC,IAAIC,EAAsB,4BAE1B,GAAI,CACA,oBAAa,QAAQA,EAAqB,EAAI,EAC9C,aAAa,WAAWA,CAAmB,EAEpC,EACV,MAAC,CACE,MAAO,EACV,CACL,CAMA,SAASC,IAAwB,CAC7B,MAAO,CAACF,GAA2B,GAAI,aAAa,OAAS,CACjE,CAGA,SAASG,GAAe9gB,EAAS,CAC7B,IAAImU,EAAO,KACP8D,EAAS,CAAA,EACb,GAAIjY,EACA,QAAS,KAAKA,EACViY,EAAO,GAAKjY,EAAQ,GAM5B,OAFAiY,EAAO,UAAYuI,GAAcxgB,EAASmU,EAAK,cAAc,EAExD0M,GAAqB,GAI1B1M,EAAK,QAAU8D,EACfA,EAAO,WAAawG,GAEbjI,EAAU,WANNA,EAAU,QAOzB,CAIA,SAASuK,GAAQrK,EAAU,CACvB,IAAIvC,EAAO,KACPL,EAAUK,EAAK,MAAO,EAAC,KAAK,UAAY,CAGxC,QAFIuM,EAAYvM,EAAK,QAAQ,UAEpBzU,EAAI,aAAa,OAAS,EAAGA,GAAK,EAAGA,IAAK,CAC/C,IAAIE,EAAM,aAAa,IAAIF,CAAC,EAExBE,EAAI,QAAQ8gB,CAAS,IAAM,GAC3B,aAAa,WAAW9gB,CAAG,CAElC,CACT,CAAK,EAED,OAAA6W,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAKA,SAASkN,GAAUphB,EAAK8W,EAAU,CAC9B,IAAIvC,EAAO,KAEXvU,EAAMiX,EAAajX,CAAG,EAEtB,IAAIkU,EAAUK,EAAK,MAAO,EAAC,KAAK,UAAY,CACxC,IAAI8D,EAAS9D,EAAK,QACdC,EAAS,aAAa,QAAQ6D,EAAO,UAAYrY,CAAG,EAMxD,OAAIwU,IACAA,EAAS6D,EAAO,WAAW,YAAY7D,CAAM,GAG1CA,CACf,CAAK,EAED,OAAAqC,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAGA,SAASmN,GAAUlG,EAAUrE,EAAU,CACnC,IAAIvC,EAAO,KAEPL,EAAUK,EAAK,MAAO,EAAC,KAAK,UAAY,CAcxC,QAbI8D,EAAS9D,EAAK,QACduM,EAAYzI,EAAO,UACnBiJ,EAAkBR,EAAU,OAC5BnJ,EAAS,aAAa,OAQtByD,EAAkB,EAEbtb,EAAI,EAAGA,EAAI6X,EAAQ7X,IAAK,CAC7B,IAAIE,EAAM,aAAa,IAAIF,CAAC,EAC5B,GAAIE,EAAI,QAAQ8gB,CAAS,IAAM,EAG/B,KAAIpa,EAAQ,aAAa,QAAQ1G,CAAG,EAYpC,GANI0G,IACAA,EAAQ2R,EAAO,WAAW,YAAY3R,CAAK,GAG/CA,EAAQyU,EAASzU,EAAO1G,EAAI,UAAUshB,CAAe,EAAGlG,GAAiB,EAErE1U,IAAU,OACV,OAAOA,EAEd,CACT,CAAK,EAED,OAAAmQ,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAGA,SAASqN,GAAMxe,EAAG+T,EAAU,CACxB,IAAIvC,EAAO,KACPL,EAAUK,EAAK,MAAO,EAAC,KAAK,UAAY,CACxC,IAAI8D,EAAS9D,EAAK,QACdC,EACJ,GAAI,CACAA,EAAS,aAAa,IAAIzR,CAAC,CAC9B,MAAC,CACEyR,EAAS,IACZ,CAGD,OAAIA,IACAA,EAASA,EAAO,UAAU6D,EAAO,UAAU,MAAM,GAG9C7D,CACf,CAAK,EAED,OAAAqC,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAEA,SAASsN,GAAO1K,EAAU,CACtB,IAAIvC,EAAO,KACPL,EAAUK,EAAK,MAAO,EAAC,KAAK,UAAY,CAKxC,QAJI8D,EAAS9D,EAAK,QACdoD,EAAS,aAAa,OACtBgE,EAAO,CAAA,EAEF7b,EAAI,EAAGA,EAAI6X,EAAQ7X,IAAK,CAC7B,IAAI2hB,EAAU,aAAa,IAAI3hB,CAAC,EAC5B2hB,EAAQ,QAAQpJ,EAAO,SAAS,IAAM,GACtCsD,EAAK,KAAK8F,EAAQ,UAAUpJ,EAAO,UAAU,MAAM,CAAC,CAE3D,CAED,OAAOsD,CACf,CAAK,EAED,OAAA9E,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAGA,SAASwN,GAAS5K,EAAU,CACxB,IAAIvC,EAAO,KACPL,EAAUK,EAAK,KAAM,EAAC,KAAK,SAAUoH,EAAM,CAC3C,OAAOA,EAAK,MACpB,CAAK,EAED,OAAA9E,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAGA,SAASyN,GAAa3hB,EAAK8W,EAAU,CACjC,IAAIvC,EAAO,KAEXvU,EAAMiX,EAAajX,CAAG,EAEtB,IAAIkU,EAAUK,EAAK,MAAO,EAAC,KAAK,UAAY,CACxC,IAAI8D,EAAS9D,EAAK,QAClB,aAAa,WAAW8D,EAAO,UAAYrY,CAAG,CACtD,CAAK,EAED,OAAA6W,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAMA,SAAS0N,GAAU5hB,EAAK0G,EAAOoQ,EAAU,CACrC,IAAIvC,EAAO,KAEXvU,EAAMiX,EAAajX,CAAG,EAEtB,IAAIkU,EAAUK,EAAK,MAAO,EAAC,KAAK,UAAY,CAGpC7N,IAAU,SACVA,EAAQ,MAIZ,IAAIiZ,EAAgBjZ,EAEpB,OAAO,IAAIkQ,EAAU,SAAU1B,EAASC,EAAQ,CAC5C,IAAIkD,EAAS9D,EAAK,QAClB8D,EAAO,WAAW,UAAU3R,EAAO,SAAUA,EAAOC,EAAO,CACvD,GAAIA,EACAwO,EAAOxO,CAAK,MAEZ,IAAI,CACA,aAAa,QAAQ0R,EAAO,UAAYrY,EAAK0G,CAAK,EAClDwO,EAAQyK,CAAa,CACxB,OAAQhX,EAAP,EAGMA,EAAE,OAAS,sBAAwBA,EAAE,OAAS,+BAC9CwM,EAAOxM,CAAC,EAEZwM,EAAOxM,CAAC,CACX,CAErB,CAAa,CACb,CAAS,CACT,CAAK,EAED,OAAAkO,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAEA,SAAS2N,GAAezhB,EAAS0W,EAAU,CAIvC,GAHAA,EAAWI,EAAY,MAAM,KAAM,SAAS,EAE5C9W,EAAU,OAAOA,GAAY,YAAcA,GAAW,CAAA,EAClD,CAACA,EAAQ,KAAM,CACf,IAAIyb,EAAgB,KAAK,SACzBzb,EAAQ,KAAOA,EAAQ,MAAQyb,EAAc,KAC7Czb,EAAQ,UAAYA,EAAQ,WAAayb,EAAc,SAC1D,CAED,IAAItH,EAAO,KACPL,EACJ,OAAK9T,EAAQ,KAGT8T,EAAU,IAAI0C,EAAU,SAAU1B,EAAS,CAClC9U,EAAQ,UAGT8U,EAAQ0L,GAAcxgB,EAASmU,EAAK,cAAc,CAAC,EAFnDW,EAAQ9U,EAAQ,KAAO,GAAG,CAI1C,CAAS,EAAE,KAAK,SAAU0gB,EAAW,CACzB,QAAShhB,EAAI,aAAa,OAAS,EAAGA,GAAK,EAAGA,IAAK,CAC/C,IAAIE,EAAM,aAAa,IAAIF,CAAC,EAExBE,EAAI,QAAQ8gB,CAAS,IAAM,GAC3B,aAAa,WAAW9gB,CAAG,CAElC,CACb,CAAS,EAhBDkU,EAAU0C,EAAU,OAAO,mBAAmB,EAmBlDC,EAAgB3C,EAAS4C,CAAQ,EAC1B5C,CACX,CAEA,IAAI4N,GAAsB,CACtB,QAAS,sBACT,aAAcZ,GACd,SAAUP,GAAqB,EAC/B,QAASU,GACT,QAASD,GACT,QAASQ,GACT,WAAYD,GACZ,MAAOR,GACP,OAAQO,GACR,IAAKH,GACL,KAAMC,GACN,aAAcK,EAClB,EAEIE,GAAY,SAAmBjZ,EAAGC,EAAG,CACrC,OAAOD,IAAMC,GAAK,OAAOD,GAAM,UAAY,OAAOC,GAAM,UAAY,MAAMD,CAAC,GAAK,MAAMC,CAAC,CAC3F,EAEIiZ,GAAW,SAAkBC,EAAOC,EAAe,CAGnD,QAFI7O,EAAM4O,EAAM,OACZniB,EAAI,EACDA,EAAIuT,GAAK,CACZ,GAAI0O,GAAUE,EAAMniB,GAAIoiB,CAAa,EACjC,MAAO,GAEXpiB,GACH,CAED,MAAO,EACX,EAEIqiB,GAAU,MAAM,SAAW,SAAUC,EAAK,CAC1C,OAAO,OAAO,UAAU,SAAS,KAAKA,CAAG,IAAM,gBACnD,EAIIC,GAAiB,CAAA,EAEjBC,GAAgB,CAAA,EAEhBC,GAAiB,CACjB,UAAWlG,GACX,OAAQqE,GACR,aAAcoB,EAClB,EAEIU,GAAqB,CAACD,GAAe,UAAU,QAASA,GAAe,OAAO,QAASA,GAAe,aAAa,OAAO,EAE1HE,GAAwB,CAAC,cAAc,EAEvCC,GAAiB,CAAC,QAAS,UAAW,UAAW,MAAO,OAAQ,SAAU,aAAc,SAAS,EAAE,OAAOD,EAAqB,EAE/HE,GAAgB,CAChB,YAAa,GACb,OAAQH,GAAmB,MAAO,EAClC,KAAM,cAGN,KAAM,QACN,UAAW,gBACX,QAAS,CACb,EAEA,SAASI,GAAcC,EAAqBC,EAAe,CACvDD,EAAoBC,GAAiB,UAAY,CAC7C,IAAIC,EAAQ,UACZ,OAAOF,EAAoB,QAAQ,KAAK,UAAY,CAChD,OAAOA,EAAoBC,GAAe,MAAMD,EAAqBE,CAAK,CACtF,CAAS,CACT,CACA,CAEA,SAASC,IAAS,CACd,QAASljB,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CACvC,IAAIsiB,EAAM,UAAUtiB,GAEpB,GAAIsiB,EACA,QAASa,KAAQb,EACTA,EAAI,eAAea,CAAI,IACnBd,GAAQC,EAAIa,EAAK,EACjB,UAAU,GAAGA,GAAQb,EAAIa,GAAM,QAE/B,UAAU,GAAGA,GAAQb,EAAIa,GAK5C,CAED,OAAO,UAAU,EACrB,CAEA,IAAIC,GAAc,UAAY,CAC1B,SAASA,EAAY9iB,EAAS,CAC1B2V,EAAgB,KAAMmN,CAAW,EAEjC,QAASC,KAAiBZ,GACtB,GAAIA,GAAe,eAAeY,CAAa,EAAG,CAC9C,IAAIC,EAASb,GAAeY,GACxBE,EAAaD,EAAO,QACxB,KAAKD,GAAiBE,EAEjBhB,GAAegB,IAIhB,KAAK,aAAaD,CAAM,CAE/B,CAGL,KAAK,eAAiBJ,GAAO,CAAE,EAAEL,EAAa,EAC9C,KAAK,QAAUK,GAAO,CAAA,EAAI,KAAK,eAAgB5iB,CAAO,EACtD,KAAK,WAAa,KAClB,KAAK,YAAc,KACnB,KAAK,OAAS,GACd,KAAK,QAAU,KAEf,KAAK,6BAA4B,EACjC,KAAK,UAAU,KAAK,QAAQ,MAAM,EAAE,MAAS,UAAY,CAAA,CAAE,CAC9D,CAQD,OAAA8iB,EAAY,UAAU,OAAS,SAAgB9iB,EAAS,CAIpD,IAAK,OAAOA,GAAY,YAAc,YAAc0V,EAAQ1V,CAAO,KAAO,SAAU,CAGhF,GAAI,KAAK,OACL,OAAO,IAAI,MAAM,sDAA2D,EAGhF,QAAS,KAAKA,EAAS,CAKnB,GAJI,IAAM,cACNA,EAAQ,GAAKA,EAAQ,GAAG,QAAQ,MAAO,GAAG,GAG1C,IAAM,WAAa,OAAOA,EAAQ,IAAO,SACzC,OAAO,IAAI,MAAM,oCAAoC,EAGzD,KAAK,QAAQ,GAAKA,EAAQ,EAC7B,CAID,MAAI,WAAYA,GAAWA,EAAQ,OACxB,KAAK,UAAU,KAAK,QAAQ,MAAM,EAGtC,EACnB,KAAe,QAAI,OAAOA,GAAY,SACnB,KAAK,QAAQA,GAEb,KAAK,OAExB,EAMI8iB,EAAY,UAAU,aAAe,SAAsBI,EAAcxM,EAAUE,EAAe,CAC9F,IAAI9C,EAAU,IAAI0C,EAAU,SAAU1B,EAASC,EAAQ,CACnD,GAAI,CACA,IAAIkO,EAAaC,EAAa,QAC1BC,EAAkB,IAAI,MAAM,sFAA2F,EAI3H,GAAI,CAACD,EAAa,QAAS,CACvBnO,EAAOoO,CAAe,EACtB,MACH,CAGD,QADIC,EAAgBd,GAAe,OAAO,cAAc,EAC/C5iB,EAAI,EAAGuT,EAAMmQ,EAAc,OAAQ1jB,EAAIuT,EAAKvT,IAAK,CACtD,IAAI2jB,EAAmBD,EAAc1jB,GAIjC4jB,EAAa,CAAC1B,GAASS,GAAuBgB,CAAgB,EAClE,IAAKC,GAAcJ,EAAaG,KAAsB,OAAOH,EAAaG,IAAsB,WAAY,CACxGtO,EAAOoO,CAAe,EACtB,MACH,CACJ,CAED,IAAII,EAA0B,UAAmC,CAU7D,QATIC,GAA8B,SAAqCC,GAAY,CAC/E,OAAO,UAAY,CACf,IAAIld,GAAQ,IAAI,MAAM,UAAYkd,GAAa,2CAA2C,EACtF3P,GAAU0C,EAAU,OAAOjQ,EAAK,EACpC,OAAAkQ,EAAgB3C,GAAS,UAAU,UAAU,OAAS,EAAE,EACjDA,EACnC,CACA,EAE6B4P,GAAK,EAAGC,GAAOtB,GAAsB,OAAQqB,GAAKC,GAAMD,KAAM,CACnE,IAAIE,GAAuBvB,GAAsBqB,IAC5CR,EAAaU,MACdV,EAAaU,IAAwBJ,GAA4BI,EAAoB,EAE5F,CACrB,EAEgBL,IAEA,IAAIM,EAAmB,SAA0BC,GAAS,CAClD7B,GAAegB,IACf,QAAQ,KAAK,kCAAoCA,CAAU,EAE/DhB,GAAegB,GAAcC,EAC7BhB,GAAce,GAAca,GAI5BhP,GACpB,EAEoB,aAAcoO,EACVA,EAAa,UAAY,OAAOA,EAAa,UAAa,WAC1DA,EAAa,SAAU,EAAC,KAAKW,EAAkB9O,CAAM,EAErD8O,EAAiB,CAAC,CAACX,EAAa,QAAQ,EAG5CW,EAAiB,EAAI,CAE5B,OAAQtb,EAAP,CACEwM,EAAOxM,CAAC,CACX,CACb,CAAS,EAED,OAAAoO,EAAoB7C,EAAS4C,EAAUE,CAAa,EAC7C9C,CACf,EAEIgP,EAAY,UAAU,OAAS,UAAkB,CAC7C,OAAO,KAAK,SAAW,IAC/B,EAEIA,EAAY,UAAU,UAAY,SAAmBG,EAAYvM,EAAUE,EAAe,CACtF,IAAImN,EAAmB9B,GAAegB,GAAczM,EAAU,QAAQyL,GAAegB,EAAW,EAAIzM,EAAU,OAAO,IAAI,MAAM,mBAAmB,CAAC,EAEnJ,OAAAG,EAAoBoN,EAAkBrN,EAAUE,CAAa,EACtDmN,CACf,EAEIjB,EAAY,UAAU,cAAgB,SAAuBpM,EAAU,CACnE,IAAIsN,EAAoBxN,EAAU,QAAQiI,EAAqB,EAC/D,OAAA9H,EAAoBqN,EAAmBtN,CAAQ,EACxCsN,CACf,EAEIlB,EAAY,UAAU,MAAQ,SAAepM,EAAU,CACnD,IAAIvC,EAAO,KAEPL,EAAUK,EAAK,WAAW,KAAK,UAAY,CAC3C,OAAIA,EAAK,SAAW,OAChBA,EAAK,OAASA,EAAK,eAGhBA,EAAK,MACxB,CAAS,EAED,OAAAwC,EAAoB7C,EAAS4C,EAAUA,CAAQ,EACxC5C,CACf,EAEIgP,EAAY,UAAU,UAAY,SAAmBmB,EAASvN,EAAUE,EAAe,CACnF,IAAIzC,EAAO,KAEN4N,GAAQkC,CAAO,IAChBA,EAAU,CAACA,CAAO,GAGtB,IAAIC,EAAmB,KAAK,qBAAqBD,CAAO,EAExD,SAASE,GAAoB,CACzBhQ,EAAK,QAAQ,OAASA,EAAK,OAAM,CACpC,CAED,SAASiQ,EAAqBpB,EAAQ,CAClC,OAAA7O,EAAK,QAAQ6O,CAAM,EACnBmB,IAEAhQ,EAAK,OAASA,EAAK,aAAaA,EAAK,OAAO,EACrCA,EAAK,MACf,CAED,SAASkQ,EAAWH,EAAkB,CAClC,OAAO,UAAY,CACf,IAAII,EAAqB,EAEzB,SAASC,GAAoB,CACzB,KAAOD,EAAqBJ,EAAiB,QAAQ,CACjD,IAAIjB,EAAaiB,EAAiBI,GAClC,OAAAA,IAEAnQ,EAAK,QAAU,KACfA,EAAK,OAAS,KAEPA,EAAK,UAAU8O,CAAU,EAAE,KAAKmB,CAAoB,EAAE,MAASG,CAAiB,CAC1F,CAEDJ,IACA,IAAI5d,EAAQ,IAAI,MAAM,oCAAoC,EAC1D,OAAA4N,EAAK,WAAaqC,EAAU,OAAOjQ,CAAK,EACjC4N,EAAK,UACf,CAED,OAAOoQ,EAAiB,CACxC,CACS,CAKD,IAAIC,EAAmB,KAAK,aAAe,KAAO,KAAK,WAAW,MAAS,UAAY,CACnF,OAAOhO,EAAU,SAC7B,CAAS,EAAIA,EAAU,UAEf,YAAK,WAAagO,EAAiB,KAAK,UAAY,CAChD,IAAIvB,EAAaiB,EAAiB,GAClC,OAAA/P,EAAK,QAAU,KACfA,EAAK,OAAS,KAEPA,EAAK,UAAU8O,CAAU,EAAE,KAAK,SAAUD,EAAQ,CACrD7O,EAAK,QAAU6O,EAAO,QACtBmB,IACAhQ,EAAK,6BAA4B,EACjCA,EAAK,YAAckQ,EAAWH,CAAgB,CAC9D,CAAa,CACb,CAAS,EAAE,MAAS,UAAY,CACpBC,IACA,IAAI5d,EAAQ,IAAI,MAAM,oCAAoC,EAC1D,OAAA4N,EAAK,WAAaqC,EAAU,OAAOjQ,CAAK,EACjC4N,EAAK,UACxB,CAAS,EAEDwC,EAAoB,KAAK,WAAYD,EAAUE,CAAa,EACrD,KAAK,UACpB,EAEIkM,EAAY,UAAU,SAAW,SAAkBG,EAAY,CAC3D,MAAO,CAAC,CAACf,GAAce,EAC/B,EAEIH,EAAY,UAAU,QAAU,SAAiB2B,EAA6B,CAC1E7B,GAAO,KAAM6B,CAA2B,CAChD,EAEI3B,EAAY,UAAU,qBAAuB,SAA8BmB,EAAS,CAEhF,QADIC,EAAmB,CAAA,EACdxkB,EAAI,EAAGuT,EAAMgR,EAAQ,OAAQvkB,EAAIuT,EAAKvT,IAAK,CAChD,IAAIujB,EAAagB,EAAQvkB,GACrB,KAAK,SAASujB,CAAU,GACxBiB,EAAiB,KAAKjB,CAAU,CAEvC,CACD,OAAOiB,CACf,EAEIpB,EAAY,UAAU,6BAA+B,UAAwC,CAKzF,QAASpjB,EAAI,EAAGuT,EAAMqP,GAAe,OAAQ5iB,EAAIuT,EAAKvT,IAClD8iB,GAAc,KAAMF,GAAe5iB,EAAE,CAEjD,EAEIojB,EAAY,UAAU,eAAiB,SAAwB9iB,EAAS,CACpE,OAAO,IAAI8iB,EAAY9iB,CAAO,CACtC,EAEW8iB,CACX,IAMI4B,GAAiB,IAAI5B,GAEzB9Y,EAAO,QAAU0a,EAEjB,EAAE,CAAC,EAAI,CAAC,CAAC,CAAC,EAAE,CAAA,EAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CACrB,CAAC"}